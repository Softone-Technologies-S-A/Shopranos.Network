[
  {
    "Name": "AddToCart",
    "Html": "<!-- <div class=\"d-flex justify-content-between align-items-center\"> -->\n<template v-if=\"!this.detail\">\n    <div v-if=\"product.showPrice\" style=\"height: 48px;\" class=\"product-price d-flex flex-column\">\n        <template v-if=\"isCalculated\">\n            <span v-if=\"this._hasDiscount(product.productVariants[0])\" class=\"text-primary\">\n                {{this._calculateCurrency(product.productVariants[0].price, 2)}}\n                <del class=\"fs-sm text-muted\">\n                    {{this._calculateCurrency(product.productVariants[0].initialPrice, 2)}}\n                </del>\n\n            </span>\n            <span v-else class=\"text-primary\">\n                {{this._calculateCurrency(product.productVariants[0].price, 2)}}\n            </span>\n        </template>\n        <div v-else>\n            <div class=\"spinner-grow spinner-grow-sm text-primary\" role=\"status\" style=\"width:10px;height:10px\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <div class=\"spinner-grow spinner-grow-sm text-primary mx-2\" role=\"status\" style=\"width:10px;height:10px\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <div class=\"spinner-grow spinner-grow-sm text-primary\" role=\"status\" style=\"width:10px;height:10px\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n        <div>\n            <span v-if=\"product.productVariants[0].salesUnitId != null\" class=\"fs-xs d-none d-md-inline\">\n                /\n                {{product.productVariants[0]?.unit}}\n            </span>\n            <span v-else class=\"fs-xs d-none d-md-inline\"> / ##Unit##</span>\n        </div>\n    </div>\n    <div v-if=\"product.productVariants[0].canOrder\" class=\"d-flex\">\n        <div v-if=\"product.productVariants[0].canOrder\" class=\"d-flex\">\n            <input v-if=\"product.productVariants[0].sellOutOfStock\" class=\"form-control quantity mx-2\" type=\"number\"\n                   v-model=\"product.productVariants[0].selectedQuantity\"\n                   :step=\"product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   :min=\"product.productVariants[0].minOrderQuantity!==null && product.productVariants[0].minOrderQuantity>0?product.productVariants[0].minOrderQuantity:product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   @change=\"this._onQuantityChange(product)\">\n            <input v-else class=\"form-control quantity\" type=\"number\"\n                   v-model=\"product.productVariants[0].selectedQuantity\"\n                   :min=\"product.productVariants[0].minOrderQuantity!==null && product.productVariants[0].minOrderQuantity>0?product.productVariants[0].minOrderQuantity:product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   :max=\"product.productVariants[0].quantity\"\n                   :step=\"product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   @change=\"this._onQuantityChange(product)\">\n        </div>\n        <button class=\"btn btn-primary cart-icon\" type=\"button\" @click=\"addToCart(product, index)\">\n            <span v-bind:class=\"{hidden:isLoading(index)}\">\n                <i class=\"ci-cart fs-sm me-1 pt-2\"></i>\n            </span>\n            <span v-bind:class=\"{hidden:!isLoading(index)}\" class=\"spinner-border spinner-border-sm\" role=\"status\"\n                  aria-hidden=\"true\"></span>\n        </button>\n    </div>\n</template>\n<template v-else>\n    <div class=\"d-flex justify-content-between align-items-center mb-2\">\n        <div v-if=\"product.showPrice\" style=\"height: 48px;\" class=\"product-price\">\n            <template v-if=\"isCalculated\">\n                <span v-if=\"this.globalModel.operationMode === 'Retail'\">\n                    <del v-if=\"product.productVariants[0].retail.initialPrice > 0 && product.productVariants[0].retail.initialPrice > product.productVariants[0].retail.price\" class=\"fs-sm text-muted ml-2\">\n                        {{this._calculateCurrency(product.productVariants[0].retail.initialPrice, 2)}}\n                    </del>\n                    <span class=\"text-primary ml-2\">{{this._calculateCurrency(product.productVariants[0].retail.price)}}</span>\n                </span>\n                <span v-else>\n                    <span v-if=\"this._hasDiscount(product.productVariants[0])\" class=\"text-primary\">\n                        {{this._calculateCurrency(product.productVariants[0].price)}}\n                        <del class=\"fs-sm text-muted\">{{this._calculateCurrency(product.productVariants[0].initialPrice)}}</del>\n                    </span>\n                    <span v-else class=\"text-primary\">{{this._calculateCurrency(product.productVariants[0].price)}}</span>\n                </span>\n            </template>\n            <div v-else>\n                <div class=\"spinner-grow spinner-grow-sm text-primary\" role=\"status\" style=\"width:10px;height:10px\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow spinner-grow-sm text-primary mx-2\" role=\"status\" style=\"width:10px;height:10px\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow spinner-grow-sm text-primary\" role=\"status\" style=\"width:10px;height:10px\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n            <div>\n                <span v-if=\"product.productVariants[0].salesUnitId != null\" class=\"fs-xs d-none d-md-inline\">\n                    /\n                    {{product.productVariants[0]?.unit}}\n                </span>\n                <span v-else class=\"fs-xs d-none d-md-inline\"> / ##Unit##</span>\n            </div>\n        </div>\n        <div v-if=\"product.productVariants[0].canOrder\" class=\"d-flex\">\n            <input v-if=\"product.productVariants[0].sellOutOfStock\" class=\"form-control quantity mx-2\" type=\"number\"\n                   v-model=\"product.productVariants[0].selectedQuantity\"\n                   :step=\"product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   :min=\"product.productVariants[0].minOrderQuantity!==null && product.productVariants[0].minOrderQuantity>0?product.productVariants[0].minOrderQuantity:product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   @change=\"this._onQuantityChange(product)\">\n            <input v-else class=\"form-control quantity\" type=\"number\"\n                   v-model=\"product.productVariants[0].selectedQuantity\"\n                   :min=\"product.productVariants[0].minOrderQuantity!==null && product.productVariants[0].minOrderQuantity>0?product.productVariants[0].minOrderQuantity:product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   :max=\"product.productVariants[0].quantity\"\n                   :step=\"product.productVariants[0].orderQuantityStep!==null && product.productVariants[0].orderQuantityStep>0?product.productVariants[0].orderQuantityStep:1\"\n                   @change=\"this._onQuantityChange(product)\">\n        </div>\n\n    </div>\n    <button v-if=\"product.productVariants[0].canOrder\" class=\"cart-button btn btn-primary btn-sm d-block w-100 mb-2\"\n            v-on:click=\"addToCart2(product,$event)\" style=\"height:36px;\">\n        <span class=\"add-to-cart\" style=\"left:55%\">\n            <i class=\"ci-cart fs-sm\" style=\"left:-20%\"></i>##AddtoCart##\n        </span>\n        <span class=\"added\">##AddtoCart##</span>\n        <i class=\"ci-cart\"></i>\n        <span class=\"cart-item-circle\">{{product.productVariants[0].selectedQuantity}}</span>\n    </button>\n</template>\n<!-- </div> -->",
    "Translations": [
      {
        "Key": "Per_Unit",
        "Value": "Per_Unit",
        "Translation": {
          "EL": "ανά τεμάχιο",
          "EN": "per unit"
        }
      },
      {
        "Key": "Unit",
        "Value": "Unit",
        "Translation": {
          "EL": "τεμάχιο",
          "EN": "unit",
          "RO": "unitate"
        }
      },
      {
        "Key": "Per",
        "Value": "Per",
        "Translation": {
          "EL": "ανά",
          "EN": "per"
        }
      },
      {
        "Key": "AddtoCart",
        "Value": "Add to Cart",
        "Translation": {
          "EL": "Προσθήκη",
          "EN": "Add to Cart"
        }
      }
    ],
    "Js": "const addtocart = {\n    props:\n    {\n        model: Object,\n        detail: Boolean,\n        isCalculated: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n\n        return {\n            globalModel: this._global,\n            product: this.model,\n            loadingKey: null,\n        }\n    },\n    beforeMount() {\n\n        this.product.productVariants[0].selectedQuantity = this._findSelected(this.product.productVariants[0].suggestedOrderQuantity, this.product.productVariants[0].minOrderQuantity, this.product.productVariants[0].orderQuantityStep);\n\n    },\n    methods: {\n        async addToCart(product, i) {\n            this.loadingKey = i;\n            await this._addToCartAsync(product.id, product.productVariants[0].id, product.productVariants[0].selectedQuantity);\n            product.productVariants[0].selectedQuantity = this._findSelected(product.productVariants[0].suggestedOrderQuantity, product.productVariants[0].minOrderQuantity, product.productVariants[0].orderQuantityStep);\n            this.loadingKey = null;\n        },\n        isLoading(i) {\n            return this.loadingKey === i;\n        },\n\n        async addToCart2(product, e) {\n            var clickedElement = e.target;\n            if (clickedElement.tagName.toLowerCase() == 'span') {\n                clickedElement.parentElement.classList.add('clicked');\n                clickedElement.parentElement.classList.add('disabled');\n            } else {\n                clickedElement.classList.add('clicked');\n                clickedElement.classList.add('disabled');\n            }\n            await this._addToCartAsync(product.id, product.productVariants[0].id, product.productVariants[0].selectedQuantity);\n            setTimeout(() => {\n                if (clickedElement.tagName.toLowerCase() == 'span') {\n                    clickedElement.parentElement.classList.remove('clicked');\n                    clickedElement.parentElement.classList.remove('disabled');\n                } else {\n                    clickedElement.classList.remove('clicked');\n                    clickedElement.classList.remove('disabled');\n                }\n                product.productVariants[0].selectedQuantity = this._findSelected(product.productVariants[0].suggestedOrderQuantity, product.productVariants[0].minOrderQuantity, product.productVariants[0].orderQuantityStep);\n\n            }, 1500);\n        },\n    }\n}\n\napp.component('addtocart', {\n    extends: addtocart,\n    template: '#addtocart'\n});"
  },
  {
    "Name":"Addresses",
    "Html":"<!-- Addresses list-->\r\n<div class=\"table-responsive fs-md\">\r\n    <table class=\"table table-hover mb-0\">\r\n        <thead>\r\n            <tr>\r\n                <th>Address</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for=\"(address, index) in user?.addresses\" :key=\"index\">\r\n                <td class=\"py-3 align-middle\">\r\n                    <span v-if=\"!address.isEditing\">\r\n                        {{ address?.address1 }}\r\n                        <template v-if=\"address?.firstName\">\r\n                            , {{ address?.firstName }}\r\n                        </template>\r\n                        <template v-if=\"address?.lastName\">\r\n                            , {{ address?.lastName }}\r\n                        </template>\r\n                        <template v-if=\"address?.email\">\r\n                            , {{ address?.email }}\r\n                        </template>\r\n                        <template v-if=\"address?.phoneNumber\">\r\n                            , {{ address?.phoneNumber }}\r\n                        </template>\r\n                        <template v-if=\"address?.address2\">\r\n                            , {{ address?.address2 }}\r\n                        </template>\r\n                        <template v-if=\"address?.city\">\r\n                            , {{ address?.city }}\r\n                        </template>\r\n                        <template v-if=\"address?.country\">\r\n                            , {{ address?.country }}\r\n                        </template>\r\n                        <template v-if=\"address?.postalCode\">\r\n                            , {{ address?.postalCode }}\r\n                        </template>\r\n                        <template v-if=\"address?.state\">\r\n                            , {{ address?.state }}\r\n                        </template>\r\n                    </span>\r\n                    <span v-else>\r\n                        {{address?.editedAddress}}\r\n                    </span>\r\n                    <span class=\"align-middle badge bg-info ms-2\" v-if=\"!address.isEditing && index === 0\">Primary</span>\r\n                </td>\r\n                <td class=\"py-3 align-middle\">\r\n                    <a v-if=\"!address.isEditing\" class=\"nav-link-style me-2\" href=\"#\" @click=\"startEditing(address, index)\">\r\n                        <i class=\"ci-edit\"></i>\r\n                    </a>\r\n                    <a v-if=\"!address.isEditing\" class=\"nav-link-style text-danger\" href=\"#\" @click=\"deleteAddress(index)\" aria-label=\"Remove\" data-bs-original-title=\"Remove\">\r\n                        <div class=\"ci-trash\"></div>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<!-- Edit address modal -->\r\n<div class=\"modal fade\" id=\"editAddressForm\" tabindex=\"-1\" aria-labelledby=\"editAddressFormLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-xl h-100 d-flex align-items-center m-auto\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"editAddressFormLabel\">##Edit_Address##</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"container px-0\">\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedFirstName\" class=\"form-label\">##FirstName##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.firstName\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'firstName').value === '' ? 'is-invalid' : '']\" id=\"editedFirstName\" placeholder=\"##EnterFirstName##\" required=\"\" @change=\"updateEditInfo('firstName', editedAddress.firstName)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'firstName').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedLastName\" class=\"form-label\">##LastName##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.lastName\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'lastName').value === '' ? 'is-invalid' : '']\" id=\"editedLastName\" placeholder=\"##EnterLastName##\" required=\"\" @change=\"updateEditInfo('lastName', editedAddress.lastName)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'lastName').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedEmail\" class=\"form-label\">##Email##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.email\" type=\"email\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'email').value === '' ? 'is-invalid' : '']\" id=\"editedEmail\" placeholder=\"##EnterEmail##\" required=\"\" @change=\"updateEditInfo('email', editedAddress.email)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'email').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                            <small v-else-if=\"(!/^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})$/.test(editedAddress.email))\" class=\"text-danger\">##InvalidEmailText##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedPhoneNumber\" class=\"form-label\">##PhoneNumber##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.phoneNumber\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'phoneNumber').value === '' ? 'is-invalid' : '']\" id=\"editedPhoneNumber\" placeholder=\"##EnterPhoneNumber##\" required=\"\" @change=\"updateEditInfo('phoneNumber', editedAddress.phoneNumber)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'phoneNumber').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedAddress\" class=\"form-label\">##Address1##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.address1\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'newAddress').value === '' ? 'is-invalid' : '']\" id=\"editedAddress\" placeholder=\"##Enteraddress##\" required=\"\" @change=\"updateEditInfo('newAddress', editedAddress.address1)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'newAddress').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedAddress2\" class=\"form-label\">##Address2##</label>\r\n                            <input v-model=\"editedAddress.address2\" type=\"text\" class=\"form-control\" id=\"editedAddress2\" placeholder=\"##Entersecondaddress##\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedCity\" class=\"form-label\">##City##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.city\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'city').value === '' ? 'is-invalid' : '']\" id=\"editedCity\" placeholder=\"##Entercityname##\" required=\"\" @change=\"updateEditInfo('city', editedAddress.city)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'city').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedCountry\" class=\"form-label\">##Country##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.country\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'country').value === '' ? 'is-invalid' : '']\" id=\"editedCountry\" placeholder=\"##Entercountry##\" required=\"\" @change=\"updateEditInfo('country', editedAddress.country)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'country').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedState\" class=\"form-label\">##State##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.state\" type=\"text\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'state').value === '' ? 'is-invalid' : '']\" id=\"editedState\" placeholder=\"##Enterstate##\" required=\"\" @change=\"updateEditInfo('state', editedAddress.state)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'state').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"editedPostalCodeInput\" class=\"form-label\">##Postcode_ZIP##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"editedAddress.postalCode\" type=\"number\" class=\"form-control\" :class=\"[this.editedErrors.find(o => o.key === 'postalCode').value === '' ? 'is-invalid' : '']\" id=\"editedPostalCodeInput\" placeholder=\"##Enterpostalcode##\" required=\"\" @change=\"updateEditInfo('postalCode', editedAddress.postalCode)\">\r\n                            <small v-if=\"this.editedErrors.find(o => o.key === 'postalCode').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">##Close##</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"saveEditedAddress()\">##Save##</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Add new address modal -->\r\n<div class=\"modal fade\" id=\"addAddressForm\" tabindex=\"-1\" aria-labelledby=\"addAddressFormLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-xl h-100 d-flex align-items-center m-auto\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"addAddressFormLabel\">##Add_New_Address##</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"container px-0\">\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"firstName\" class=\"form-label\">##FirstName##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"firstName\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'firstName').value === '' ? 'is-invalid' : '']\" id=\"firstName\" placeholder=\"##EnterFirstName##\" required=\"\" @change=\"updateInfo('firstName', firstName)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'firstName').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"LastName\" class=\"form-label\">##LastName##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"lastName\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'lastName').value === '' ? 'is-invalid' : '']\" id=\"LastName\" placeholder=\"##EnterLastName##\" required=\"\" @change=\"updateInfo('lastName', lastName)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'lastName').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newEmailInput\" class=\"form-label\">##Email##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"email\" type=\"email\" class=\"form-control\" :class=\"[((this.errors.find(o => o.key === 'email').value === '') || ((this.errors.find(o => o.key === 'email').value !== '' && this.errors.find(o => o.key === 'email').value !== 'nullInputField') && (!/^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})$/.test(email)))) ? 'is-invalid' : '']\" id=\"newEmailInput\" placeholder=\"##EnterEmail##\" required=\"\" @change=\"updateInfo('email', email)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'email').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                            <small v-if=\"((this.errors.find(o => o.key === 'email').value !== '' && this.errors.find(o => o.key === 'email').value !== 'nullInputField') && (!/^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})$/.test(email)))\" class=\"text-danger\">##InvalidEmailText##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newPhoneNumberInput\" class=\"form-label\">##PhoneNumber##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"phoneNumber\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'phoneNumber').value === '' ? 'is-invalid' : '']\" id=\"newPhoneNumberInput\" placeholder=\"##EnterPhoneNumber##\" required=\"\" @change=\"updateInfo('phoneNumber', phoneNumber)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'phoneNumber').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newAddressInput\" class=\"form-label\">##Address1##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"newAddress\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'newAddress').value === '' ? 'is-invalid' : '']\" id=\"newAddressInput\" placeholder=\"##Enteraddress##\" required=\"\" @change=\"updateInfo('newAddress', newAddress)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'newAddress').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newAddressInput1\" class=\"form-label\">##Address2##</label>\r\n                            <input v-model=\"newAddress1\" type=\"text\" class=\"form-control\" id=\"newAddressInput1\" placeholder=\"##Entersecondaddress##\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newcityInput\" class=\"form-label\">##City##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"city\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'city').value === '' ? 'is-invalid' : '']\" id=\"newcityInput\" placeholder=\"##Entercityname##\" required=\"\" @change=\"updateInfo('city', city)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'city').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newCountryInput\" class=\"form-label\">##Country##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"country\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'country').value === '' ? 'is-invalid' : '']\" id=\"newCountryInput\" placeholder=\"##Entercountry##\" required=\"\" @change=\"updateInfo('country', country)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'country').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newStateInput\" class=\"form-label\">##State##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"state\" type=\"text\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'state').value === '' ? 'is-invalid' : '']\" id=\"newStateInput\" placeholder=\"##Enterstate##\" required=\"\" @change=\"updateInfo('state', state)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'state').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"newPostalCodeInput\" class=\"form-label\">##Postcode_ZIP##<span class=\"text-danger\">*</span></label>\r\n                            <input v-model=\"postalCode\" type=\"number\" class=\"form-control\" :class=\"[this.errors.find(o => o.key === 'postalCode').value === '' ? 'is-invalid' : '']\" id=\"newPostalCodeInput\" placeholder=\"##Enterpostalcode##\" required=\"\" @change=\"updateInfo('postalCode', postalCode)\">\r\n                            <small v-if=\"this.errors.find(o => o.key === 'postalCode').value === ''\" class=\"text-danger\">##NullInputField##</small>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" @click=\"modalCloseNew()\">##Close##</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"createNewAddress(address)\">##Add_New_Address##</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"text-sm-start pt-4\"><a class=\"btn btn-primary\" @click=\"modalOpenNew('addAddressForm')\" >##Add_New_Address##</a></div>",
    "Translations":[
      {
        "Key":"Address",
        "Value":"Address",
        "Translation":{
          "EL":"Διεύθυνση",
          "EN":"Address",
          "RO":"Adresă"
        }
      },
      {
        "Key":"Actions",
        "Value":"Actions",
        "Translation":{
          "EL":"Ενέργειες",
          "EN":"Actions",
          "RO":"Acţiuni"
        }
      },
      {
        "Key":"Primary",
        "Value":"Primary",
        "Translation":{
          "EL":"Πρωτεύον",
          "EN":"Primary",
          "RO":"primar"
        }
      },
      {
        "Key":"Address1",
        "Value":"Address1",
        "Translation":{
          "EL":"Διεύθυνση 1",
          "EN":"Address 1",
          "RO":"Adresa 1"
        }
      },
      {
        "Key":"Address2",
        "Value":"Address2",
        "Translation":{
          "EL":"Διεύθυνση 2",
          "EN":"Address 2",
          "RO":"Adresa 2"
        }
      },
      {
        "Key":"Edit_Address",
        "Value":"Edit_Address",
        "Translation":{
          "EL":"Επεξεργασία διεύθυνσης",
          "EN":"Edit Address",
          "RO":"Editați adresa"
        }
      },
      {
        "Key":"City",
        "Value":"City",
        "Translation":{
          "EL":"Πόλη",
          "EN":"City",
          "RO":"Orașul"
        }
      },
      {
        "Key":"State",
        "Value":"State",
        "Translation":{
          "EL":"Περιφέρεια",
          "EN":"State",
          "RO":"Regiune"
        }
      },
      {
        "Key":"Country",
        "Value":"Country",
        "Translation":{
          "EL":"Χώρα",
          "EN":"Country",
          "RO":"Țara"
        }
      },
      {
        "Key":"Postcode_ZIP",
        "Value":"Postcode_ZIP",
        "Translation":{
          "EL":"Ταχυδρομικός κώδικας / ΤΚ",
          "EN":"Postcode / ZIP",
          "RO":"Cod poştal"
        }
      },
      {
        "Key":"Close",
        "Value":"Close",
        "Translation":{
          "EL":"Κλείσιμο",
          "EN":"Close",
          "RO":""
        }
      },
      {
        "Key":"Save",
        "Value":"Save",
        "Translation":{
          "EL":"Αποθήκευση",
          "EN":"Save",
          "RO":"Salvați"
        }
      },
      {
        "Key":"Add_New_Address",
        "Value":"Add_New_Address",
        "Translation":{
          "EL":"Προσθήκη Νέας Διεύθυνσης",
          "EN":"Add New Address",
          "RO":"Adăugați o adresă nouă"
        }
      },
        {"Key":"FirstName",
        "Value":"FirstName",
        "Translation":{
          "EL":"Όνομα",
          "EN":"Name",
          "RO":"Nume"
        }
      },
      {
        "Key":"LastName",
        "Value":"LastName",
        "Translation":{
          "EL":"Επίθετο",
          "EN":"Last Name",
          "RO":"Nume de familie"
        }
      },
      {
        "Key":"PhoneNumber",
        "Value":"PhoneNumber",
        "Translation":{
          "EL":"Αριθμός τηλεφώνου",
          "EN":"Phone Number",
          "RO":"Număr de telefon"
        }
      },
      {
        "Key":"State",
        "Value":"State",
        "Translation":{
          "EL":"Περιφερειακή Ενότητα",
          "EN":"State",
          "RO":"Judeţ"
        }
      },
      {
        "Key":"EnterFirstName",
        "Value":"EnterFirstName",
        "Translation":{
          "EL":"Όνομα",
          "EN":"Enter First Name",
          "RO":"Nume"
        }
        },
          {
            "Key":"EnterLastName",
          "Value":"EnterLastName",
          "Translation":{
            "EL":"Επίθετο",
          "EN":"Enter Last Name",
          "RO":"Numele de familie"
        }
      },
      {
        "Key":"EnterPhoneNumber",
        "Value":"EnterPhoneNumber",
        "Translation":{
          "EL":"Τηλέφωνο",
          "EN":"Enter Phone Name",
          "RO":"Telefon"
        }
      },
      {
        "Key":"Enteraddress",
        "Value":"Enteraddress",
        "Translation":{
          "EL":"Διεύθυνση",
          "EN":"Enter Address",
          "RO":"Adresa"
        }
      },
      {
        "Key":"Entersecondaddress",
        "Value":"Entersecondaddress",
        "Translation":{
          "EL":"Διεύθυνση 2",
          "EN":"Enter Second Address",
          "RO":"Adresa 2"
        }
      },
      {
        "Key":"Entercityname",
        "Value":"Entercityname",
        "Translation":{
          "EL":"Πόλη",
          "EN":"Enter City Name",
          "RO":"Orașul"
        }
      },
      {
        "Key":"Entercountry",
        "Value":"Entercountry",
        "Translation":{
          "EL":"Χώρα",
          "EN":"Enter Country",
          "RO":"Țara"
        }
      },
      {
        "Key":"Enterstate",
        "Value":"Enterstate",
        "Translation":{
          "EL":"Περιφερειακή Ενότητα",
          "EN":"Enter State",
          "RO":"Secțiunea regională"
        }
      },
      {
        "Key":"EnterEmail",
        "Value":"EnterEmail",
        "Translation":{
          "EL":"Εισαγωγή Email",
          "EN":"Enter Email",
          "RO":"Enter Email"
        }
      },
      {
        "Key":"Email",
        "Value":"Email",
        "Translation":{
          "EL":"Email",
          "EN":"Email",
          "RO":"Email"
        }
      },
      {
        "Key":"Enterpostalcode",
        "Value":"Enterpostalcode",
        "Translation":{
          "EL":"Ταχυδρομικός κώδικας / ΤΚ",
          "EN":"Enter Postal Code",
          "RO":"Cod poștal"
        }
      },
      {
        "Key":"NullInputField",
        "Value":"NullInputField",
        "Translation":{
          "EL":"Το πεδίο είναι υποχρεωτικό",
          "EN":"Input field is required",
          "RO":"Input field is required"
        }
      },
      {
        "Key":"InvalidEmailText",
        "Value":"InvalidEmailText",
        "Translation":{
          "EL":"Η διεύθυνση email δεν είναι σωστή",
          "EN":"The value is not a valid email address",
          "RO":"Adresa de email nu este validă"
        }
      }
    ],
    "Js":"const addresses = {\r\n    props:\r\n        {},\r\n    data() {\r\n        return {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            newAddress: \"\",\r\n            newAddress1: \"\",\r\n            city: \"\",\r\n            country: \"\",\r\n            postalCode: \"\",\r\n            state: \"\",\r\n            editedAddress: \"\",\r\n\r\n            checkError: true,\r\n            user: null,\r\n            modalNew: '',\r\n            modalEdit: '',\r\n            resetAddNewModalValues: '',\r\n\r\n            errors: [\r\n                { 'key': 'firstName', 'value': 'nullInputField'},\r\n                { 'key': 'lastName', 'value': 'nullInputField'},\r\n                { 'key': 'email', 'value': 'nullInputField'},\r\n                { 'key': 'phoneNumber', 'value': 'nullInputField'},\r\n                { 'key': 'newAddress', 'value': 'nullInputField'},\r\n                { 'key': 'city', 'value': 'nullInputField'},\r\n                { 'key': 'country', 'value': 'nullInputField'},\r\n                { 'key': 'postalCode', 'value': 'nullInputField'},\r\n                { 'key': 'state', 'value': 'nullInputField'},\r\n            ],\r\n            editedErrors: [\r\n                { 'key': 'firstName', 'value': 'nullInputField'},\r\n                { 'key': 'lastName', 'value': 'nullInputField'},\r\n                { 'key': 'email', 'value': 'nullInputField'},\r\n                { 'key': 'phoneNumber', 'value': 'nullInputField'},\r\n                { 'key': 'newAddress', 'value': 'nullInputField'},\r\n                { 'key': 'city', 'value': 'nullInputField'},\r\n                { 'key': 'country', 'value': 'nullInputField'},\r\n                { 'key': 'postalCode', 'value': 'nullInputField'},\r\n                { 'key': 'state', 'value': 'nullInputField'},\r\n            ]\r\n        }\r\n    },\r\n    mounted() {\r\n        this.retail_user();\r\n    },\r\n    computed: {\r\n        checkInputsValidation() {\r\n            this.updateInfo('firstName', this.firstName);\r\n            this.updateInfo('lastName', this.lastName);\r\n            this.updateInfo('email', this.email);\r\n            this.updateInfo('phoneNumber', this.phoneNumber);\r\n            this.updateInfo('newAddress', this.newAddress);\r\n            this.updateInfo('city', this.city);\r\n            this.updateInfo('country', this.country);\r\n            this.updateInfo('state', this.state);\r\n            this.updateInfo('postalCode', this.postalCode);\r\n            if(\r\n                this.updateInfo('firstName', this.firstName) &&\r\n                this.updateInfo('lastName', this.lastName) &&\r\n                this.updateInfo('email', this.email) &&\r\n                this.updateInfo('phoneNumber', this.phoneNumber) &&\r\n                this.updateInfo('newAddress', this.newAddress) &&\r\n                this.updateInfo('city', this.city) &&\r\n                this.updateInfo('country', this.country) &&\r\n                this.updateInfo('state', this.state) &&\r\n                this.updateInfo('postalCode', this.postalCode)\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n        checkEditInputsValidation() {\r\n            this.updateEditInfo('firstName', this.editedAddress.firstName);\r\n            this.updateEditInfo('lastName', this.editedAddress.lastName);\r\n            this.updateEditInfo('email', this.editedAddress.email);\r\n            this.updateEditInfo('phoneNumber', this.editedAddress.phoneNumber);\r\n            this.updateEditInfo('newAddress', this.editedAddress.newAddress);\r\n            this.updateEditInfo('city', this.editedAddress.city);\r\n            this.updateEditInfo('country', this.editedAddress.country);\r\n            this.updateEditInfo('state', this.editedAddress.state);\r\n            this.updateEditInfo('postalCode', this.editedAddress.postalCode);\r\n            if(\r\n                this.updateEditInfo('firstName', this.editedAddress.firstName) &&\r\n                this.updateEditInfo('lastName', this.editedAddress.lastName) &&\r\n                this.updateEditInfo('email', this.editedAddress.email) &&\r\n                this.updateEditInfo('phoneNumber', this.editedAddress.phoneNumber) &&\r\n                this.updateEditInfo('newAddress', this.editedAddress.newAddress) &&\r\n                this.updateEditInfo('city', this.editedAddress.city) &&\r\n                this.updateEditInfo('country', this.editedAddress.country) &&\r\n                this.updateEditInfo('state', this.editedAddress.state) &&\r\n                this.updateEditInfo('postalCode', this.editedAddress.postalCode)\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        modalOpenNew(id) {\r\n            this.modalNew = new bootstrap.Modal(document.getElementById(id));\r\n            this.modalNew.show();\r\n        },\r\n        modalCloseNew() {\r\n            // Reset form input fields\r\n            this.firstName = '';\r\n            this.lastName = '';\r\n            this.email = '';\r\n            this.phoneNumber = '';\r\n            this.newAddress = '';\r\n            this.newAddress1 = '';\r\n            this.city = '';\r\n            this.country = '';\r\n            this.postalCode = '';\r\n            this.state = '';\r\n            this.errors.find(o => o.key === 'firstName').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'lastName').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'email').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'phoneNumber').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'newAddress').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'city').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'country').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'postalCode').value = 'nullInputField';\r\n            this.errors.find(o => o.key === 'state').value = 'nullInputField';\r\n\r\n            // Close add new address modal\r\n            this.modalNew.hide();\r\n        },\r\n        modalOpenEdit(id) {\r\n            this.modalEdit = new bootstrap.Modal(document.getElementById(id));\r\n            this.modalEdit.show();\r\n        },\r\n        modalCloseEdit() {\r\n            this.modalEdit.hide();\r\n        },\r\n\r\n        updateInfo(destination, name) {\r\n            this.errors.find(o => o.key === destination).value = name;\r\n            if (name !== '' && name !== 'nullInputField') {return true;} else {return false;}\r\n        },\r\n        updateEditInfo(destination, name) {\r\n            this.editedErrors.find(o => o.key === destination).value = name;\r\n            if (name !== '') {return true;} else {return false;}\r\n        },\r\n\r\n        retail_user() {\r\n            this._getRetailUserProfile(e => {\r\n                this.user = e.user;\r\n            });\r\n        },\r\n\r\n        startEditing(address, ind) {\r\n            // address.isEditing = true;\r\n            this.editedAddress = {\r\n                firstName: address.firstName,\r\n                lastName: address.lastName,\r\n                email: address.email,\r\n                phoneNumber: address.phoneNumber,\r\n                address1: address.address1,\r\n                address2: address.address2,\r\n                city: address.city,\r\n                country: address.country,\r\n                postalCode: address.postalCode,\r\n                state: address.state,\r\n                index: ind\r\n            };\r\n            this.modalOpenEdit('editAddressForm');\r\n        },\r\n        saveEditedAddress() {\r\n            if (this.checkEditInputsValidation) {\r\n                // const editedAddress = this.user.addresses.find(address => address.isEditing);\r\n                // const index = this.user.addresses.indexOf(editedAddress);\r\n                index = this.editedAddress.index;\r\n\r\n                // Update the address information in the user object\r\n                this.user.addresses[index].firstName = this.editedAddress.firstName;\r\n                this.user.addresses[index].lastName = this.editedAddress.lastName;\r\n                this.user.addresses[index].email = this.editedAddress.email;\r\n                this.user.addresses[index].phoneNumber = this.editedAddress.phoneNumber;\r\n                this.user.addresses[index].address1 = this.editedAddress.address1;\r\n                this.user.addresses[index].address2 = this.editedAddress.address2;\r\n                this.user.addresses[index].city = this.editedAddress.city;\r\n                this.user.addresses[index].country = this.editedAddress.country;\r\n                this.user.addresses[index].postalCode = this.editedAddress.postalCode;\r\n                this.user.addresses[index].state = this.editedAddress.state;\r\n\r\n                // Prepare the data to update the user profile\r\n                const addressesToUpdate = {\r\n                    Addresses: this.user.addresses.map((addr) => ({\r\n                        firstName: addr.firstName,\r\n                        lastName: addr.lastName,\r\n                        email: addr.email,\r\n                        phoneNumber: addr.phoneNumber,\r\n                        address1: addr.address1,\r\n                        address2: addr.address2,\r\n                        city: addr.city,\r\n                        country: addr.country,\r\n                        postalCode: addr.postalCode,\r\n                        state: addr.state\r\n                    })),\r\n                };\r\n\r\n                // Call the method to update the user profile\r\n                this._updateRetailUserProfile(addressesToUpdate, (updatedAddresses) => {\r\n                    this.user.addresses = updatedAddresses.addresses;\r\n                    this.editedAddress = '';\r\n                });\r\n\r\n                // Reset the isEditing property\r\n                editedAddress.isEditing = false;\r\n                this.modalCloseEdit();\r\n            }\r\n        },\r\n\r\n        deleteAddress(index) {\r\n\r\n            const addressesCopy = {\r\n                Addresses: [...this.user.addresses],\r\n            };\r\n            // Extract the address to be deleted\r\n            const deletedAddress = addressesCopy.Addresses.splice(index, 1)[0];\r\n\r\n            this.user.addresses = addressesCopy.Addresses;\r\n\r\n            this._updateRetailUserProfile(addressesCopy, updatedAddresses => {\r\n                this.editedAddress = '';\r\n\r\n            });\r\n\r\n\r\n        },\r\n\r\n        createNewAddress() {\r\n            if (this.checkInputsValidation) {\r\n                if (!this.user.addresses) {\r\n                    // Initialize the user addresses with a default structure\r\n                    this.user.addresses = [];\r\n                }\r\n    \r\n                const newAddressObject = {\r\n                    firstName: this.firstName,\r\n                    lastName: this.lastName,\r\n                    email: this.email,\r\n                    phoneNumber: this.phoneNumber,\r\n                    address1: this.newAddress,\r\n                    address2: this.newAddress1,\r\n                    city: this.city,\r\n                    country: this.country,\r\n                    postalCode: this.postalCode,\r\n                    state: this.state\r\n                };\r\n                this.user.addresses?.push(newAddressObject);\r\n    \r\n                const addressesToUpdate = {\r\n                    addresses: this.user.addresses?.map(addr => ({\r\n                        firstName: addr.firstName,\r\n                        lastName: addr.lastName,\r\n                        email: addr.email,\r\n                        phoneNumber: addr.phoneNumber,\r\n                        address1: addr.address1,\r\n                        address2: addr.address2,\r\n                        city: addr.city,\r\n                        country: addr.country,\r\n                        postalCode: addr.postalCode,\r\n                        state: addr.state\r\n                    }))\r\n                };\r\n    \r\n                // Call the _updateRetailUserProfile function with the updated addresses\r\n                this._updateRetailUserProfile(addressesToUpdate, updatedAddresses => {\r\n                    this.user.addresses = updatedAddresses.addresses;\r\n                });\r\n\r\n                this.modalCloseNew();\r\n            }\r\n        },\r\n    },\r\n\r\n}\r\n\r\napp.component('addresses', {\r\n    extends: addresses,\r\n    template: '#addresses'\r\n});"},
  {
    "Name": "Announcements",
    "Html": "<div class=\"table-responsive fs-md mb-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th class=\"text-start\">##Title##</th>\n                <th class=\"text-center\">##Description##</th>\n                <th class=\"text-center\">##Actions##</th>\n            </tr>\n        </thead>\n        <tbody v-if=\"announcements !=null && announcements.length > 0\">\n            <tr v-for=\"announcement in announcements\">\n                <td :class=\"announcement.userIds.includes(user.id)?'':'fw-bold fs-sm'\"\n                    class=\"py-3 text-start\">\n                    {{announcement.title}}\n                </td>\n                <td :class=\"announcement.userIds.includes(user.id)?'':'fw-bold fs-sm'\"\n                    class=\"py-3 text-center\">\n                    {{announcement.descriptionPlain}}\n                </td>\n                <td class=\"py-3 text-center\">\n                    <button @click=\"this.set_selectedAnnouncement(announcement)\" class=\"btn btn-primary btn-sm\">##View##</button>\n                </td>\n            </tr>\n        </tbody>\n        <tbody v-if=\"announcements === null || announcements.length === 0\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && totalCount === 0\">\n                        <i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<nav v-if=\"announcements!=null && announcements.length>0\" class=\"d-flex justify-content-between pt-2\"\n     aria-label=\"Page navigation\">\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">\n                <i class=\"ci-arrow-left me-2\"></i>##Prev##\n            </a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n\n        <li v-if=\"ShowFirstPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(1)\">1</a>\n        </li>\n        <li v-if=\"ShowPreviousPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowPreviousPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">{{PreviousPage}}</a>\n        </li>\n\n        <li class=\"page-item active d-none d-sm-block\" aria-current=\"page\">\n            <span class=\"page-link\">{{currentPage}} <span class=\"visually-hidden\">(current)</span></span>\n        </li>\n\n        <li v-if=\"ShowNextPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"nextPage()\">{{NextPage}}</a>\n        </li>\n        <li v-if=\"ShowNextPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowLastPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(LastPage)\">{{LastPage}}</a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\" v-on:click.prevent=\"nextPage()\">\n                ##Next##<i class=\"ci-arrow-right ms-2\"></i>\n            </a>\n        </li>\n    </ul>\n</nav>\n<div class=\"modal fade\" id=\"announcement-details-modal\" tabindex=\"-1\" aria-modal=\"true\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg modal-dialog-centered \" role=\"document\">\n        <div class=\"modal-content\" style=\"height:700px;\">\n            <div class=\"modal-body\">\n                <div v-if=\"this.selectedAnnouncement!==null\" class=\"px-5\" style=\"height:600px; overflow:auto\">\n                    <div v-if=\"selectedAnnouncement.title !== null && selectedAnnouncement.title !=''\" class=\"row\">\n                        <div class=\"h3 fw-bold mb-0 text-center pt-3\">{{selectedAnnouncement.title}}</div>\n                    </div>\n                    <div class=\"row pt-3\" style=\"height:90%\">\n                        <div v-if=\"selectedAnnouncement.image && selectedAnnouncement.image !== null && selectedAnnouncement.image.link && selectedAnnouncement.image.link !== null\"\n                            class=\"d-flex align-items-center justify-content-center\">\n                            <div class=\"d-flex justify-content-center rounded-3\">\n                                <img @onerror=\"this._handleImageError\" class=\"d-block \"\n                                    :src=\"selectedAnnouncement.image.link\" :alt=\"selectedAnnouncement.title\"\n                                    style=\"object-fit: cover; max-width:400px;max-height:400px;\">\n                            </div>\n                        </div>\n                        <div v-if=\"selectedAnnouncement.description !== null && selectedAnnouncement.description !=''\"\n                             class=\"d-flex align-self-center flex-wrap justify-content-center\">\n                            <div class=\"h4 p-0 pt-3\" style=\"text-align: justify!important;\" v-html=\"selectedAnnouncement.description\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</section>\n",
    "Translations": [
      {
        "Key": "Title",
        "Value": "Title",
        "Translation": {
          "EL": "Τίτλος",
          "EN": "Title",
          "RO": "Titlu"
        }
      },
      {
        "Key": "Description",
        "Value": "Description",
        "Translation": {
          "EL": "Περιγραφή",
          "EN": "Description",
          "RO": "Descriere"
        }
      },
      {
        "Key": "Actions",
        "Value": "Actions",
        "Translation": {
          "EL": "Ενέργειες",
          "EN": "Actions",
          "RO": "Acţiuni"
        }
      },
      {
        "Key": "View",
        "Value": "View",
        "Translation": {
          "EL": "Εμφάνιση",
          "EN": "View",
          "RO": "Vizualizare"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Loading",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "No results",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results",
          "RO": "Niciun rezultat"
        }
      },
      {
        "Key": "Prev",
        "Value": "Prev",
        "Translation": {
          "EL": "",
          "EN": "Prev",
          "RO": "Anterior"
        }
      },
      {
        "Key": "Next",
        "Value": "Next",
        "Translation": {
          "EL": "",
          "EN": "Next",
          "RO": "Următorul"
        }
      }
    ],
    "Js": "const announcements = {\n    props:\n        {},\n    data() {\n        return {\n            announcements: [],\n            selectedAnnouncement: null,\n            currentPage: 1,\n            pageCount: null,\n            totalCount: null,\n            isLoading: false,\n            globalModel: this._global,\n            user: null,\n            customer: null\n        }\n    },\n    mounted() {\n        if (this.globalModel.operationMode === 'Retail') {\n            this._getRetailUserProfile(e => {\n                this.user = e.user;\n            })\n        }\n        else {\n            this._getUserProfile(e => {\n                this.user = e.user;\n                this.customer = e.customer;\n            })\n        }\n        this.get_announcements();\n    },\n    methods: {\n        get_announcements() {\n            this.isLoading = true;\n            var currentDate = new Date().toISOString();\n            let params = {\n                page: this.currentPage,\n                pageSize: 10,\n                global: true,\n                from: `lte:${currentDate}`,\n                to: `gte:${currentDate}`,\n                isAuthenticated: true,\n            }\n            this._getActiveAnnouncements(params, e => {\n                this.announcements = e.model.item1;\n                this.currentPage = e.model.item2.pageNumber;\n                this.pageCount = e.model.item2.numberOfPages;\n                this.totalCount = e.model.item2.totalCount;\n                this.isLoading = false;\n            });\n        },\n        set_selectedAnnouncement(announcement) {\n            this.selectedAnnouncement = announcement;\n            var announcementModal = document.getElementById(\"announcement-details-modal\");\n            var announcementBootstrapModal = new bootstrap.Modal(announcementModal, {});\n            announcementBootstrapModal.show();\n            announcementModal.addEventListener('hide.bs.modal', function () {\n                var openedAnnouncement = this.announcements.find(a => a.id === announcement.id);\n                if (!openedAnnouncement.userIds.includes(this.user.id)) {\n                    openedAnnouncement.userIds.push(this.user.id);\n                    this._setReadAnnouncementIds([announcement.id]);\n                }\n                this.selectedAnnouncement = null;\n            });\n        },\n        nextPage() {\n            if (this.currentPage + 1 <= this.pageCount)\n                this.pagination(this.currentPage + 1)\n\n        },\n        prevPage() {\n            if (this.currentPage - 1 > 0)\n                this.pagination(this.currentPage - 1)\n\n        },\n        pagination(page) {\n            this.currentPage = page;\n            this.get_announcements();\n        },\n    },\n    computed: {\n        FirstPage: {\n            get() {\n                return 1;\n            }\n        },\n        NextPage: {\n\n            get() {\n                return this.currentPage + 1;\n            }\n        },\n        PreviousPage: {\n            get() {\n                return this.currentPage - 1;\n            }\n        },\n        LastPage: {\n            get() {\n                return this.pageCount;\n            }\n        },\n        ShowFirstPage: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n        ShowLastPage: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowNextPage: {\n            get() {\n\n                return this.currentPage < this.LastPage - 1;\n            }\n        },\n        ShowPreviousPage: {\n            get() {\n                return this.currentPage > 2;\n            }\n        },\n        ShowNext: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowPrevious: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n    }\n}\n\napp.component('announcements', {\n    extends: announcements,\n    template: '#announcements'\n});"
  },
  {
    "Name": "Billing",
    "Html": "<div class=\"row mb-4\">\n    <div class=\"col-sm-12\">\n        <div class=\"col-sm-12\">\n            <h2 class=\"h6 pb-3 border-bottom\">##Billing## </h2>\n            <ul class=\"list-unstyled fs-sm\">\n                <li><span class=\"fw-medium\">##Client##:&nbsp;</span>{{this.customerData.name}}</li>\n                <li>\n                    <span class=\"fw-medium\">##Address##:&nbsp;</span>{{BillingAddress.address1 }}, {{BillingAddress.city }}, {{BillingAddress.postalCode}}, {{BillingAddress.country}}\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\">##Shipping_address##</h2>\n<form novalidate _lpchecked=\"1\">\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label v-if=\"this.checkout.addresses?.length===1\" class=\"form-label\" for=\"checkout-branch\">##Name##</label>\n                <label v-else class=\"form-label\" for=\"checkout-branch\">##Addresses##</label>\n                <input v-if=\"this.checkout.addresses?.length===1\" class=\"form-control\" type=\"text\" :value=\"this.checkout.addresses[0]?.name\" readonly />\n                <select v-else v-model=\"SelectedBranch\" class=\"form-select\" id=\"checkout-branch\">\n                    <option v-for=\"item in checkout.addresses\" v-bind:key=\"item\" v-bind:value=\"item\">{{item.name}}</option>\n                </select>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-address1\">##Address1##</label>\n                <input v-model=\"B_Address1\" :class=\"ValidationClassB_Address1\" id=\"checkout-address1\" required>\n                <p v-if=\"this.B_Address1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                <p v-else-if=\"this.B_Address1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\"> ##Address2##</label>\n                <input placeholder=\"##Second_street_name##\" type=\"text\" :class=\"ValidationClassB_Address2\" v-model=\"B_Address2\" id=\"checkout-address2\">\n                <!--<p class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">{{this.B_Address2Error}}</p>-->\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"checkout-city\">##Town_City##</label>\n                <input v-model=\"B_City\" :class=\"ValidationClassB_City\" id=\"checkout-city\">\n                <p v-if=\"this.B_CityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                <p v-else-if=\"this.B_CityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"checkout-state\">##State##</label>\n                <input v-model=\"B_State\" :class=\"ValidationClassB_State\" type=\"text\" id=\"checkout-state\">\n                <p v-if=\"this.B_StateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                <p v-else-if=\"this.B_StateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"checkout-county\">##Country##</label>\n                <!-- <select v-model=\"B_Country\" @click=\"loadCountries()\" class=\"form-select\" id=\"selected-country\">\n                    <option v-if=\"countries === null\" selected v-bind:value=\"B_Country\">{{customerData.address.country}}</option>\n                    <option v-if=\"countries!== null\" v-for=\"item in countries\" v-bind:key=\"item.code\" v-bind:value=\"item.code\">{{item.name}}</option>\n                </select> -->\n                <input v-model=\"B_Country\" :class=\"ValidationClassB_Country\" id=\"checkout-county\">\n                <p v-if=\"this.B_CountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                <p v-else-if=\"this.B_CountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"checkout-zip\">##Postcode_ZIP##</label>\n                <input v-model=\"B_ZIP\" :class=\"ValidationClassB_ZIP\" type=\"text\" id=\"checkout-zip\">\n                <p v-if=\"this.B_ZIPError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                <p v-else-if=\"this.B_ZIPError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n            </div>\n        </div>\n    </div>\n</form>",
    "Translations": [
      {
        "Key": "Billing",
        "Value": "Billing",
        "Translation": {
          "EL": "Χρέωση",
          "EN": "Billing",
          "RO": "Furnizor"
        }
      },
      {
        "Key": "Client",
        "Value": "Client",
        "Translation": {
          "EL": "Πελάτης",
          "EN": "Client",
          "RO": "Client"
        }
      },
      {
        "Key": "Address",
        "Value": "Address",
        "Translation": {
          "EL": "Διεύθυνση",
          "EN": "Address",
          "RO": "Adresă"
        }
      },
      {
        "Key": "Shipping_address",
        "Value": "Shipping_address",
        "Translation": {
          "EL": "Διεύθυνση αποστολής",
          "EN": "Shipping address",
          "RO": "Adresa de livrare"
        }
      },
      {
        "Key": "Name",
        "Value": "Name",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      },
      {
        "Key": "Addresses",
        "Value": "Addresses",
        "Translation": {
          "EL": "Διευθύνσεις",
          "EN": "Addresses",
          "RO": "Adrese"
        }
      },
      {
        "Key": "Address1",
        "Value": "Address1",
        "Translation": {
          "EL": "Διεύθυνση 1",
          "EN": "Address 1",
          "RO": "Adresa 1"
        }
      },
      {
        "Key": "Address2",
        "Value": "Address2",
        "Translation": {
          "EL": "Διεύθυνση 2",
          "EN": "Address 2",
          "RO": "Adresa 2"
        }
      },
      {
        "Key": "Second_street_name",
        "Value": "Second_street_name",
        "Translation": {
          "EL": "Ονομασία δεύτερης οδού",
          "EN": "Second street name",
          "RO": "Stradă"
        }
      },
      {
        "Key": "Town_City",
        "Value": "Town_City",
        "Translation": {
          "EL": "Πόλη",
          "EN": "Town City",
          "RO": "Oraş"
        }
      },
      {
        "Key": "ErrorEmptyField",
        "Value": "ErrorEmptyField",
        "Translation": {
          "EL": "To πεδίο αυτό είναι υποχρεωτικό",
          "EN": "This field is required",
          "RO": "Acest câmp este obligatoriu"
        }
      },
      {
        "Key": "ErrorInputSize",
        "Value": "ErrorInputSize",
        "Translation": {
          "EL": "Εισαγάγετε μια έγκυρη τιμή στο πεδίο",
          "EN": "Input a valid value to the field",
          "RO": "Introduceţi o valoare validă"
        }
      },
      {
        "Key": "State",
        "Value": "State",
        "Translation": {
          "EL": "Περιφερειακή Ενότητα",
          "EN": "State",
          "RO": "Judeţ"
        }
      },
      {
        "Key": "Country",
        "Value": "Country",
        "Translation": {
          "EL": "Χώρα",
          "EN": "Country",
          "RO": "Ţară"
        }
      },
      {
        "Key": "Postcode_ZIP",
        "Value": "Postcode_ZIP",
        "Translation": {
          "EL": "Ταχυδρομικός κώδικας / ΤΚ",
          "EN": "Postcode / ZIP",
          "RO": "Cod poştal"
        }
      }
    ],
    "Js": "const billing = {\n    props:\n    {\n        model: Object,\n    },\n    data() {\n        return {\n            checkout: null,\n            customerData: null,\n            billingAddress: null,\n            checkoutData: {\n                notes: \"\"\n            },\n            selectedBranch: null,\n            errorCode1: \"ErrorEmptyField\",\n            errorCode2: \"ErrorInputSize\",\n            ValidationClassS_Address1: \"form-control\",\n            ValidationClassS_Address2: \"form-control\",\n            ValidationClassS_State: \"form-control\",\n            ValidationClassS_City: \"form-control\",\n            ValidationClassS_Country: \"form-control\",\n            ValidationClassS_ZIP: \"form-control\",\n            B_Address1Error: \"\",\n            B_Address2Error: \"\",\n            B_StateError: \"\",\n            B_CityError: \"\",\n            B_ZIPError: \"\",\n            B_CountryError: \"\",\n            ValidationClassB_Address1: \"form-control\",\n            ValidationClassB_Address2: \"form-control\",\n            ValidationClassB_State: \"form-control\",\n            ValidationClassB_City: \"form-control\",\n            ValidationClassB_Country: \"form-control\",\n            ValidationClassB_ZIP: \"form-control\",\n            carriers: null,\n            isCarriersLoading: false,\n            checkout: this.model\n\n        }\n    },\n    mounted() {\n        this.customerData = this.checkout.customer;\n        this.billingAddress = this.checkout.billingAddress;\n        this.selectedBranch = this.checkout.addresses[0];\n        this.shippingAddress = this.selectedBranch.address;\n\n    },\n    methods: {\n        // checkValid() {\n        //     debugger;\n        //     if (this.shippingSameAsBilling) {\n        //         if ((this.B_Address1Error == \"\" && this.B_StateError == \"\" && this.B_CityError == \"\" && this.B_ZIPError == \"\" && this.B_CountryError == \"\")\n        //             && (this.B_Address1 && this.B_State && this.B_City && this.B_ZIP && this.B_Country)) {\n\n        //             return true;\n        //         }\n        //         else {\n\n\n        //             this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n        //             this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n        //             this.B_State = this.B_State ? this.B_State : \"\";\n        //             this.B_City = this.B_City ? this.B_City : \"\";\n        //             this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n        //             this.B_Country = this.B_Country ? this.B_Country : \"\";\n        //             return false;\n        //         }\n        //     }\n        //     else {\n        //         if ((this.S_Address1Error == \"\" && this.S_StateError == \"\" && this.S_CityError == \"\" && this.S_ZIPError == \"\" && this.S_CountryError == \"\")\n        //             && (this.S_Address1 && this.S_State && this.S_City && this.S_ZIP && this.S_Country))\n\n        //             return true;\n        //         else {\n\n\n        //             this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n        //             this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n        //             this.B_State = this.B_State ? this.B_State : \"\";\n        //             this.B_City = this.B_City ? this.B_City : \"\";\n        //             this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n        //             this.B_Country = this.B_Country ? this.B_Country : \"\";\n\n\n        //             this.S_Address1 = this.S_Address1 ? this.S_Address1 : \"\";\n        //             this.S_Address2 = this.S_Address2 ? this.S_Address2 : \"\";\n        //             this.S_State = this.S_State ? this.S_State : \"\";\n        //             this.S_City = this.S_City ? this.S_City : \"\";\n        //             this.S_ZIP = this.S_ZIP ? this.S_ZIP : \"\";\n        //             this.S_Country = this.S_Country ? this.S_Country : \"\";\n        //             return false;\n        //         }\n\n        //     }\n        //     return true;\n\n        // },\n        checkValid() {\n            this.checkout.customerBranchId = this.selectedBranch.id !== this.customerData.id ? this.selectedBranch.id : null;\n            if (this.shippingSameAsBilling) {\n                if (\n                    this.B_Address1Error === \"\" &&\n                    this.B_StateError === \"\" &&\n                    this.B_CityError === \"\" &&\n                    this.B_ZIPError === \"\" &&\n                    this.B_CountryError === \"\" &&\n                    this.B_Address1 &&\n                    this.B_State &&\n                    this.B_City &&\n                    this.B_ZIP &&\n                    this.B_Country\n                ) {\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return true;\n                } else {\n                    this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n                    this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n                    this.B_State = this.B_State ? this.B_State : \"\";\n                    this.B_City = this.B_City ? this.B_City : \"\";\n                    this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n                    this.B_Country = this.B_Country ? this.B_Country : \"\";\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return false;\n                }\n            } else {\n                if (\n                    this.B_Address1Error === \"\" &&\n                    this.B_StateError === \"\" &&\n                    this.B_CityError === \"\" &&\n                    this.B_ZIPError === \"\" &&\n                    this.B_CountryError === \"\" &&\n                    this.B_Address1 &&\n                    this.B_State &&\n                    this.B_City &&\n                    this.B_ZIP &&\n                    this.B_Country\n                    // this.S_Address1Error === \"\" &&\n                    // this.S_StateError === \"\" &&\n                    // this.S_CityError === \"\" &&\n                    // this.S_ZIPError === \"\" &&\n                    // this.S_CountryError === \"\" &&\n                    // this.S_Address1 &&\n                    // this.S_State &&\n                    // this.S_City &&\n                    // this.S_ZIP &&\n                    // this.S_Country\n\n                ) {\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return true;\n                } else {\n                    this.B_Address1 = this.B_Address1;\n                    this.B_Address2 = this.B_Address2;\n                    this.B_State = this.B_State;\n                    this.B_City = this.B_City;\n                    this.B_ZIP = this.B_ZIP;\n                    this.B_Country = this.B_Country;\n\n                    // this.S_Address1 = this.S_Address1 ? this.S_Address1 : \"\";\n                    // this.S_Address2 = this.S_Address2 ? this.S_Address2 : \"\";\n                    // this.S_State = this.S_State ? this.S_State : \"\";\n                    // this.S_City = this.S_City ? this.S_City : \"\";\n                    // this.S_ZIP = this.S_ZIP ? this.S_ZIP : \"\";\n                    // this.S_Country = this.S_Country ? this.S_Country : \"\";\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return false;\n                }\n\n            }\n\n        },\n\n        customerIsWithoutBranches() {\n            return this.customerData.branches == undefined || this.customerData.branches == null || this.customerData.branches.lenght == 0;\n        },\n    },\n    computed: {\n        Checkout: {\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n        BillingAddress: {\n            get() {\n                this.customerData.billingAddress = this.billingAddress;\n                return this.billingAddress;\n            },\n            set(newVal) {\n                this.billingAddress = newVal;\n            }\n        },\n        Branches: {\n            get() {\n                return this.checkoutData.customer.branches;\n            }\n        },\n        SelectedBranch: {\n            get() {\n                return this.selectedBranch;\n            },\n            set(newVal) {\n                this.selectedBranch = newVal;\n            }\n        },\n        B_Address1: {\n            get() { return this.selectedBranch?.address?.address1 }\n            ,\n            set(val) {\n                this.selectedBranch.address.address1 = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassB_Address1 = \"form-control is-invalid\";\n                    this.B_Address1Error = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassB_Address1 = \"form-control is-valid\";\n                    this.B_Address1Error = \"\";\n                } else {\n                    this.ValidationClassB_Address1 = \"form-control is-invalid\";\n                    this.B_Address1Error = this.errorCode2;\n                }\n            }\n        },\n        B_Address2: {\n            get() { return this.selectedBranch?.address?.address2 }\n            ,\n            set(val) {\n                this.selectedBranch.address.address2 = val;\n                /* if (val.length == 0) {\n                     this.ValidationClassB_Address2 = \"form-control  is-invalid\";\n                     this.B_Address2Error = this.translations[\"Input_no_empty\"];\n                 }\n                 else if (val.length < 50 && val.length >= 5) {\n                     this.ValidationClassB_Address2 = \"form-control is-valid\";\n                     this.B_Address2Error = \"\";\n                 } else {\n                     this.ValidationClassB_Address2 = \"form-control is-invalid\";\n                     this.B_Address2Error = this.translations[\"Input_size\"];\n                 }*/\n            }\n        },\n\n        B_State: {\n            get() { return this.selectedBranch?.address?.state }\n            ,\n            set(val) {\n                this.selectedBranch.address.state = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassB_State = \"form-control  is-invalid\";\n                    this.B_StateError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassB_State = \"form-control is-valid\";\n                    this.B_StateError = \"\";\n                } else {\n                    this.ValidationClassB_State = \"form-control is-invalid\";\n                    this.B_StateError = this.errorCode2;\n                }\n            }\n        },\n        B_City: {\n            get() { return this.selectedBranch?.address?.city }\n            ,\n            set(val) {\n                this.selectedBranch.address.city = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassB_City = \"form-control  is-invalid\";\n                    this.B_CityError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassB_City = \"form-control is-valid\";\n                    this.B_CityError = \"\";\n                } else {\n                    this.ValidationClassB_City = \"form-control is-invalid\";\n                    this.B_CityError = this.errorCode2;\n                }\n            }\n        },\n        B_ZIP: {\n            get() { return this.selectedBranch?.address?.postalCode }\n            ,\n            set(val) {\n                this.selectedBranch.address.postalCode = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassB_ZIP = \"form-control  is-invalid\";\n                    this.B_ZIPError = this.errorCode1;\n                }\n                else if (val.length == 5) {\n                    this.ValidationClassB_ZIP = \"form-control is-valid\";\n                    this.B_ZIPError = \"\";\n                } else {\n                    this.ValidationClassB_ZIP = \"form-control is-invalid\";\n                    this.B_ZIPError = this.errorCode2;\n                }\n            }\n        },\n\n\n        B_Country: {\n            get() { return this.selectedBranch?.address?.country }\n            ,\n            set(val) {\n                this.selectedBranch.address.country = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassB_Country = \"form-control  is-invalid\";\n                    this.B_CountryError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 2) {\n                    this.ValidationClassB_Country = \"form-control is-valid\";\n                    this.B_CountryError = \"\";\n                } else {\n                    this.ValidationClassB_Country = \"form-control is-invalid\";\n                    this.B_CountryError = this.errorCode2;\n                }\n            }\n        },\n        S_Address1: {\n            get() { return this.shippingAddress.address1 }\n            ,\n            set(val) {\n                this.shippingAddress.address1 = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassS_Address1 = \"form-control  is-invalid\";\n                    this.S_Address1Error = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_Address1 = \"form-control is-valid\";\n                    this.S_Address1Error = \"\";\n                } else {\n                    this.ValidationClassS_Address1 = \"form-control is-invalid\";\n                    this.S_Address1Error = this.errorCode2;\n                }\n            }\n        },\n        S_Address2: {\n            get() { return this.shippingAddress.address2 }\n            ,\n            set(val) {\n                this.shippingAddress.address2 = val;\n                /*if (val.length == 0) {\n                    this.ValidationClassS_Address2 = \"form-control  is-invalid\";\n                    this.S_Address2Error = this.translations[\"Input_no_empty\"];\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_Address2 = \"form-control is-valid\";\n                    this.S_Address2Error = \"\";\n                } else {\n                    this.ValidationClassS_Address2 = \"form-control is-invalid\";\n                    this.S_Address2Error = this.translations[\"Input_size\"];\n                }*/\n            }\n        },\n\n        S_State: {\n            get() { return this.shippingAddress.state }\n            ,\n            set(val) {\n                this.shippingAddress.state = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassS_State = \"form-control  is-invalid\";\n                    this.S_StateError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_State = \"form-control is-valid\";\n                    this.S_StateError = \"\";\n                } else {\n                    this.ValidationClassS_State = \"form-control is-invalid\";\n                    this.S_StateError = this.errorCode2;\n                }\n            }\n        },\n        S_City: {\n            get() { return this.shippingAddress.city }\n            ,\n            set(val) {\n                this.shippingAddress.city = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassS_City = \"form-control  is-invalid\";\n                    this.S_CityError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_City = \"form-control is-valid\";\n                    this.S_CityError = \"\";\n                } else {\n                    this.ValidationClassS_City = \"form-control is-invalid\";\n                    this.S_CityError = this.errorCode2;\n                }\n            }\n        },\n        S_ZIP: {\n            get() { return this.shippingAddress.postalCode }\n            ,\n            set(val) {\n                this.shippingAddress.postalCode = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassS_ZIP = \"form-control  is-invalid\";\n                    this.S_ZIPError = this.errorCode1;\n                }\n                else if (val.length == 5) {\n                    this.ValidationClassS_ZIP = \"form-control is-valid\";\n                    this.S_ZIPError = \"\";\n                } else {\n                    this.ValidationClassS_ZIP = \"form-control is-invalid\";\n                    this.S_ZIPError = this.errorCode2;\n                }\n            }\n        },\n\n\n        S_Country: {\n            get() { return this.shippingAddress.country }\n            ,\n            set(val) {\n                this.shippingAddress.country = val;\n                if (val === null || val.length == 0) {\n                    this.ValidationClassS_Country = \"form-control is-invalid\";\n                    this.S_CountryError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 2) {\n                    this.ValidationClassS_Country = \"form-control is-valid\";\n                    this.S_CountryError = \"\";\n                } else {\n                    this.ValidationClassS_Country = \"form-control is-invalid\";\n                    this.S_CountryError = this.errorCode2;\n                }\n            }\n        },\n    }\n}\n\napp.component('billing', {\n    extends: billing,\n    template: '#billing'\n});"
  },
  {
    "Name": "BillingRetail",
    "Html": "<div class=\"row mb-4\">\n    <div class=\"col-md-2\">\n        <div class=\"form-check mt-4 mb-4\">\n            <input type=\"radio\"\n                   v-model=\"invoiceType\"\n                   @input=\"toggleInvoiceDetails\"\n                   class=\"form-check-input\"\n                   id=\"radioInvoice\"\n                   name=\"invoiceGroup\"\n                   value=\"receipt\"/>\n            <label class=\"form-check-label\" :for=\"'radioReceipt'\">\n                ##Receipt##\n            </label>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"form-check mt-4 mb-4\">\n            <input type=\"radio\"\n                   v-model=\"invoiceType\"\n                   @input=\"toggleInvoiceDetails\"\n                   class=\"form-check-input\"\n                   id=\"radioInvoice\"\n                   name=\"invoiceGroup\"\n                   value=\"invoice\"/>\n            <label class=\"form-check-label\" :for=\"'radioInvoice'\">\n                ##Invoice##\n            </label>\n        </div>\n    </div>\n    <h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\" v-if=\"invoiceType === 'invoice'\">##InvoiceDetails##</h2>\n\n    <form novalidate _lpchecked=\"1\" v-if=\"invoiceType === 'invoice'\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" placeholder=\"##Company_Name##\" for=\"checkout-address1\">##CompanyName##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"CompanyName\" type=\"text\" :class=\"ValidationClassCompanyName\" id=\"checkout-company\" required @blur=\"validateAndSetInvoice('CompanyName',CompanyName)\">\n                    <p v-if=\"this.CompanyNameError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyNameError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" placeholder=\"##Profession##\" for=\"checkout-address1\">##Profession##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"Profession\" type=\"text\" :class=\"ValidationClassProfession\" id=\"checkout-company-profession\" required @blur=\"validateAndSetInvoice('Profession',Profession)\">\n                    <p v-if=\"this.ProfessionError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.ProfessionError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-address1\">##TaxOffice##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"TaxOffice\" type=\"text\" :class=\"ValidationClassTaxOffice\" id=\"checkout-taxoffice\" required @blur=\"validateAndSetInvoice('TaxOffice',TaxOffice)\">\n                    <p v-if=\"this.TaxOfficeError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.TaxOfficeError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\"> ##TIN##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"TIN\" type=\"text\" type=\"text\" :class=\"ValidationClassTIN\" id=\"checkout-tin\" required @blur=\"validateAndSetInvoice('TIN',TIN)\">\n                    <p v-if=\"this.TINError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.TINError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-company-address1\">##Address1##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"CompanyAddress1\" type=\"text\" :class=\"ValidationClassCompanyAddress1\" id=\"checkout-company-address1\" required @blur=\"validateAndSetInvoice('CompanyAddress1',CompanyAddress1)\">\n                    <p v-if=\"this.CompanyAddress1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyAddress1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-company-address2\">##Address2##</label>\n                    <input v-model=\"CompanyAddress2\" type=\"text\" type=\"text\" :class=\"ValidationClassCompanyAddress2\" id=\"checkout-company-address2\" @blur=\"validateAndSetInvoice('CompanyAddress2',CompanyAddress2,true)\">\n                    <p v-if=\"this.CompanyAddress2Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyAddress2Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-company-city\">##Town_City##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"CompanyCity\" :class=\"ValidationClassCompanyCity\" id=\"checkout-company-city\" required @blur=\"validateAndSetInvoice('CompanyCity',CompanyCity)\">\n                    <p v-if=\"this.CompanyCityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyCityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-company-state\">##State##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"CompanyState\" :class=\"ValidationClassCompanyState\" type=\"text\" id=\"checkout-company-state\" required @blur=\"validateAndSetInvoice('CompanyState',CompanyState)\">\n                    <p v-if=\"this.CompanyStateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyStateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-company-country\">##Country##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"CompanyCountry\" :class=\"ValidationClassCompanyCountry\" id=\"checkout-company-country\" required @blur=\"validateAndSetInvoice('CompanyCountry',CompanyCountry)\">\n                    <p v-if=\"this.CompanyCountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyCountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-company-zip\">##Postcode_ZIP##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"CompanyZIP\" :class=\"ValidationClassCompanyZIP\" type=\"number\" id=\"checkout-company-zip\" required @blur=\"validateZIP('CompanyZIP',CompanyZIP)\">\n                    <p v-if=\"this.CompanyZIPError\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ZIPError##</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-company-phone\">##PhoneNumber##</label>\n                    <input v-model=\"CompanyPhone\" type=\"text\" :class=\"ValidationClassCompanyPhone\" id=\"checkout-company-phone\" @blur=\"validateAndSetInvoice('CompanyPhone',CompanyPhone,true)\">\n                    <p v-if=\"this.CompanyPhoneError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.CompanyPhoneError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n    </form>\n    <h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\" v-if=\"invoiceType != 'invoice'\">##Billing_address##</h2>\n    <h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\" v-if=\"invoiceType == 'invoice'\">##Shipping_userDetails##</h2>\n    <form novalidate _lpchecked=\"1\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-billing-name\">##Name##</label><span  class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"BillingName\" type=\"text\" :class=\"ValidationClassBillingName\" id=\"checkout-name\" required @blur=\"validateAndSetPrimary('BillingName',BillingName,false)\">\n                    <p v-if=\"this.BillingNameError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.BillingNameError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-address1\">##LastName##</label><span  class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"BillingLastName\" type=\"text\" :class=\"ValidationClassBillingLastName\" id=\"checkout-billing-last-name\" required @blur=\"validateAndSetPrimary('BillingLastName',BillingLastName,false)\">\n                    <p v-if=\"this.BillingLastNameError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.BillingLastNameError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-address1\">##PhoneNumber##</label><span v-if=\"invoiceType != 'invoice'\" class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"BillingPhone\" type=\"text\" :class=\"ValidationClassBillingPhone\" id=\"checkout-billing-phone\" required @blur=\"validateAndSetPrimary('BillingPhone',BillingPhone,false)\">\n                    <p v-if=\"this.BillingPhoneError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.BillingPhoneError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-address1\">##Email##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"BillingEmail\" type=\"text\" :class=\"ValidationClassBillingEmail\" id=\"checkout-billing-email\" required @blur=\"validateEmail('BillingEmail',BillingEmail)\">\n                    <p v-if=\"this.BillingEmailError\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##EmailError##</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" v-if=\"invoiceType != 'invoice'\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-address1\">##Address1##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"C_Address1\" type=\"text\" :class=\"ValidationClassC_Address1\" id=\"checkout-address1\" required @blur=\"validateAndSet('C_Address1',C_Address1)\">\n                    <p v-if=\"this.C_Address1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.C_Address1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\"> ##Address2##</label>\n                    <input v-model=\"C_Address2\" type=\"text\" type=\"text\" :class=\"ValidationClassC_Address2\" id=\"checkout-address2\" @blur=\"validateAndSet('C_Address2',C_Address2,true)\">\n                    <p v-if=\"this.C_Address2Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.C_Address2Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" v-if=\"invoiceType != 'invoice'\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-city\">##Town_City##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"C_City\" :class=\"ValidationClassC_City\" id=\"checkout-city\" @blur=\"validateAndSet('C_City',C_City)\">\n                    <p v-if=\"this.C_CityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.C_CityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-state\">##State##</label><span v-if=\"invoiceType === 'invoice'\"class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"C_State\" :class=\"ValidationClassC_State\" type=\"text\" id=\"checkout-state\" @blur=\"validateAndSet('C_State',C_State,invoiceType != 'invoice')\">\n                    <p v-if=\"this.C_StateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.C_StateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" v-if=\"invoiceType != 'invoice'\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-county\">##Country##</label><span class=\"text-danger ps-1\">*</span>\n                    <!-- <select v-model=\"B_Country\" @click=\"loadCountries()\" class=\"form-select\" id=\"selected-country\">\n                        <option v-if=\"countries === null\" selected v-bind:value=\"B_Country\">{{customerData.address.country}}</option>\n                        <option v-if=\"countries!== null\" v-for=\"item in countries\" v-bind:key=\"item.code\" v-bind:value=\"item.code\">{{item.name}}</option>\n                    </select> -->\n                    <input v-model=\"C_Country\" :class=\"ValidationClassC_Country\" id=\"checkout-county\" @blur=\"validateAndSet('C_Country',C_Country)\">\n                    <p v-if=\"this.C_CountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.C_CountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-zip\">##Postcode_ZIP##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"C_ZIP\" :class=\"ValidationClassC_ZIP\" type=\"number\" id=\"checkout-zip\" @blur=\"validateZIP('C_ZIP',C_ZIP)\">\n                    <p v-if=\"this.C_ZIPError\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ZIPError##</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-check form-switch mt-4 mb-4\">\n            <input type=\"checkbox\" v-model=\"addressType\" @change=\"clearShippingFields\" class=\"form-check-input \" id=\"customSwitch1\">\n            <label class=\"form-check-label\" for=\"customSwitch1\" v-if=\"invoiceType != 'invoice'\">Shipping same as Billing</label>\n            <label class=\"form-check-label\" for=\"customSwitch1\" v-else>Same address for Shipping</label>\n        </div>\n    </form>\n\n\n    <h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\" v-if=\"!addressType\">##Shipping_address##</h2>\n    <form novalidate _lpchecked=\"1\" v-if=\"!addressType\">\n        <div class=\"row\" v-if=\"invoiceType != 'invoice'\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-shipping-name\">##Name##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"ShippingName\" type=\"text\" :class=\"ValidationClassShippingName\" id=\"checkout-name\" required @blur=\"validateAndSetPrimary('ShippingName',ShippingName)\">\n                    <p v-if=\"this.ShippingNameError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.ShippingNameError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-shipping-last-name\">##LastName##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"ShippingLastName\" type=\"text\" :class=\"ValidationClassShippingLastName\" id=\"checkout-last-name\" required @blur=\"validateAndSetPrimary('ShippingLastName',ShippingLastName)\">\n                    <p v-if=\"this.ShippingLastNameError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.ShippingLastNameError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" v-if=\"invoiceType != 'invoice'\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-address1\">##PhoneNumber##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"ShippingPhone\" type=\"text\" :class=\"ValidationClassShippingPhone\" id=\"checkout-shipping-phone\" required  @blur=\"validateAndSetPrimary('ShippingPhone',ShippingPhone)\">\n                    <p v-if=\"this.ShippingPhoneError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.ShippingPhoneError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-address1\">##Email##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"ShippingEmail\" type=\"text\" :class=\"ValidationClassShippingEmail\" id=\"checkout-shipping-email\" required  @blur=\"validateEmail('ShippingEmail',ShippingEmail)\">\n                    <p v-if=\"this.ShippingEmailError\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##EmailError##</p>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-address1\">##Address1##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"B_Address1\" type=\"text\" :class=\"ValidationClassB_Address1\" id=\"checkout-address1\" required @blur=\"validateAndSet('B_Address1',B_Address1)\">\n                    <p v-if=\"this.B_Address1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.B_Address1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\"> ##Address2##</label>\n                    <input v-model=\"B_Address2\" type=\"text\" type=\"text\" :class=\"ValidationClassB_Address2\" id=\"checkout-address2\" @blur=\"validateAndSet('B_Address2',B_Address2,true)\">\n                    <p v-if=\"this.B_Address2Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.B_Address2Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-city\">##Town_City##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"B_City\" :class=\"ValidationClassB_City\" id=\"checkout-city\" @blur=\"validateAndSet('B_City',B_City)\">\n                    <p v-if=\"this.B_CityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.B_CityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-state\">##State##</label><span v-if=\"invoiceType === 'invoice'\" class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"B_State\" :class=\"ValidationClassB_State\" type=\"text\" id=\"checkout-state\" @blur=\"validateAndSet('B_State',B_State,invoiceType != 'invoice')\">\n                    <p v-if=\"this.B_StateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.B_StateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-county\">##Country##</label><span class=\"text-danger ps-1\">*</span>\n                    <!-- <select v-model=\"B_Country\" @click=\"loadCountries()\" class=\"form-select\" id=\"selected-country\">\n                        <option v-if=\"countries === null\" selected v-bind:value=\"B_Country\">{{customerData.address.country}}</option>\n                        <option v-if=\"countries!== null\" v-for=\"item in countries\" v-bind:key=\"item.code\" v-bind:value=\"item.code\">{{item.name}}</option>\n                    </select> -->\n                    <input v-model=\"B_Country\" :class=\"ValidationClassB_Country\" id=\"checkout-county\" @blur=\"validateAndSet('B_Country',B_Country)\">\n                    <p v-if=\"this.B_CountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\n                    <p v-else-if=\"this.B_CountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label\" for=\"checkout-zip\">##Postcode_ZIP##</label><span class=\"text-danger ps-1\">*</span>\n                    <input v-model=\"B_ZIP\" :class=\"ValidationClassB_ZIP\" type=\"number\" id=\"checkout-zip\" @blur=\"validateZIP('B_ZIP',B_ZIP)\">\n                    <p v-if=\"this.B_ZIPError\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ZIPError##</p>\n\n                </div>\n            </div>\n        </div>\n    </form>\n</div>",
    "Translations": [
      {
        "Key": "Billing",
        "Value": "Billing",
        "Translation": {
          "EL": "Χρέωση",
          "EN": "Billing",
          "RO": "Furnizor"
        }
      },
      {
        "Key": "Client",
        "Value": "Client",
        "Translation": {
          "EL": "Πελάτης",
          "EN": "Client",
          "RO": "Client"
        }
      },
      {
        "Key": "Address",
        "Value": "Address",
        "Translation": {
          "EL": "Διεύθυνση",
          "EN": "Address",
          "RO": "Adresă"
        }
      },
      {
        "Key": "Email",
        "Value": "Email",
        "Translation": {
          "EL": "Email",
          "EN": "Email",
          "RO": "Email"
        }
      },
      {
        "Key": "EmailError",
        "Value": "EmailError",
        "Translation": {
          "EL": "Παρακαλώ εισάγετε έγκυρη διεύθυνση email",
          "EN": "Please enter a valid email address",
          "RO": "Email"
        }
      },
      {
        "Key": "ZIPError",
        "Value": "ZIPError",
        "Translation": {
          "EL": "Ο Τ.Κ. πρέπει να είναι ένας έγκυρος πενταψήφιος αριθμός",
          "EN": "ZIP code must be a valid 5-digit number",
          "RO": "Email"
        }
      },
      {
        "Key": "Shipping_address",
        "Value": "Shipping_address",
        "Translation": {
          "EL": "Διεύθυνση αποστολής",
          "EN": "Shipping address",
          "RO": "Adresa de livrare"
        }
      },
      {
        "Key": "Billing_address",
        "Value": "Billing_address",
        "Translation": {
          "EL": "Διεύθυνση χρέωσης",
          "EN": "Billing Αddress",
          "RO": "Adresa de facturare Αddress"
        }
      },
      {
        "Key": "Shipping_userDetails",
        "Value": "Shipping_userDetails",
        "Translation": {
          "EL": "Στοιχεία παραλήπτη",
          "EN": "Recipient Details",
          "RO": ""
        }
      },
      {
        "Key": "Name",
        "Value": "Name",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      },
      {
        "Key": "Addresses",
        "Value": "Addresses",
        "Translation": {
          "EL": "Διευθύνσεις",
          "EN": "Addresses",
          "RO": "Adrese"
        }
      },
      {
        "Key": "Address1",
        "Value": "Address1",
        "Translation": {
          "EL": "Διεύθυνση 1",
          "EN": "Address 1",
          "RO": "Adresa 1"
        }
      },
      {
        "Key": "Address2",
        "Value": "Address2",
        "Translation": {
          "EL": "Διεύθυνση 2",
          "EN": "Address 2",
          "RO": "Adresa 2"
        }
      },
      {
        "Key": "Town_City",
        "Value": "Town_City",
        "Translation": {
          "EL": "Πόλη",
          "EN": "Town City",
          "RO": "Oraş"
        }
      },
      {
        "Key": "ErrorEmptyField",
        "Value": "ErrorEmptyField",
        "Translation": {
          "EL": "To πεδίο αυτό είναι υποχρεωτικό",
          "EN": "This field is required",
          "RO": "Acest câmp este obligatoriu"
        }
      },
      {
        "Key": "ErrorInputSize",
        "Value": "ErrorInputSize",
        "Translation": {
          "EL": "Εισαγάγετε μια έγκυρη τιμή στο πεδίο",
          "EN": "Input a valid value to the field",
          "RO": "Introduceţi o valoare validă"
        }
      },
      {
        "Key": "State",
        "Value": "State",
        "Translation": {
          "EL": "Περιφερειακή Ενότητα",
          "EN": "State",
          "RO": "Judeţ"
        }
      },
      {
        "Key": "Country",
        "Value": "Country",
        "Translation": {
          "EL": "Χώρα",
          "EN": "Country",
          "RO": "Ţară"
        }
      },
      {
        "Key": "Postcode_ZIP",
        "Value": "Postcode_ZIP",
        "Translation": {
          "EL": "Ταχυδρομικός κώδικας / ΤΚ",
          "EN": "Postcode / ZIP",
          "RO": "Cod poştal"
        }
      },
      {
        "Key": "Invoice",
        "Value": "Invoice",
        "Translation": {
          "EL": "Τιμολόγιο",
          "EN": "Invoice",
          "RO": "Factură"
        }
      },
      {
        "Key": "Receipt",
        "Value": "Receipt",
        "Translation": {
          "EL": "Απόδειξη",
          "EN": "Receipt",
          "RO": "Chitanță"
        }
      },
      {
        "Key": "InvoiceDetails",
        "Value": "InvoiceDetails",
        "Translation": {
          "EL": "Στοιχεία τιμολογίου",
          "EN": "Invoice Details",
          "RO": "Detalii factură"
        }
      },
      {
        "Key": "CompanyName",
        "Value": "CompanyName",
        "Translation": {
          "EL": "Όνομα εταιρείας",
          "EN": "Company Name",
          "RO": "Numele companiei"
        }
      },
      {
        "Key": "Profession",
        "Value": "Profession",
        "Translation": {
          "EL": "Επάγγελμα",
          "EN": "Profession",
          "RO": "Profesia"
        }
      },
      {
        "Key": "TaxOffice",
        "Value": "TaxOffice",
        "Translation": {
          "EL": "ΔΟΥ",
          "EN": "Tax Office",
          "RO": "Biroul fiscal"
        }
      },
      {
        "Key": "TIN",
        "Value": "TIN",
        "Translation": {
          "EL": "ΑΦΜ",
          "EN": "TIN",
          "RO": "TIN"
        }
      },
      {
        "Key": "FirstName",
        "Value": "FirstName",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      },
      {
        "Key": "LastName",
        "Value": "LastName",
        "Translation": {
          "EL": "Επίθετο",
          "EN": "Last Name",
          "RO": "Nume de familie"
        }
      },
      {
        "Key": "PhoneNumber",
        "Value": "PhoneNumber",
        "Translation": {
          "EL": "Αριθμός τηλεφώνου",
          "EN": "Phone Number",
          "RO": "Număr de telefon"
        }
      }
    ],
    "Js": "const billingretail = {\n    props:\n    {\n        model: Object,\n    },\n    data() {\n        return {\n            checkout: null,\n            customerData: null,\n            // billingAddress: null,\n            checkoutData: {\n                notes: \"\"\n            },\n            user: null,\n            selectedBranch: null,\n            errorCode1: \"ErrorEmptyField\",\n            errorCode2: \"ErrorInputSize\",\n            ValidationClassS_Address1: \"form-control\",\n            ValidationClassS_Address2: \"form-control\",\n            ValidationClassS_State: \"form-control\",\n            ValidationClassS_City: \"form-control\",\n            ValidationClassS_Country: \"form-control\",\n            ValidationClassS_ZIP: \"form-control\",\n            B_Address1Error: \"\",\n            B_Address2Error: \"\",\n            B_StateError: \"\",\n            B_CityError: \"\",\n            B_ZIPError: \"\",\n            B_CountryError: \"\",\n            C_Address1Error: \"\",\n            C_Address2Error: \"\",\n            C_StateError: \"\",\n            C_CityError: \"\",\n            C_ZIPError: \"\",\n            C_CountryError: \"\",\n            CompanyNameError: \"\",\n            CompanyAddress1Error: \"\",\n            CompanyAddress2Error: \"\",\n            CompanyCityError: \"\",\n            CompanyStateError: \"\",\n            CompanyZIPError: \"\",\n            CompanyCountryError: \"\",\n            CompanyPhoneError: \"\",\n            ProfessionError: \"\",\n            TaxOfficeError: \"\",\n            TINError: \"\",\n            ShippingNameError: \"\",\n            ShippingLastNameError: \"\",\n            ShippingPhoneError: \"\",\n            ShippingEmailError: \"\",\n            BillingNameError: \"\",\n            BillingLastNameError: \"\",\n            BillingPhoneError: \"\",\n            BillingEmailError: \"\",\n            ValidationClassB_Address1: \"form-control\",\n            ValidationClassBillingName: \"form-control\",\n            ValidationClassBillingLastName: \"form-control\",\n            ValidationClassBillingPhone: \"form-control\",\n            ValidationClassBillingEmail: \"form-control\",\n            ValidationClassShippingName: \"form-control\",\n            ValidationClassShippingLastName: \"form-control\",\n            ValidationClassShippingPhone: \"form-control\",\n            ValidationClassShippingEmail: \"form-control\",\n            ValidationClassB_Address2: \"form-control\",\n            ValidationClassB_State: \"form-control\",\n            ValidationClassB_City: \"form-control\",\n            ValidationClassB_Country: \"form-control\",\n            ValidationClassB_ZIP: \"form-control\",\n            ValidationClassC_Address1: \"form-control\",\n            ValidationClassC_Address2: \"form-control\",\n            ValidationClassC_State: \"form-control\",\n            ValidationClassC_City: \"form-control\",\n            ValidationClassC_Country: \"form-control\",\n            ValidationClassC_ZIP: \"form-control\",\n            ValidationClassCompanyName: \"form-control\",\n            ValidationClassCompanyAddress1: \"form-control\",\n            ValidationClassCompanyAddress2: \"form-control\",\n            ValidationClassCompanyCity: \"form-control\",\n            ValidationClassCompanyState: \"form-control\",\n            ValidationClassCompanyZIP: \"form-control\",\n            ValidationClassCompanyCountry: \"form-control\",\n            ValidationClassCompanyPhone: \"form-control\",\n            ValidationClassProfession: \"form-control\",\n            ValidationClassTaxOffice: \"form-control\",\n            ValidationClassTIN: \"form-control\",\n            BillingName: \"\",\n            BillingLastName: \"\",\n            BillingPhone: \"\",\n            BillingEmail: \"\",\n            ShippingName: \"\",\n            ShippingLastName: \"\",\n            ShippingPhone: \"\",\n            ShippingEmail: \"\",\n            CompanyName: \"\",\n            CompanyAddress1: \"\",\n            CompanyAddress2: \"\",\n            CompanyCity: \"\",\n            CompanyState: \"\",\n            CompanyZIP: \"\",\n            CompanyCountry: \"\",\n            CompanyPhone: \"\",\n            Profession: \"\",\n            TaxOffice: \"\",\n            TIN: \"\",\n            B_Address1: \"\",\n            B_Address2: \"\",\n            B_City: \"\",\n            B_State: \"\",\n            B_ZIP: \"\",\n            B_Country: \"\",\n            C_Address1: \"\",\n            C_Address2: \"\",\n            C_City: \"\",\n            C_State: \"\",\n            C_ZIP: \"\",\n            C_Country: \"\",\n            addressType: true,\n            invoiceType: \"receipt\",\n            billingErrors:false,\n            shippingErrors:false,\n            invoiceErrors:false\n        }\n    },\n    mounted() {\n        this.checkout = this.model;\n        this._getRetailUserProfile(e => {\n            this.user = e.user;\n            this.user_addresses();\n        });\n        this.billingAddress = this.checkout.billingAddress;\n        if(!this.billingAddress){\n            this.billingAddress = {\n                firstName: \"\",\n                lastName: \"\",\n                phoneNumber: \"\",\n                address1: \"\",\n                address2: \"\",\n                city: \"\",\n                country: \"\",\n                postalCode: \"\",\n                state: \"\",\n                email: \"\",\n            }\n        }\n  \n        this.shippingAddress = this.checkout.shippingAddress;\n        if(!this.shippingAddress){\n            this.shippingAddress = {\n                firstName: \"\",\n                lastName: \"\",\n                phoneNumber: \"\",\n                address1: \"\",\n                address2: \"\",\n                city: \"\",\n                country: \"\",\n                postalCode: \"\",\n                state: \"\",\n                email: \"\",\n            }\n        }\n \n        this.invoiceData = this.checkout.invoiceData;\n        if(!this.invoiceData){\n            this.invoiceData = {\n                tin: \"\",\n                taxOffice: \"\",\n                companyName: \"\",\n                companyAddress1: \"\",\n                companyAddress2: \"\",\n                companyCity: \"\",\n                companyState: \"\",\n                companyZIP: \"\",\n                companyCountry: \"\",\n                companyPhone: \"\",\n                profession: \"\",\n            }\n        }\n\n\n    },\n    methods: {\n        user_addresses() {\n            if (this.user && this.user.addresses && this.user.addresses.length > 0) {\n                const firstAddress = this.user.addresses[0];\n                this.BillingName = firstAddress.firstName || \"\";\n                this.BillingLastName = firstAddress.lastName || \"\";\n                this.BillingPhone = firstAddress.phoneNumber || \"\";\n                this.BillingEmail = firstAddress.email || \"\";\n                this.C_Address1 = firstAddress.address1 || \"\";\n                this.C_Address2 = firstAddress.address2 || \"\";\n                this.C_City = firstAddress.city || \"\";\n                this.C_State = firstAddress.state || \"\";\n                this.C_ZIP = firstAddress.postalCode || \"\";\n                this.C_Country = firstAddress.country || \"\";\n                this.copyBillingToShipping();\n            }\n\n        },\n        clearShippingFields() {\n            this.ShippingPhone = \"\",\n            this.ShippingName = \"\",\n            this.ShippingLastName = \"\",\n            this.B_Address1 = \"\",\n            this.B_Address2 = \"\",\n            this.B_City = \"\",\n            this.B_State = \"\",\n            this.B_ZIP = \"\",\n            this.B_Country = \"\"\n        },\n        clearInvoiceFields() {\n            this.CompanyName = \"\";\n            this.CompanyAddress1 = \"\";\n            this.CompanyAddress2 = \"\";\n            this.CompanyCity = \"\";\n            this.CompanyState = \"\";\n            this.CompanyZIP = \"\";\n            this.CompanyCountry = \"\";\n            this.CompanyPhone = \"\";\n            this.Profession = \"\";\n            this.TaxOffice = \"\";\n            this.TIN = \"\";\n            this.setInvoiceData();\n        },\n        copyBillingToShipping() {\n            this.ShippingName = this.BillingName;\n            this.ShippingLastName = this.BillingLastName;\n            this.ShippingEmail = this.BillingEmail;\n            if(this.checkout.documentType != 'Invoice') {\n                this.ShippingPhone = this.BillingPhone;\n                this.B_Address1 = this.C_Address1;\n                this.B_Address2 = this.C_Address2;\n                this.B_City = this.C_City;\n                this.B_State = this.C_State;\n                this.B_Country = this.C_Country;\n                this.B_ZIP = this.C_ZIP;\n            }\n            else {\n                this.ShippingPhone = this.CompanyPhone;\n                this.B_Address1 = this.CompanyAddress1;\n                this.B_Address2 = this.CompanyAddress2;\n                this.B_City = this.CompanyCity;\n                this.B_State = this.CompanyState;\n                this.B_Country = this.CompanyCountry;\n                this.B_ZIP = this.CompanyZIP;\n        }\n        },\n        toggleInvoiceDetails() {\n            this.checkout.documentType = this.invoiceType === \"receipt\" ? \"Invoice\" : \"Receipt\";\n            if(this.invoiceType === \"receipt\"){\n                this.addressType=false;\n            }\n\n        },\n        assignFields(invoice){\n            this.billingAddress.firstName = this.BillingName;\n            this.billingAddress.lastName = this.BillingLastName;\n            this.billingAddress.email = this.BillingEmail;\n            if(!invoice) {\n                this.billingAddress.phoneNumber = this.BillingPhone;\n                this.billingAddress.address1 = this.C_Address1;\n                this.billingAddress.address2 = this.C_Address2;\n                this.billingAddress.city = this.C_City;\n                this.billingAddress.country = this.C_Country;\n                this.billingAddress.postalCode = this.C_ZIP;\n                this.billingAddress.state = this.C_State;\n            } else {\n                this.billingAddress.phoneNumber = this.CompanyPhone;\n                this.billingAddress.address1 = this.CompanyAddress1;\n                this.billingAddress.address2 = this.CompanyAddress2;\n                this.billingAddress.city = this.CompanyCity;\n                this.billingAddress.country = this.CompanyCountry;\n                this.billingAddress.postalCode = this.CompanyZIP;\n                this.billingAddress.state = this.CompanyState;\n            }\n            this.checkout.billingAddress = this.billingAddress;\n            this.shippingAddress.address1 = this.B_Address1;\n            this.shippingAddress.address2 = this.B_Address2;\n            this.shippingAddress.city = this.B_City;\n            this.shippingAddress.country = this.B_Country;\n            this.shippingAddress.postalCode = this.B_ZIP;\n            this.shippingAddress.state = this.B_State;\n            if(!invoice) {\n                this.shippingAddress.phoneNumber = this.ShippingPhone;\n                this.shippingAddress.email = this.ShippingEmail;\n                this.shippingAddress.firstName = this.ShippingName;\n                this.shippingAddress.lastName = this.ShippingLastName;\n            } else {\n                this.shippingAddress.phoneNumber = this.BillingPhone;\n                this.shippingAddress.email = this.BillingEmail;\n                this.shippingAddress.firstName = this.BillingName;\n                this.shippingAddress.lastName = this.BillingLastName;\n            }\n            this.checkout.shippingAddress = this.shippingAddress;\n            if(invoice)\n                this.checkout.email = this.ShippingEmail;\n            if(!invoice) {\n                this.clearInvoiceFields();\n            }\n        },\n        setInvoiceData() {\n            this.invoiceData.tin = this.TIN;\n            this.invoiceData.companyName = this.CompanyName;\n            this.invoiceData.companyAddress1 = this.CompanyAddress1;\n            this.invoiceData.companyAddress2 = this.CompanyAddress2;\n            this.invoiceData.companyCity = this.CompanyCity;\n            this.invoiceData.companyState = this.CompanyState;\n            this.invoiceData.companyZIP = this.CompanyZIP;\n            this.invoiceData.companyCountry = this.CompanyCountry;\n            this.invoiceData.companyPhone = this.CompanyPhone;\n            this.invoiceData.profession = this.Profession;\n            this.invoiceData.taxOffice = this.TaxOffice;\n            this.checkout.invoiceData = this.invoiceData;\n        },\n        checkValid() {\n            this.billingErrors=false;\n            this.shippingErrors=false;\n            this.invoiceErrors = false;\n\n            this.validateAndSet(\"B_City\",this.B_City);\n            this.validateAndSet(\"B_Country\",this.B_Country);\n            this.validateZIP(\"B_ZIP\",this.B_ZIP);\n            this.validateAndSet(\"B_Address1\",this.B_Address1);\n            this.validateAndSet(\"B_Address2\",this.B_Address2,true);\n            this.validateEmail(\"BillingEmail\",this.BillingEmail);\n            this.validateAndSetPrimary(\"ShippingName\",this.ShippingName);\n            this.validateAndSetPrimary(\"ShippingPhone\",this.ShippingName);\n            this.validateAndSetPrimary(\"ShippingLastName\",this.ShippingLastName);\n            this.validateAndSet(\"B_State\",this.B_State,this.checkout.documentType != 'Invoice');\n            this.validateAndSetPrimary(\"BillingName\",this.BillingName,this.checkout.documentType === 'Invoice');\n            this.validateAndSetPrimary(\"BillingLastName\",this.BillingLastName,this.checkout.documentType === 'Invoice');\n            this.validateAndSetPrimary(\"BillingPhone\",this.BillingPhone,this.checkout.documentType === 'Invoice');\n            if(this.checkout.documentType === 'Invoice'){\n                this.validateAndSetInvoice(\"CompanyName\",this.CompanyName);\n                this.validateAndSetInvoice(\"CompanyAddress1\", this.CompanyAddress1);\n                this.validateAndSetInvoice(\"CompanyAddress2\", this.CompanyAddress2,true);\n                this.validateAndSetInvoice(\"CompanyCity\", this.CompanyCity);\n                this.validateAndSetInvoice(\"CompanyState\", this.CompanyState);\n                this.validateZIP(\"CompanyZIP\", this.CompanyZIP);\n                this.validateAndSetInvoice(\"CompanyCountry\", this.CompanyCountry);\n                this.validateAndSetInvoice(\"CompanyPhone\", this.CompanyPhone, true);\n                this.validateAndSetInvoice(\"Profession\",this.Profession);\n                this.validateAndSetInvoice(\"TaxOffice\",this.TaxOffice);\n                this.validateAndSetInvoice(\"TIN\",this.TIN);\n            }\n            if(this.checkout.documentType != 'Invoice'){\n                this.validateAndSet(\"C_City\",this.C_City);\n                this.validateAndSet(\"C_Country\",this.C_Country);\n                this.validateAndSet(\"C_Address1\",this.C_Address1);\n                this.validateAndSet(\"C_Address2\",this.C_Address2,true);\n                this.validateAndSet(\"C_State\",this.C_State,this.checkout.documentType != 'Invoice');\n                this.validateEmail(\"ShippingEmail\",this.ShippingEmail);\n                this.validateZIP(\"C_ZIP\",this.C_ZIP);\n            }\n        \n            if(this.billingErrors || this.invoiceErrors){\n                this.assignFields(this.checkout.documentType === 'Invoice');\n                this.$emit('update:checkout', this.checkout);\n                this.billingErrors=false;\n                this.shippingErrors=false;\n                return false;\n            }else {\n                if(this.checkout.documentType === 'Invoice')\n                    this.setInvoiceData()\n                if (this.shippingErrors) {\n                    if(this.addressType)\n                        this.copyBillingToShipping();\n                    else\n                        return false;\n                }\n                    \n                this.assignFields(this.invoiceType==='invoice');\n                this.$emit('update:checkout', this.checkout);\n                return true;\n            }\n            \n            \n        },\n        customerIsWithoutBranches() {\n            return this.customerData.branches == undefined || this.customerData.branches == null || this.customerData.branches.lenght == 0;\n        },\n        validateAndSet(prop, val,optional=false) {\n            if (val.length === 0) {\n                if(!optional){\n                    this[`ValidationClass${prop}`] = 'form-control is-invalid';\n                    this[`${prop}Error`] = this.errorCode1;\n\n                    if(prop[0]==='B'){\n                        console.log(prop, val);\n                        this.shippingErrors = true;\n                    }else{\n                        console.log(prop, val);\n                        this.billingErrors = true;\n                    }\n                }else{\n                    this[`ValidationClass${prop}`] = 'form-control';\n                    this[`${prop}Error`] = ''; \n                }\n            \n            } else if (val.length < 50) {\n                this[`ValidationClass${prop}`] = 'form-control is-valid';\n                this[`${prop}Error`] = '';\n            } else {\n                this[`ValidationClass${prop}`] = 'form-control';\n                this[`${prop}Error`] = '';\n            }\n        },\n        validateAndSetInvoice(prop, val, optional=false) {\n            if (val.length === 0) {\n                if(!optional){\n                    console.log(prop, val);\n                    this[`ValidationClass${prop}`] = 'form-control is-invalid';\n                    this[`${prop}Error`] = this.errorCode1;\n                    this.invoiceErrors = true;\n                } else {\n                    this[`ValidationClass${prop}`] = 'form-control';\n                    this[`${prop}Error`] = ''; \n                }\n            } else if (val.length < 50) {\n                this[`ValidationClass${prop}`] = 'form-control is-valid';\n                this[`${prop}Error`] = '';\n            } else {\n                this[`ValidationClass${prop}`] = 'form-control';\n                this[`${prop}Error`] = '';\n            }\n        },\n        validateAndSetPrimary(prop, val,optional=false) {\n            if (val.length === 0) {\n                if(!optional){\n                    console.log(prop, val);\n                    this[`ValidationClass${prop}`] = 'form-control is-invalid';\n                    this[`${prop}Error`] = this.errorCode1;\n                    if(prop === \"BillingName\" || prop === \"BillingPhone\" || prop === \"BillingLastName\"){\n                        \n                        this.billingErrors = true;\n                    }else{\n                        this.shippingErrors = true;\n                    }\n                }\n            }\n            else {\n                this[`ValidationClass${prop}`] = 'form-control is-valid';\n                this[`${prop}Error`] = '';\n            }\n        },\n        validateZIP(prop, val) {\n            if (/^\\d{5}$/.test(val)) {\n                this[`ValidationClass${prop}`] = 'form-control is-valid';\n                this[`${prop}Error`] = '';\n            } else {\n                console.log(prop, val);\n                this[`ValidationClass${prop}`] = 'form-control is-invalid';\n                this[`${prop}Error`] = 'ZIP code must be a valid 5-digit number';\n                if(prop[0]==='B'){\n                    this.shippingErrors = true;\n                }else{\n                    this.billingErrors = true;\n                }\n            }\n        },\n        validateEmail(prop, val) {\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n            if (emailRegex.test(val)) {\n                this[`ValidationClass${prop}`] = 'form-control is-valid';\n                this[`${prop}Error`] = '';\n            } else {\n                if(prop===\"BillingEmail\" ){\n                    \n                    this.billingErrors = true;\n                }else{\n                    this.shippingErrors = true;\n                }\n                console.log(prop, val);\n                this[`ValidationClass${prop}`] = 'form-control is-invalid';\n                this[`${prop}Error`] = 'Please enter a valid email address';\n            }\n        }\n    },\n    computed: {\n        Checkout: {\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n\n    },\n\n}\napp.component('billingretail', {\n    extends: billingretail,\n    template: '#billingretail'\n});"
  },
  {
    "Name": "CartActions",
    "Html": "<template v-if=\"this._global.isAuthenticated && this._global.permissions.includes('cs_manage_sales_orders')\">\n    <div class=\"row align-items-end justify-content-end mb-2\">\n        <div class=\"col-md-2 d-flex justify-content-end\">\n            <div class=\"btn-group dropdown\">\n                <button type=\"button\" class=\"btn btn-primary dropdown-toggle btn-shadow btn-sm\"\n                        data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <div v-if=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <span v-if=\"!isLoading\">##more##</span>\n                </button>\n                <div class=\"dropdown-menu\">\n                    <a href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#importexportmodal\" @click=\"()=>content='export'\"\n                       class=\"dropdown-item\">##ExportCart##</a>\n                    <a href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#importexportmodal\" @click=\"setContentImport\"\n                       class=\"dropdown-item\">##ImportCart##</a>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade \" id=\"importexportmodal\" tabindex=\"-1\" role=\"dialog\">\n        <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 v-if=\"content==='export'\" class=\"modal-title\">##ExportCart##</h5>\n                    <h5 v-else-if=\"content==='import'\" class=\"modal-title\">##ImportCart##</h5>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div v-if=\"content==='export'\" class=\"modal-body p-4\">\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" id=\"radio-excel\" name=\"radio\" value=\"excel\"\n                               v-model=\"exportOption\" @click=\"()=>exportOption='excel'\">\n                        <label class=\"form-check-label\" for=\"radio-excel\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 class=\"bi bi-filetype-xlsx\" viewBox=\"0 0 16 16\">\n                                <path fill-rule=\"evenodd\"\n                                      d=\"M14 4.5V11h-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5zM7.86 14.841a1.13 1.13 0 0 0 .401.823c.13.108.29.192.479.252.19.061.411.091.665.091.338 0 .624-.053.858-.158.237-.105.416-.252.54-.44a1.17 1.17 0 0 0 .187-.656c0-.224-.045-.41-.135-.56a1.002 1.002 0 0 0-.375-.357 2.028 2.028 0 0 0-.565-.21l-.621-.144a.97.97 0 0 1-.405-.176.37.37 0 0 1-.143-.299c0-.156.061-.284.184-.384.125-.101.296-.152.513-.152.143 0 .266.023.37.068a.624.624 0 0 1 .245.181.56.56 0 0 1 .12.258h.75a1.093 1.093 0 0 0-.199-.566 1.21 1.21 0 0 0-.5-.41 1.813 1.813 0 0 0-.78-.152c-.293 0-.552.05-.777.15-.224.099-.4.24-.527.421-.127.182-.19.395-.19.639 0 .201.04.376.123.524.082.149.199.27.351.367.153.095.332.167.54.213l.618.144c.207.049.36.113.462.193a.387.387 0 0 1 .153.326.512.512 0 0 1-.085.29.558.558 0 0 1-.255.193c-.111.047-.25.07-.413.07-.117 0-.224-.013-.32-.04a.837.837 0 0 1-.249-.115.578.578 0 0 1-.255-.384h-.764Zm-3.726-2.909h.893l-1.274 2.007 1.254 1.992h-.908l-.85-1.415h-.035l-.853 1.415H1.5l1.24-2.016-1.228-1.983h.931l.832 1.438h.036l.823-1.438Zm1.923 3.325h1.697v.674H5.266v-3.999h.791v3.325m7.636-3.325h.893l-1.274 2.007 1.254 1.992h-.908l-.85-1.415h-.035l-.853 1.415h-.861l1.24-2.016-1.228-1.983h.931l.832 1.438h.036l.823-1.438Z\" />\n                            </svg>\n                            Excel\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" id=\"radio-csv\" name=\"radio\" value=\"csv\"\n                               v-model=\"exportOption\" @click=\"()=>exportOption='csv'\">\n                        <label class=\"form-check-label\" for=\"radio-csv\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 class=\"bi bi-filetype-csv\" viewBox=\"0 0 16 16\">\n                                <path fill-rule=\"evenodd\"\n                                      d=\"M14 4.5V14a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5zM3.517 14.841a1.13 1.13 0 0 0 .401.823c.13.108.289.192.478.252.19.061.411.091.665.091.338 0 .624-.053.859-.158.236-.105.416-.252.539-.44.125-.189.187-.408.187-.656 0-.224-.045-.41-.134-.56a1.001 1.001 0 0 0-.375-.357 2.027 2.027 0 0 0-.566-.21l-.621-.144a.97.97 0 0 1-.404-.176.37.37 0 0 1-.144-.299c0-.156.062-.284.185-.384.125-.101.296-.152.512-.152.143 0 .266.023.37.068a.624.624 0 0 1 .246.181.56.56 0 0 1 .12.258h.75a1.092 1.092 0 0 0-.2-.566 1.21 1.21 0 0 0-.5-.41 1.813 1.813 0 0 0-.78-.152c-.293 0-.551.05-.776.15-.225.099-.4.24-.527.421-.127.182-.19.395-.19.639 0 .201.04.376.122.524.082.149.2.27.352.367.152.095.332.167.539.213l.618.144c.207.049.361.113.463.193a.387.387 0 0 1 .152.326.505.505 0 0 1-.085.29.559.559 0 0 1-.255.193c-.111.047-.249.07-.413.07-.117 0-.223-.013-.32-.04a.838.838 0 0 1-.248-.115.578.578 0 0 1-.255-.384h-.765ZM.806 13.693c0-.248.034-.46.102-.633a.868.868 0 0 1 .302-.399.814.814 0 0 1 .475-.137c.15 0 .283.032.398.097a.7.7 0 0 1 .272.26.85.85 0 0 1 .12.381h.765v-.072a1.33 1.33 0 0 0-.466-.964 1.441 1.441 0 0 0-.489-.272 1.838 1.838 0 0 0-.606-.097c-.356 0-.66.074-.911.223-.25.148-.44.359-.572.632-.13.274-.196.6-.196.979v.498c0 .379.064.704.193.976.131.271.322.48.572.626.25.145.554.217.914.217.293 0 .554-.055.785-.164.23-.11.414-.26.55-.454a1.27 1.27 0 0 0 .226-.674v-.076h-.764a.799.799 0 0 1-.118.363.7.7 0 0 1-.272.25.874.874 0 0 1-.401.087.845.845 0 0 1-.478-.132.833.833 0 0 1-.299-.392 1.699 1.699 0 0 1-.102-.627v-.495Zm8.239 2.238h-.953l-1.338-3.999h.917l.896 3.138h.038l.888-3.138h.879l-1.327 4Z\" />\n                            </svg>\n                            CSV\n                        </label>\n                    </div>\n                </div>\n                <div v-else-if=\"content==='import'\" class=\"modal-body p-4\">\n                    <div class=\"row align-items-end justify-content-between\">\n                        <div class=\"col-md-12 mb-2\">\n                            <div class=\"text-nowrap text-primary mb-2\">\n                                ##Add_file## <small>##Accepted_file_types##</small>\n                            </div>\n                            <label hidden for=\"upload\" class=\"form-label\">File</label>\n                            <input ref=\"upload\" class=\"form-control\" type=\"file\" id=\"upload\" @change=\"uploadChange\">\n                            <div class=\"invalid-feedback\" :class=\"{ 'd-block': hasError}\">\n                                ##Please_provide_a_valid_file##\n                            </div>\n                            <p v-if=\"cartHasProducts===true\" class=\"invalid-feedback d-block \">\n                                ##You_have_items_in_your_cart##\n                            </p>\n                            <div class=\"pt-2\" v-if=\"importHasError===true\">\n                                <p v-if=\"items != null\" class=\"fs-sm fw-bold\">\n                                    {{items.length}}\n                                    ##products_added_to_cart##.\n                                </p>\n                                <p class=\"fs-sm\">##The_below_products_were_not_found##:</p>\n                                <ol v-if=\"this.errors.length >0\">\n                                    <li v-for=\"error in errors\">{{error.message}}</li>\n                                </ol>\n                            </div>\n                            <div class=\"\" v-if=\"fatalErrorOccured===true\">\n                                <p class=\"invalid-feedback d-block fw-bold\">##fatal_error_message## </p>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"modal-footer py-2 px-4 text-end\">\n                    <button v-if=\"content==='import'\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                            @click.prevent=\"uploadCart()\">\n                        <div v-if=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <span v-if=\"!isLoading\">##ImportCart##</span>\n                    </button>\n                    <button v-if=\"content==='export'\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                            @click.prevent=\"exportCart(exportOption)\">\n                        <div v-if=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <span v-if=\"!isLoading\">##ExportCart##</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>",
    "Translations": [
      {
        "Key": "Accepted_file_types",
        "Value": "Accepted_file_types",
        "Translation": {
          "EL": "(Τύποι αρχείων: excel, csv)",
          "EN": "(File types: excel, csv)"
        }
      },
      {
        "Key": "Add_file",
        "Value": "Add file",
        "Translation": {
          "EL": "Εισαγωγή αρχείου",
          "EN": "Add file"
        }
      },
      {
        "Key": "Please_provide_a_valid_file",
        "Value": "Please provide a valid file",
        "Translation": {
          "EL": "Παρακαλώ διαλέξτε ένα σωστό αρχείο",
          "EN": "Please provide a valid file"
        }
      },
      {
        "Key": "ImportCart",
        "Value": "ImportCart",
        "Translation": {
          "EL": "Εισαγωγή καλαθιού",
          "EN": "Import cart"
        }
      },
      {
        "Key": "ExportCart",
        "Value": "ExportCart",
        "Translation": {
          "EL": "Εξαγωγή καλαθιού",
          "EN": "Export cart"
        }
      },
      {
        "Key": "more",
        "Value": "more",
        "Translation": {
          "EL": "Περισσότερα",
          "EN": "More"
        }
      },
      {
        "Key": "The_below_products_were_not_found",
        "Value": "The below products were not found",
        "Translation": {
          "EL": "Τα παρακάτω προϊόντα δεν βρέθηκαν",
          "EN": "The below products were not found"
        }
      },
      {
        "Key": "You_have_items_in_your_cart",
        "Value": "You have items in your cart",
        "Translation": {
          "EL": "Έχετε ήδη αντικείμενα στο καλάθι. Είστε σίγουροι ότι θέλετε να εισάγετε νεά προιόντα;",
          "EN": "You have items in your cart. Are you sure you want to add new products?"
        }
      },
      {
        "Key": "products_added_to_cart",
        "Value": "products added to cart",
        "Translation": {
          "EL": "προϊόντα προστέθηκαν στο καλάθι",
          "EN": "products added to cart"
        }
      },
      {
        "Key": "fatal_error_message",
        "Value": "fatal_error_message",
        "Translation": {
          "EL": "Ωχ! Κάτι πήγε στραβά κατά την επεξεργασία του αρχείου σας. Παρακαλώ ελέγξτε το περιεχόμενο του αρχείου και προσπαθήστε ξανά.",
          "EN": "Oops! Something went wrong while processing your file. Please check the contents of the file and try again."
        }
      }
    ],
    "Js": "const cartactions = {\n    props:\n        {},\n    data() {\n        return {\n            hasError: false,\n            exportOption: 'excel',\n            content: null,\n            isLoading: false,\n            cartHasProducts: false,\n            importHasError: false,\n            errors: [],\n            items: null,\n            fatalErrorOccured: false,\n        }\n    },\n    mounted() {\n    },\n\n    methods: {\n        uploadChange() {\n            this.errors = [];\n            this.items = null;\n            this.importHasError = false;\n            this.fatalErrorOccured = false;\n\n            if (this.$refs.upload.files.length > 0 && this.$refs.upload.files[0].type != \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" && this.$refs.upload.files[0].type != \"text/csv\") {\n                this.hasError = true;\n            } else {\n                this.hasError = false;\n            }\n        },\n        async uploadCart() {\n            this.errors = [];\n            this.importHasError = false;\n            if (this.hasError) {\n                return;\n            }\n            if (this.$refs.upload.files.length != 0 && !this.hasError) {\n                this.isLoading = true;\n                const file = this.$refs.upload.files[0];\n                const response = await this._createCartFromFile(file);\n                this.isLoading = false;\n                if (response.status === 500) {\n                    this.fatalErrorOccured = true;\n                    return;\n                }\n                if (response.data.errors != null && response.data.errors.length > 0) {\n                    this.importHasError = true;\n                    this.items = response.data.cart.cartItems;\n                    this.errors = response.data.errors;\n                }\n                else {\n                    ;\n                    document.getElementById(\"upload\").value = '';\n                    this.closeModal(\"importexportmodal\");\n                }\n\n            }\n        },\n        setContentImport() {\n            this.content = 'import';\n            this._getCart(e => {\n                if (e != null && e.cartItems.length > 0) {\n                    this.cartHasProducts = true;\n                }\n            });\n        },\n        async exportCart(type) {\n            if (type === undefined || type === null) {\n                return;\n            }\n            this.isLoading = true;\n            await this._exportCart(type);\n            this.isLoading = false;\n            this.closeModal(\"importexportmodal\");\n        },\n        closeModal(modalId) {\n            var myModalEl = document.getElementById(modalId);\n            var modal = bootstrap.Modal.getInstance(myModalEl)\n            modal.hide();\n        },\n    }\n}\n\napp.component('cartactions', {\n    extends: cartactions,\n    template: '#cartactions'\n});"
  },
  {
    "Name": "CartExport",
    "Html": "<div v-if=\"this._global.isAuthenticated && this._global.permissions.includes('cs_manage_sales_orders')\" class=\"row align-items-end justify-content-end mb-2\">\n    <div class=\"col-md-2 d-flex justify-content-end\">\n        <div class=\"btn-group dropdown\">\n            <button type=\"button\" class=\"btn btn-primary dropdown-toggle btn-shadow btn-sm\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <div v-if=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <span v-if=\"!isLoading\">##Export_Cart##</span>\n            </button>\n            <div class=\"dropdown-menu\">\n                <a href=\"#\" class=\"dropdown-item\" @click.prevent=\"exportCart('excel')\">Excel</a>\n                <a href=\"#\" class=\"dropdown-item\" @click.prevent=\"exportCart('csv')\">Csv</a>\n            </div>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Export_Cart",
        "Value": "Export Cart",
        "Translation": {
          "EL": "Εξαγωγή καλαθιού",
          "EN": "Export Cart"
        }
      }
    ],
    "Js": "const cartexport = {\n    props:\n        {},\n    data() {\n        return {\n            isLoading: false,\n            hasError: false\n        }\n    },\n    mounted() {\n    },\n    methods: {\n        async exportCart(type) {\n            this.isLoading = true;\n            await this._exportCart(type);\n            this.isLoading = false;\n        }\n    }\n}\n\napp.component('cartexport', {\n    extends: cartexport,\n    template: '#cartexport'\n});"
  },
  {
    "Name": "CartImport",
    "Html": "<div v-if=\"this._global.isAuthenticated\" class=\"row align-items-end justify-content-between mb-5\">\n    <div class=\"col-md-6 mb-2\">\n        <div class=\"text-nowrap text-primary mb-2\">\n            ##Add_file## <small>(File types: excel, csv)</small>\n        </div>\n        <label hidden for=\"upload\" class=\"form-label\">File</label>\n        <input ref=\"upload\" class=\"form-control\" type=\"file\" id=\"upload\" @change=\"uploadChange\">\n        <div class=\"invalid-feedback\" :class=\"{ 'd-block': hasError}\">##Please_provide_a_valid_file##</div>\n    </div>\n    <div class=\"col-md-2 d-flex justify-content-end\">\n        <button class=\"btn btn-primary btn-shadow\" @click=\"openModal\">\n            <div v-if=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <span v-if=\"!isLoading\">\n                ##Upload##\n            </span>\n        </button>\n    </div>\n</div>\n<div ref=\"uploadmodal\" class=\"modal fade\" v-bind:class=\"{show: showModal}\" id=\"uploadModal\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">##Confirm_Bulk_Order##</h5>\n                <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\" @click=\"closeModal\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <p class=\"fs-sm\">##You_have_items_in_your_cart##</p>\n                <p class=\"fs-sm\">##Are_you_sure_you_want_to_proceed_?##</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button @click=\"closeModal\" class=\"btn btn-secondary btn-sm\">##Cancel##</button>\n                <button @click=\"upload\" class=\"btn btn-danger btn-shadow btn-sm\">\n                    ##Ok##\n                    <span v-show=\"isLoading\" class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n<div ref=\"uploadmodalerror\" class=\"modal fade\" v-bind:class=\"{show: showModalError}\" id=\"uploadModalError\">\n    <div class=\"modal-dialog modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">##Import_Errors##</h5>\n                <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\" @click=\"closeModalError\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <p v-if=\"items != null\" class=\"fs-sm fw-bold\">{{items.length}} ##products_added_to_cart##.</p>\n                <p class=\"fs-sm\">##The_below_products_were_not_found##:</p>\n                <ol v-if=\"this.errors.length >0\">\n                    <li v-for=\"error in errors\">{{error.message}}</li>\n                </ol>\n            </div>\n            <div class=\"modal-footer\">\n                <button @click=\"proceedToCart\" class=\"btn btn-danger btn-shadow btn-sm\">\n                    ##Ok##\n                    <span v-show=\"isLoading\" class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Add_file",
        "Value": "Add file",
        "Translation": {
          "EL": "Εισαγωγή αρχείου",
          "EN": "Add file"
        }
      },
      {
        "Key": "Please_provide_a_valid_file",
        "Value": "Please provide a valid file",
        "Translation": {
          "EL": "Παρακαλώ διαλέξτε ένα σωστό αρχείο",
          "EN": "Please provide a valid file"
        }
      },
      {
        "Key": "Upload",
        "Value": "Upload",
        "Translation": {
          "EL": "Αποστολή",
          "EN": "Upload"
        }
      },
      {
        "Key": "Confirm_Bulk_Order",
        "Value": "Confirm Bulk Order",
        "Translation": {
          "EL": "Επιβεβαίωση εισαγωγής παραγγελίας",
          "EN": "Confirm Bulk Order"
        }
      },
      {
        "Key": "You_have_items_in_your_cart",
        "Value": "You have items in your cart",
        "Translation": {
          "EL": "Έχετε ήδη αντικείμενα στο καλάθι",
          "EN": "You have items in your cart"
        }
      },
      {
        "Key": "Are_you_sure_you_want_to_proceed_?",
        "Value": "Are you sure you want to proceed ?",
        "Translation": {
          "EL": "Είστε σίγουροι ότι θέλετε να συνεχίσετε;",
          "EN": "Are you sure you want to proceed ?"
        }
      },
      {
        "Key": "Cancel",
        "Value": "Cancel",
        "Translation": {
          "EL": "Ακύρωση",
          "EN": "Cancel"
        }
      },
      {
        "Key": "Ok",
        "Value": "Ok",
        "Translation": {
          "EL": "Οκ",
          "EN": "Ok"
        }
      },
      {
        "Key": "Import_Errors",
        "Value": "Import Errors",
        "Translation": {
          "EL": "Σφάλματα Εισαγωγής",
          "EN": "Import Errors"
        }
      },
      {
        "Key": "The_below_products_were_not_found",
        "Value": "The below products were not found",
        "Translation": {
          "EL": "Τα παρακάτω προϊόντα δεν βρέθηκαν",
          "EN": "The below products were not found"
        }
      },
      {
        "Key": "products_added_to_cart",
        "Value": "products added to cart",
        "Translation": {
          "EL": "προϊόντα προστέθηκαν στο καλάθι",
          "EN": "products added to cart"
        }
      }
    ],
    "Js": "const cartimport = {\n    props:\n        {},\n    data() {\n        return {\n            isLoading: false,\n            hasError: false,\n            showModal: false,\n            showModalError: false,\n            errors: [],\n            items: null\n        }\n    },\n    mounted() {\n        // this.upload();\n    },\n    methods: {\n        async upload() {\n            if (this.$refs.upload.files.length != 0 && !this.hasError) {\n                this.isLoading = true;\n                const file = this.$refs.upload.files[0];\n                const response = await this._createCartFromFile(file);\n                this.isLoading = false;\n                var path = window.location.pathname.substring(1).split(\"/\");\n\n                if (this.showModal)\n                    this.closeModal();\n\n                if (response.data.errors != null && response.data.errors.length > 0) {\n                    this.items = response.data.cart.cartItems;\n                    this.errors = response.data.errors;\n                    this.openModalError();\n                } else if (path.length > 0 && path.includes('profile') && response.data.cart.cartItems.length > 0) {\n                    window.location.href = \"/cart\";\n                }\n\n            }\n        },\n        uploadChange() {\n            if (this.$refs.upload.files.length > 0 && this.$refs.upload.files[0].type != \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" && this.$refs.upload.files[0].type != \"text/csv\") {\n                this.hasError = true;\n            } else {\n                this.hasError = false;\n            }\n        },\n        openModal() {\n            if (this.$refs.upload.files.length != 0 && !this.hasError) {\n                this._getCart(e => {\n                    if (e != null && e.cartItems.length > 0) {\n                        this.showModal = true;\n                        var backdrop = document.createElement(\"div\");\n                        backdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\");\n                        document.body.appendChild(backdrop);\n                        this.$refs.uploadmodal.style.display = \"block\";\n                    }\n                    else {\n                        this.upload();\n                    }\n                })\n\n            }\n        },\n        closeModal() {\n            this.showModal = false;\n            this.$refs.uploadmodal.style.display = \"\";\n            document.querySelector('.modal-backdrop').remove();\n        },\n        openModalError() {\n            this.showModalError = true;\n            var backdrop = document.createElement(\"div\");\n            backdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\");\n            document.body.appendChild(backdrop);\n            this.$refs.uploadmodalerror.style.display = \"block\";\n        },\n        closeModalError() {\n            this.showModalError = false;\n            this.$refs.uploadmodalerror.style.display = \"\";\n            document.querySelector('.modal-backdrop').remove();\n        },\n        proceedToCart() {\n            this.closeModalError();\n            var path = window.location.pathname.substring(1).split(\"/\");\n            if (path.length > 0 && path.includes('profile')) {\n                window.location.href = \"/cart\";\n            }\n        }\n    }\n}\n\napp.component('cartimport', {\n    extends: cartimport,\n    template: '#cartimport'\n});"
  },
  {
    "Name": "Company",
    "Html": "<div v-if=\"this.customer !==null\" class=\"row gx-4 gy-3\">\n    <div class=\"col-sm-6\">\n        <div class=\"card border-0 shadow\">\n            <div class=\"card-body text-center\">\n                <i class=\"ci-location h3 mt-2 mb-4 text-primary\"></i>\n                <h3 class=\"h6 mb-2\">{{this.customer.name}}</h3>\n                <ul class=\"list-unstyled fs-sm mb-0\">\n                    <li>\n                        <span class=\"nav-link-style\">\n                            {{this.customer?.address?.address1}},\n                            {{this.customer?.address?.city}}, {{this.customer?.address?.state}}\n                            {{this.customer?.address?.postalCode}},\n                            {{this.customer?.address?.country}}\n                        </span>\n                    </li>\n                    <li v-if=\"this.customer.Email\">\n                        <span class=\"text-muted me-1\">##Email##:</span>\n                        <a class=\"nav-link-style\"\n                           href=\"mailto:{{this.customer.Email}}\">{{this.customer.email}}</a>\n                    </li>\n                    <li v-if=\"this.customer.Phone\">\n                        <span class=\"text-muted me-1\">##Phone##:</span>\n                        <span class=\"nav-link-style\">{{this.customer.phone}}</span>\n                    </li>\n                    <li v-if=\"this.customer.VatType\">\n                        <span class=\"text-muted me-1\">##VatType##:</span>\n                        <span class=\"nav-link-style\">{{this.customer.vatType}}</span>\n                    </li>\n                    <li v-if=\"this.customer.TaxOffice\">\n                        <span class=\"text-muted me-1\">##TaxOffice##:</span>\n                        <span class=\"nav-link-style\">{{this.customer.taxOffice}}</span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div v-if=\"this.customer.branches !== null || this.customer.branches.length > 0\"\n         v-for=\"branch in this.customer.branches\" class=\"col-sm-6\">\n        <div class=\"card\">\n            <div class=\"card-body text-center\">\n                <i class=\"ci-location h3 mt-2 mb-4 text-primary\"></i>\n                <h3 class=\"h6 mb-2\">{{branch.name}}</h3>\n                <ul class=\"list-unstyled fs-sm mb-0\">\n                    <li v-if=\"branch.address\">\n                        <span class=\"nav-link-style\">\n                            {{branch.address.address1}}, {{branch.address.city}},\n                            {{branch.address.state}} {{branch.address.postalCode}},\n                            {{branch.address.country}}\n                        </span>\n                    </li>\n                    <li v-if=\"branch.Phone\">\n                        <span class=\"text-muted me-1\">##phone##:</span>\n                        <span class=\"nav-link-style\">{{branch.phone}}</span>\n                    </li>\n                    <li v-if=\"branch.VatType\">\n                        <span class=\"text-muted me-1\">##vatType##:</span>\n                        <span class=\"nav-link-style\">{{branch.vatType}}</span>\n                    </li>\n                    <li v-if=\"branch.TaxOffice\">\n                        <span class=\"text-muted me-1\">##taxOffice##:</span>\n                        <span class=\"nav-link-style\">{{branch.taxOffice}}</span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "email",
        "Value": "Email",
        "Translation": {
          "EL": "Email",
          "EN": "Email",
          "RO": "Email"
        }
      },
      {
        "Key": "Phone",
        "Value": "Phone",
        "Translation": {
          "EL": "Τηλέφωνο",
          "EN": "Phone",
          "RO": "Telefon"
        }
      },
      {
        "Key": "VatType",
        "Value": "Vat type",
        "Translation": {
          "EL": "Τύπος Φ.Π.Α.",
          "EN": "Vat type",
          "RO": "TVA"
        }
      },
      {
        "Key": "TaxOffice",
        "Value": "Tax office",
        "Translation": {
          "EL": "Εφορία",
          "EN": "Tax office",
          "RO": "Nr. Reg. Comert"
        }
      }
    ],
    "Js": "const company = {\n    props:\n        {},\n    data() {\n        return {\n            user: null,\n            customer: null,\n\n        }\n    },\n    mounted() {\n        this._getUserProfile(e => {\n            this.user = e.user;\n            this.customer = e.customer;\n        })\n    }\n}\n\napp.component('company', {\n    extends: company,\n    template: '#company'\n});"
  },
  {
    "Name": "FixedSideMenu",
    "Html": "<div class=\"sidemenu-placeholder d-none d-lg-block\"></div>\n<ul v-if=\"navigations?.length > 0\" role=\"tablist\" class=\"nav nav-tabs nav-justified mt-4 mt-lg-4 mb-0\">\n    <li v-for=\"(nav, navIndex) in navigations\" role=\"presentation\" class=\"nav-item text-nowrap\">\n        <a :href=\"`#navTab-${navIndex}`\" role=\"tab\" data-bs-toggle=\"tab\" aria-expanded=\"true\" class=\"nav-link fw-medium\" :class=\"isActive(nav,0,navIndex) ? 'active' : ''\">{{nav.navigationTitle}}</a>\n    </li>\n</ul>\n<div v-if=\"navigations?.length > 0\" data-simplebar=\"init\" class=\"offcanvas-body px-0 pt-3 pb-0\">\n    <div class=\"tab-content\">\n        <div v-for=\"(nav, navIndex) in navigations\" :id=\"`navTab-${navIndex}`\" role=\"tabpanel\" class=\"sidebar-nav tab-pane fade\" :class=\"isActive(nav,0,navIndex)? 'active show' : ''\">\n            <div class=\"widget widget-categories\">\n                <div v-if=\"nav.navigations?.length > 0\" :id=\"`shop-categories-${navIndex}`\" class=\"accordion\">\n                    <div v-for=\"(innerNav, innerIndex) in nav.navigations\" class=\"accordion-item border-bottom\">\n                        <h3 class=\"accordion-header px-grid-gutter\">\n                            <button v-if=\"innerNav.navigations?.length > 0\" type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"`#category-collapse-${navIndex}-${innerIndex}`\" aria-expanded=\"false\" :aria-controls=\"`category-collapse-${navIndex}-${innerIndex}`\" class=\"accordion-button py-3 collapsed\">\n                                <span class=\"d-flex align-items-center\">\n                                    <img v-if=\"innerNav.image?.link\" :src=\"innerNav.image?.link\" width=\"20\" height=\"20\" class=\"me-2\">\n                                    <div v-else width=\"20\" height=\"20\"></div>\n                                    {{innerNav.navigationTitle}}\n                                </span>\n                            </button>\n                            <a v-else :href=\"innerNav.url\" class=\"nav-link-style d-block fs-md fw-normal py-3\" :class=\"isActive(innerNav,1) ? 'active' : ''\">\n                                <span class=\"d-flex align-items-center\">\n                                    <img v-if=\"innerNav.image?.link\" :src=\"innerNav.image?.link\" width=\"20\" height=\"20\" class=\"me-2\">{{innerNav.navigationTitle}}\n                                </span>\n                            </a>\n                        </h3>\n                        <div :id=\"`category-collapse-${navIndex}-${innerIndex}`\" :data-bs-parent=\"`#shop-categories-${navIndex}`\" :class=\"isActive(innerNav,1)  ? 'collapse show' : 'collapse'\">\n                            <div class=\"px-grid-gutter pt-1 pb-4\">\n                                <div class=\"widget widget-links\">\n                                    <ul v-if=\"innerNav.navigations?.length > 0\" class=\"widget-list border-0 ms-3\">\n                                        <li v-for=\"subCategory in innerNav.navigations\" class=\"widget-list-item mb-3\" :class=\"isActive(subCategory,2)  ? 'active' : ''\">\n                                            <a :href=\"subCategory.url\" class=\"widget-list-link\">{{subCategory.navigationTitle}}</a>\n                                            <ul v-if=\"subCategory.navigations?.length > 0\" class=\"widget-list pt-1\">\n                                                <li v-for=\"category in subCategory.navigations\" class=\"widget-list-item\" :class=\"isActive(category,3) ? 'active' : ''\">\n                                                    <a :href=\"category.url\" class=\"widget-list-link\">{{category.navigationTitle}}</a>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- <div id=\"navTabProducts\" role=\"tabpanel\" class=\"sidebar-nav tab-pane fade active show\">\n            <div class=\"widget widget-categories\">\n                <div v-if=\"navigations?.length > 0 && navigations.find(f => f.navigationType == 'Categories')\" id=\"shop-categories\" class=\"accordion\">\n                    <div v-for=\"(navigation, navIndex) in navigations.find(f => f.navigationType == 'Categories').navigations\" class=\"accordion-item border-bottom\">\n                        <h3 class=\"accordion-header px-grid-gutter\">\n                            <button type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"`#category-collapse-${navIndex}`\" aria-expanded=\"false\" :aria-controls=\"`category-collapse-${navIndex}`\" class=\"accordion-button py-3 collapsed\">\n                                <span class=\"d-flex align-items-center\">\n                                    <img :src=\"navigation.image?.link\" width=\"20\" height=\"20\" class=\"mt-n1 me-2\">{{navigation.navigationTitle}}\n                                </span>\n                            </button>\n                        </h3>\n                        <div :id=\"`category-collapse-${navIndex}`\" data-bs-parent=\"#shop-categories\" class=\"collapse\">\n                            <div class=\"px-grid-gutter pt-1 pb-4\">\n                                <div class=\"widget widget-links\">\n                                    <ul v-if=\"navigation.navigations?.length > 0\" class=\"widget-list\">\n                                        <li v-for=\"subCategory in navigation.navigations\" class=\"widget-list-item mb-3\">\n                                            <a :href=\"subCategory.url\" class=\"widget-list-link\">{{subCategory.navigationTitle}}</a>\n                                            <ul v-if=\"subCategory.navigations?.length > 0\" class=\"widget-list pt-1\">\n                                                <li v-for=\"category in subCategory.navigations\" class=\"widget-list-item\">\n                                                    <a :href=\"category.url\" class=\"widget-list-link\">{{category.navigationTitle}}</a>\n                                                </li>\n                                            </ul>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div id=\"navTabMenu\" role=\"tabpanel\" class=\"sidebar-nav tab-pane fade\">\n            <div class=\"widget widget-categories\">\n                <div v-if=\"navigations?.length > 0 && navigations.filter(f => f.navigationType != 'Categories')?.length > 0\" id=\"shop-menu\" class=\"accordion\">\n                    <div v-for=\"(navigation, navIndex) in navigations.filter(f => f.navigationType != 'Categories')\" class=\"accordion-item border-bottom\">\n                        <h3 class=\"accordion-header px-grid-gutter\">\n                            <button v-if=\"navigation.navigationType == 'Brands'\" type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"`#menu-collapse-${navIndex}`\" aria-expanded=\"false\" :aria-controls=\"`menu-collapse-${navIndex}`\" class=\"accordion-button py-3 collapsed\">\n                                <span class=\"d-flex align-items-center\">\n                                    <img v-if=\"navigation.image?.link\" :src=\"navigation.image?.link\" width=\"20\" height=\"20\" class=\"mt-n1 me-2\">{{navigation.navigationTitle}}\n                                </span>\n                            </button>\n                            <a v-else :href=\"navigation.url\" class=\"nav-link-style d-block fs-md fw-normal py-3\">\n                                <span class=\"d-flex align-items-center\">\n                                    <img v-if=\"navigation.image?.link\" :src=\"navigation.image?.link\" width=\"20\" height=\"20\">{{navigation.navigationTitle}}\n                                </span>\n                            </a>\n                        </h3>\n                        <div v-if=\"navigation.navigationType == 'Brands'\" :id=\"`menu-collapse-${navIndex}`\" data-bs-parent=\"#shop-menu\" class=\"collapse\">\n                            <div class=\"px-grid-gutter pt-1 pb-4\">\n                                <div class=\"widget widget-links\">\n                                    <ul v-if=\"navigation.navigations?.length > 0\" class=\"widget-list\">\n                                        <li v-for=\"brand in navigation.navigations\" class=\"widget-list-item mb-3\">\n                                            <a :href=\"brand.url\" class=\"widget-list-link\">{{brand.navigationTitle}}</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> -->\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Products",
        "Value": "Products",
        "Translation": {
          "EL": "Προϊόντα",
          "EN": "Products"
        }
      },
      {
        "Key": "Menu",
        "Value": "Menu",
        "Translation": {
          "EL": "Μενού",
          "EN": "Menu"
        }
      }
    ],
    "Js": "const fixedsidemenu = {\n    props: {},\n    data() {\n        return {\n            navigations: [],\n            navigationPath: []\n        }\n    },\n    methods: {\n        isActive(navItem, pos, tabIndex = null) {\n            if (this.navigationPath.length > 0) {\n                return navItem.navigationTitle == this.navigationPath[pos];\n            }\n            return tabIndex === 0; //when choosing main tab select the first one as active by default\n        },\n        search(navItem, target, currpath = []) {\n            if (navItem.url == target) {\n                return [...currpath, navItem.navigationTitle]\n            }\n            if (navItem.navigations != null) {\n                for (const element of navItem.navigations) {\n                    const path = this.search(element, target, [...currpath, navItem.navigationTitle]);\n                    if (path.length > 0) {\n                        return path;\n                    }\n                }\n            }\n            return [];\n        }\n    },\n    mounted() {\n\n        const location = '/' + window.location.pathname.replace(/^\\//, '');\n        this._getHeaderMenu(e => {\n            this.navigations = e;\n            for (const el of e) {\n                const cur = this.search(el, location);\n                if (cur.length > 0) {\n                    this.navigationPath = cur;\n                }\n            }\n\n\n        });\n\n\n    }\n}\n\napp.component('fixedsidemenu', {\n    extends: fixedsidemenu,\n    template: '#fixedsidemenu'\n});"
  },
  {
    "Name": "LoginModal",
    "Html": "<div v-if=\"!userisauthenticated\" class=\"modal fade\" id=\"signin-modal\" tabindex=\"-1\" aria-modal=\"true\" role=\"dialog\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header body-bg-second\">\n                <ul class=\"nav nav-tabs card-header-tabs\" role=\"tablist\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link fw-medium active\" href=\"#signin-tab\" data-bs-toggle=\"tab\" role=\"tab\"\n                           aria-selected=\"true\"><i class=\"ci-unlocked me-2 mt-n1\"></i>##SignIn##</a>\n                    </li>\n                    <li v-if=\"(this.globalModel.operationMode != 'Catalog' && this.globalModel.operationMode != 'RetailWholesale' && this.globalModel.operationMode != 'CatalogRetailPrice' && this.globalModel.operationMode != 'RequiresLogin'&& this.globalModel.operationMode != 'CatalogPrice')\" class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#signup\" data-bs-toggle=\"tab\" role=\"tab\" aria-selected=\"false\">\n                            <i class=\"ci-user me-2 mt-n1\"></i>\n                            ##SignUp##\n                        </a>\n                    </li>\n                </ul>\n                <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body tab-content py-4\">\n                <form @submit.prevent=\"submitForm\" class=\"needs-validation tab-pane fade show active\" autocomplete=\"off\"\n                      novalidate=\"\" id=\"signin-tab\">\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\" for=\"email\">##EmailΑddress##</label>\n                        <input class=\"form-control\" v-model=\"email\" type=\"email\" id=\"email\"\n                               placeholder=\"johndoe@example.com\" required=\"\" />\n                        <div v-if=\"this.emailError\" class=\"invalid-feedback\" style=\"display: block\">\n                            ##emailError##\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\" for=\"password\">##Password##</label>\n                        <div class=\"password-toggle\">\n                            <input class=\"form-control\" type=\"password\" v-model=\"password\" id=\"password\" required=\"\" />\n                            <label class=\"password-toggle-btn\" aria-label=\"Show/hide password\">\n                                <input class=\"password-toggle-check\" type=\"checkbox\" /><span class=\"password-toggle-indicator\" @click=\"toggleVisibility('password')\"></span>\n                            </label>\n                        </div>\n                        <div v-if=\"this.passwordError\" class=\"invalid-feedback\" style=\"display: block\">\n                            ##passwordError##\n                        </div>\n                        <div v-if=\"this.islocked\" class=\"invalid-feedback\" style=\"display: block\">\n                            ##userLocked##\n                        </div>\n                    </div>\n                    <div class=\"mb-3 d-flex flex-wrap justify-content-between\">\n                        <div class=\"form-check mb-2\"></div>\n                        <a class=\"fs-sm\" href=\"/account/forgotpassword\">##forgotPasswordText##</a>\n                    </div>\n                    <!-- <button class=\"btn btn-primary btn-shadow d-block w-100\" type=\"submit\">\n                        <div v-show=\"!isloadingModal\">##SignIn##</div>\n                        <span v-show=\"isloadingModal\" class=\"ml-2 spinner-border spinner-border-sm text-white\"></span>\n                    </button> -->\n                    <button class=\"btn btn-primary btn-shadow d-block w-100\" type=\"button\" @click=\"accountLogin()\">\n                        <div v-show=\"!isloadingModal\">##SignIn##</div>\n                        <span v-show=\"isloadingModal\" class=\"ml-2 spinner-border spinner-border-sm text-white\"></span>\n                    </button>\n                </form>\n                <form class=\"needs-validation tab-pane fade show\" id=\"signup\" autocomplete=\"off\" @submit.prevent=\"checkForm\">\n                    <!-- email -->\n                    <div class=\"input-group mb-3\">\n                        <i class=\"ci-mail position-absolute top-50 translate-middle-y text-muted fs-base ms-3\"></i>\n                        <input v-model=\"signupEmail\" class=\"form-control rounded-start\" type=\"email\" placeholder=\"Email\" required id=\"log-email\">\n                    </div>\n                    <div v-if=\"emailError===0\" class=\"text-danger\" style=\"margin-bottom:30px\">##InvalidEmailText##</div>\n                    <div v-else-if=\"emailError===1\" class=\"text-danger\" style=\"margin-bottom:30px\">##EmptyEmailText##</div>\n                    <div v-else-if=\"emailError===2\" class=\"text-danger\" style=\"margin-bottom:30px\">##UserAlreadyExists##</div>\n                    <div v-else class=\"text-danger\" style=\"margin-bottom:30px\"></div>\n                    <!-- fristname -->\n                    <div class=\"input-group mb-3\">\n                        <i class=\"ci-user position-absolute top-50 translate-middle-y text-muted fs-base ms-3\"></i>\n                        <input v-model=\"firstname\" class=\"form-control rounded-start\" type=\"firstname\" placeholder=\"##FirstName##\" required id=\"log-firstname\">\n                    </div>\n                    <div v-if=\"firstnameError===0\" class=\"text-danger\" style=\"margin-bottom:30px\">##InvalidFirstNameText##</div>\n                    <div v-else-if=\"firstnameError===1\" class=\"text-danger\" style=\"margin-bottom:30px\">##EmptyFirstNameText##</div>\n                    <div v-else class=\"text-danger\" style=\"margin-bottom:30px\"></div>\n                    <!-- lastname -->\n                    <div class=\"input-group mb-3\">\n                        <i class=\"ci-user position-absolute top-50 translate-middle-y text-muted fs-base ms-3\"></i>\n                        <input v-model=\"lastname\" class=\"form-control rounded-start\" type=\"lastname\" placeholder=\"##LastName##\" required=\"\" id=\"log-lastname\">\n                    </div>\n                    <div v-if=\"lastnameError===0\" class=\"text-danger\" style=\"margin-bottom:30px\">##InvalidLastNameText##</div>\n                    <div v-else-if=\"lastnameError===1\" class=\"text-danger\" style=\"margin-bottom:30px\">##EmptyLastNameText##</div>\n                    <div v-else class=\"text-danger\" style=\"margin-bottom:30px\"></div>\n                    <!-- password -->\n                    <div class=\"input-group mb-3\">\n                        <i class=\"ci-locked position-absolute top-50 translate-middle-y text-muted fs-base ms-3\"></i>\n                        <div class=\"password-toggle w-100\">\n                            <input v-model=\"signupPassword\" class=\"form-control\" type=\"password\" placeholder=\"##Password##\" required id=\"pass2\">\n                            <label class=\"password-toggle-btn\" aria-label=\"Show/hide password\">\n                                <input class=\"password-toggle-check\" type=\"checkbox\"><span class=\"password-toggle-indicator\" @click=\"toggleVisibility('pass2')\"></span>\n                            </label>\n                        </div>\n                    </div>\n                    <div v-if=\"passwordError===0\" class=\"text-danger\" style=\"margin-bottom:30px\">##EmptyPasswordText##</div>\n                    <div v-else-if=\"passwordError===1\" class=\"text-danger\" style=\"margin-bottom:30px\">##Passwordistooshort##</div>\n                    <div v-else-if=\"passwordError===2\" class=\"text-danger\" style=\"margin-bottom:30px\">##Missingalphanumericcharactersandnonalphanumeric##</div>\n                    <div v-else-if=\"passwordError===3\" class=\"text-danger\" style=\"margin-bottom:30px\">##PasswordMismatchText##</div>\n                    <div v-else-if=\"passwordError === null\" class=\"text-success\" style=\"margin-bottom: 30px\">##PasswordCorrectText##</div>\n                    <!-- retype password  -->\n                    <div class=\"input-group mb-3\">\n                        <i class=\"ci-locked position-absolute top-50 translate-middle-y text-muted fs-base ms-3\"></i>\n                        <div class=\"password-toggle w-100\">\n                            <input v-model=\"retypeSingupPassword\" class=\"form-control\" type=\"password\" placeholder=\"##RetypePassword##\" required id=\"pass3\">\n                            <label class=\"password-toggle-btn\" aria-label=\"Show/hide password\">\n                                <input class=\"password-toggle-check\" type=\"checkbox\"><span class=\"password-toggle-indicator\" @click=\"toggleVisibility('pass3')\"></span>\n                            </label>\n                        </div>\n                    </div>\n                    <div v-if=\"passwordError===0\" class=\"text-danger\" style=\"margin-bottom:30px\">##EmptyPasswordText##</div>\n                    <div v-else-if=\"passwordError===1\" class=\"text-danger\" style=\"margin-bottom:30px\">##Passwordistooshort##</div>\n                    <div v-else-if=\"passwordError===2\" class=\"text-danger\" style=\"margin-bottom:30px\">##Missingalphanumericcharactersandnonalphanumeric##</div>\n                    <div v-else-if=\"passwordError===3\" class=\"text-danger\" style=\"margin-bottom:30px\">##PasswordMismatchText##</div>\n                    <div v-else-if=\"passwordError === null\" class=\"text-success\" style=\"margin-bottom: 30px\">##PasswordCorrectText##</div>\n                    <!-- <button class=\"btn btn-primary btn-shadow d-block w-100\" type=\"submit\">\n                        <div v-show=\"!isloadingModal\">##Register##</div>\n                        <span v-show=\"isloadingModal\" class=\"ml-2 spinner-border spinner-border-sm text-white\"></span>\n                    </button> -->\n                    <button class=\"btn btn-primary btn-shadow d-block w-100\" type=\"button\" @click=\"accountRegister()\">\n                        <div v-show=\"!isloadingModal\">##Register##</div>\n                        <span v-show=\"isloadingModal\" class=\"ml-2 spinner-border spinner-border-sm text-white\"></span>\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "SignIn",
        "Value": "Sign In",
        "Translation": {
          "EL": "Είσοδος",
          "EN": "Sign In"
        }
      },
      {
        "Key": "EmailΑddress",
        "Value": "Email address",
        "Translation": {
          "EL": "Διεύθυνση email",
          "EN": "Email address"
        }
      },
      {
        "Key": "emailError",
        "Value": "The email is not correct",
        "Translation": {
          "EL": "Το email είναι λάθος",
          "EN": "The email is not correct"
        }
      },
      {
        "Key": "Password",
        "Value": "Password",
        "Translation": {
          "EL": "Κωδικός",
          "EN": "Password"
        }
      },
      {
        "Key": "passwordError",
        "Value": "Wrong password or username",
        "Translation": {
          "EL": "Λάθος κωδικός ή email",
          "EN": "Wrong password or username"
        }
      },
      {
        "Key": "forgotPasswordText",
        "Value": "Forgot password?",
        "Translation": {
          "EL": "Ξεχάσατε τον κωδικό;",
          "EN": "Forgot password?"
        }
      },
      {
        "Key": "Missingalphanumericcharactersandnonalphanumeric",
        "Value": "Missingalphanumericcharactersandnonalphanumeric",
        "Translation": {
          "EL": "Βεβαιωθείτε ότι ο κωδικός πρόσβασής σας περιέχει, γράμματα, αριθμούς και τουλάχιστον έναν ειδικό χαρακτήρα. Αν σας λείπει κάποιο από αυτά, προσθέστε τα τώρα για να δημιουργήσετε έναν ολοκληρωμένο και ασφαλή κωδικό πρόσβασης.",
          "EN": "Make sure your password contains letters, numbers and at least one special character. If you're missing any of these, add them now to create a complete and secure password.",
          "RO": "Asigurați-vă că parola conține litere, numere și cel puțin un caracter special. Dacă vă lipsește vreunul dintre acestea, adăugați-l acum pentru a crea o parolă completă și sigură."
        }
      },
      {
        "Key": "InvalidEmailText",
        "Value": "InvalidEmailText",
        "Translation": {
          "EL": "Η διεύθυνση email δεν είναι σωστή",
          "EN": "The value is not a valid email address",
          "RO": "Adresa de email nu este validă"
        }
      },
      {
        "Key": "InvalidFirstName",
        "Value": "InvalidFirstName",
        "Translation": {
          "EL": "Το πεδίο Όνομα είναι υποχρεωτικό",
          "EN": "First Name field is mandatory",
          "RO": "Prenumele este obligatoriu"
        }
      },
      {
        "Key": "InvalidLastName",
        "Value": "InvalidLastName",
        "Translation": {
          "EL": "Το πεδίο Επίθετο είναι υποχρεωτικό",
          "EN": "Last Name field is mandatory",
          "RO": "Numele este obligatoriu"
        }
      },
      {
        "Key": "EmptyPasswordText",
        "Value": "EmptyPasswordText",
        "Translation": {
          "EL": "O κωδικός πρόσβασης είναι υποχρεωτικό πεδίο",
          "EN": "Password is required",
          "RO": "Parola este obligatorie"
        }
      },
      {
        "Key": "Passwordistooshort",
        "Value": "Passwordistooshort",
        "Translation": {
          "EL": "Ο κωδικός πρόσβασης είναι πολύ σύντομος",
          "EN": "Password is too short",
          "RO": "Parola este prea scurtă"
        }
      },
      {
        "Key": "EmptyFirstNameText",
        "Value": "EmptyFirstNameText",
        "Translation": {
          "EL": "Το επώνυμο είναι υποχρεωτικό",
          "EN": "First Name is required",
          "RO": "Primul nume este obligatoriu"
        }
      },
      {
        "Key": "EmptyLastNameText",
        "Value": "EmptyLastNameText",
        "Translation": {
          "EL": "Το επώνυμο είναι υποχρεωτικό",
          "EN": "Last Name is required",
          "RO": "Numele de familie este obligatoriu"
        }
      },
      {
        "Key": "EmptyEmailText",
        "Value": "EmptyEmailText",
        "Translation": {
          "EL": "Η διεύθυνση email είναι υποχρεωτική",
          "EN": "Email address is required",
          "RO": "Adresa de email este obligatorie"
        }
      },
      {
        "Key": "PasswordMismatchText",
        "Value": "PasswordMismatchText",
        "Translation": {
          "EL": "Οι κωδικοί δεν ταιριάζουν",
          "EN": "Passwords do not match",
          "RO": "Parolele nu coincid"
        }
      },
      {
        "Key": "PasswordCorrectText",
        "Value": "PasswordCorrectText",
        "Translation": {
          "EL": "Ο κωδικός είναι σωστός",
          "EN": "Password is Correct",
          "RO": "Parola este corectă"
        }
      },
      {
        "Key": "No favorite list found.",
        "Value": "No favorite list found.",
        "Translation": {
          "EL": "Δεν βρέθηκε λίστα αγαπημένων.",
          "EN": "No favorite list found",
          "RO": "Lista [Favorite] nu a  fost găsită"
        }
      },
      {
        "Key": "FirstName",
        "Value": "FirstName",
        "Translation": {
          "EL": "Όνομα",
          "EN": "First name",
          "RO": "Prenume"
        }
      },
      {
        "Key": "LastName",
        "Value": "LastName",
        "Translation": {
          "EL": "Επίθετο",
          "EN": "Last name",
          "RO": "Nume"
        }
      },
      {
        "Key": "RetypePassword",
        "Value": "Retype your Password",
        "Translation": {
          "EL": "Επαναλάβετε τον κωδικό πρόσβασής σας",
          "EN": "Retype your Password",
          "RO": "Repeta parola"
        }
      },
      {
        "Key": "EmailΑddress",
        "Value": "Email Αddress",
        "Translation": {
          "EL": "Διέυθυνση email",
          "EN": "Email address",
          "RO": "Adresă email"
        }
      },
      {
        "Key": "UserAlreadyExists",
        "Value": "UserAlreadyExists",
        "Translation": {
          "EL": "Αυτός ο χρήστης υπάρχει ήδη",
          "EN": "User Already Exists",
          "RO": "Utilizatorul există deja"
        }
      },
      {
        "Key": "SignUp",
        "Value": "Sign Up",
        "Translation": {
          "EL": "Εγγραφή",
          "EN": "Sign Up",
          "RO": "înscrieți-vă"
        }
      },
      {
        "Key": "Register",
        "Value": "Register",
        "Translation": {
          "EL": "Εγγραφή",
          "EN": "Register",
          "RO": "Înregistrare"
        }
      }
    ],
    "Js": "const loginmodal = {\n    props: {\n\n    },\n    data() {\n        return {\n            email: \"\",\n            password: \"\",\n            emailError: false,\n            passwordError: false,\n            isloadingModal: false,\n            userisauthenticated: this._global.isAuthenticated,\n            firstName: this._global.firstName,\n            globalModel: this._global,\n\n        }\n    },\n    mounted() {\n    },\n    methods: {\n        toggleVisibility(inputField) {\n            var passwordInput = document.getElementById(inputField);\n            if (passwordInput.type === \"password\") {\n                passwordInput.type = \"text\";\n            }\n            else {\n                passwordInput.type = \"password\";\n            }\n        },\n        submitForm(e) {\n            this.checkForm(e);\n        },\n        // checkForm(e) {\n        //     this.emailError = false;\n        //     this.passwordError = false;\n        //     var hasErrors = false;\n\n        //     var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        //     if (!re.test(this.email)) {\n        //         this.emailError = true;\n        //         valid = false;\n        //         hasErrors = true;\n        //         document.getElementById(\"email\").setCustomValidity('invalid')\n        //     }\n\n        //     if (this.email.length == 0) {\n        //         this.emailError = true;\n        //         hasErrors = true;\n        //     }\n        //     if (this.password.length == 0) {\n        //         this.passwordError = true;\n        //         hasErrors = true;\n        //     }\n\n\n        //     if (hasErrors)\n        //         return;\n        //     this.isloadingModal = true;\n        //     document.getElementById(\"email\").setCustomValidity('')\n\n        //     let info = {\n        //         Email: this.email,\n        //         Password: this.password\n        //     };\n\n        //     this._accountLogin(info, e => {\n        //         if (e.error) {\n        //             this.passwordError = true;\n        //             document.getElementById(\"password\").setCustomValidity('invalid');\n        //             this.isloadingModal = false;\n        //         } else {\n        //             this.isloadingModal = false;\n        //             if (e.response.status != 200) {\n        //                 this.passwordError = true;\n        //                 return;\n        //             }\n        //             window.location.href = \"/\";\n        //         }\n        //     });\n        // }\n        checkFormSignIn(e) {\n            this.emailError = false;\n            this.passwordError = false;\n            var hasErrors = false;\n\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (!re.test(this.email)) {\n                this.emailError = true;\n                valid = false;\n                hasErrors = true;\n                document.getElementById(\"email\").setCustomValidity('invalid')\n            }\n\n            if (this.email.length == 0) {\n                this.emailError = true;\n                hasErrors = true;\n            }\n            if (this.password.length == 0) {\n                this.passwordError = true;\n                hasErrors = true;\n            }\n\n\n            if (hasErrors)\n                return;\n            this.isloadingModal = true;\n            document.getElementById(\"email\").setCustomValidity('')\n\n\n        },\n\n        checkFormregister() {\n            this.emailError = \"\";\n            this.passwordError = \"\";\n            this.firstnameError = \"\";\n            this.lastnameError = \"\";\n            var hasErrors = false;\n\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            const passwordRegex = /^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[\\W_])[\\w!@#$%^&*()-=_+[\\]{}|;:'\",.<>/?`~]+$/;\n\n            if (!re.test(this.signupEmail)) {\n                this.emailError = 0;\n                valid = false;\n                hasErrors = true;\n                document.getElementById(\"email\").setCustomValidity('invalid')\n            }\n\n            if (this.signupEmail.length == 0) {\n                this.emailError = 1;\n                hasErrors = true;\n            }\n            if (this.firstname.length == 0) {\n                this.firstnameError = 1;//this.login.firstnameText;\n                document.getElementById(\"log-firstname\").setCustomValidity('invalid');\n                hasErrors = true;\n            }\n            if (this.lastname.length == 0) {\n                this.lastnameError = 1;//this.login.lastnameText;\n                document.getElementById(\"log-lastname\").setCustomValidity('invalid');\n                hasErrors = true;\n            }\n\n            if (!this.signupPassword) {\n                this.passwordError = 0; // Empty password\n            } else if (this.signupPassword.length <= 5) {\n                this.passwordError = 1; // Password is too short\n            } else if (!passwordRegex.test(this.signupPassword)) {\n                this.passwordError = 2; // Missing alphanumeric characters or non-alphanumeric characters\n            } else if (this.signupPassword !== this.retypeSingupPassword) {\n                this.passwordError = 3; // Set error code for password mismatch\n                return;\n            }\n            else {\n                this.passwordError = null; // Password is valid\n            }\n\n\n            if (hasErrors)\n                return;\n            this.isloadingModal = true;\n            document.getElementById(\"email\").setCustomValidity('')\n            return true;\n        },\n        accountLogin() {\n            this.checkFormSignIn();\n            let info = {\n                Email: this.email,\n                Password: this.password\n            };\n\n            const locationProxy = new Proxy(window.location, {\n                get: (location, prop) => {\n                    if (prop === 'page') {\n                        const pathname = location.pathname;\n                        return pathname;\n                    }\n                    return location[prop];\n                },\n            });\n\n            this._accountLogin(info, e => {\n                if (e.error) {\n                    this.passwordError = true;\n                    document.getElementById(\"password\").setCustomValidity('invalid');\n                    this.isloadingModal = false;\n                } else {\n                    this.isloadingModal = false;\n                    if (e.response.status != 200) {\n                        this.passwordError = true;\n                        return;\n                    }\n                    //window.location.href = \"/\";\n                    if (locationProxy.page !== null) {\n                        window.location.href = locationProxy.page;\n                    } else {\n                        window.location.href = \"/\";\n                    }\n                }\n            })\n        },\n\n        async accountRegister() {\n            const isValid = this.checkFormregister();\n            if (isValid) {\n                let info = {\n                    Email: this.signupEmail,\n                    Password: this.signupPassword,\n                    FirstName: this.firstname,\n                    LastName: this.lastname,\n                    ValidatePassword: this.retypeSingupPassword\n                };\n                try {\n                    let result = await new Promise((resolve, reject) => {\n                        this._accountRegister(info, (e) => {\n                            if (e.error) {\n                                reject(e);\n                            } else {\n                                resolve(e);\n                            }\n                        });\n                    });\n\n                    // Registration successful, proceed with login\n                    if (result.response.status === 200) {\n                        this._accountLogin(info, e => {\n                            if (e.error) {\n                                this.passwordError = true;\n                                document.getElementById(\"password\").setCustomValidity('invalid');\n                                this.isloadingModal = false;\n                            } else {\n                                this.isloadingModal = false;\n                                if (e.response.status != 200) {\n                                    this.passwordError = true;\n                                    return;\n                                }\n                                window.location.href = \"/\";\n                            }\n                        })\n                    } else {\n                        this.passwordError = 1;\n                    }\n                } catch (error) {\n                    // Handle registration error\n                    this.emailError = 2;\n                    this.isloadingModal = false;\n                }\n            }\n        },\n    }\n}\n\napp.component('loginmodal', {\n    extends: loginmodal,\n    template: '#loginmodal'\n});"
  },
  {
    "Name": "MonthlyTransactions",
    "Html": "<div v-if=\"this.balsheet !== null && this.balsheet.size > 0\" class=\"row mx-n2 pt-2\">\n    <div class=\"col-md-4 col-sm-6 px-2 mb-4\">\n        <div class=\"bg-secondary h-100 rounded-3 p-4 text-center\">\n            <h3 class=\"fs-sm text-muted\">##Debit##</h3>\n            <p class=\"h2 mb-2 text-danger\">{{calculateCurrency(GetTotalDebit)}}</p>\n        </div>\n    </div>\n    <div class=\"col-md-4 col-sm-6 px-2 mb-4\">\n        <div class=\"bg-secondary h-100 rounded-3 p-4 text-center\">\n            <h3 class=\"fs-sm text-muted\">##Credit##</h3>\n            <p class=\"h2 mb-2 text-success\">{{calculateCurrency(GetTotalCredit)}}</p>\n        </div>\n    </div>\n    <div class=\"col-md-4 col-sm-12 px-2 mb-4\">\n        <div class=\"bg-secondary h-100 rounded-3 p-4 text-center\">\n            <h3 class=\"fs-sm text-muted\">##Balance##</h3>\n            <p class=\"h2 mb-2 text-secondary\">{{calculateCurrency(GetTotalDebit - GetTotalCredit)}}</p>\n        </div>\n    </div>\n</div>\n<div v-if=\"this.balsheet !== null && this.balsheet.size > 0\" class=\"mb-4\" style=\"max-width: 22rem\">\n    <label class=\"form-label\">##FiscalYear##</label>\n    <select class=\"form-select\" @change=\"changeBalanceSheetYear\" v-model=\"this.currentSheetKey\">\n        <option v-for=\"key in Array.from(this.balsheet.keys())\" :value=\"key\">{{key}}</option>\n    </select>\n</div>\n<div class=\"table-responsive fs-md mb-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th>##Period##</th>\n                <th class=\"text-end\">##Debit##</th>\n                <th class=\"text-end\">##Credit##</th>\n                <th class=\"text-end\">##Turnover##</th>\n            </tr>\n        </thead>\n        <tbody v-if=\"currentSheetData !=null &&  currentSheetData.length > 0\">\n            <tr v-for=\"balance in currentSheetData\">\n                <td class=\"py-3\">{{balance.period}}</td>\n                <td class=\"py-3 text-end\">\n                    <span class=\"py-3 text-center\">{{calculateCurrency(balance.debit)}}</span>\n                </td>\n                <td class=\"py-3 text-end\">\n                    <span>{{calculateCurrency(balance.credit)}}</span>\n                </td>\n                <td class=\"py-3 text-end\"><span>{{calculateCurrency(balance.turnover)}}</span></td>\n            </tr>\n            <tr style=\"border-top: 2px\">\n                <td class=\"py-3  fw-bold\">##Totals##</td>\n                <td class=\"py-3  fw-bold text-end\">{{calculateCurrency(GetTotalDebit)}}</td>\n                <td class=\"py-3  fw-bold text-end\">{{calculateCurrency(GetTotalCredit)}}</td>\n                <td class=\"py-3 text-end\"></td>\n            </tr>\n            <tr>\n                <td class=\"py-3 fw-bold\">##TotalBalance##</td>\n                <td class=\"py-3 text-end\"></td>\n                <td class=\"py-3 text-end\"></td>\n                <td class=\"py-3 fw-bold text-end\">{{calculateCurrency(GetTotalDebit - GetTotalCredit)}}</td>\n            </tr>\n        </tbody>\n        <tbody v-if=\"balsheet === null || balsheet.size === 0\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && (balsheet === null || balsheet.size === 0)\">\n                        <i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
    "Translations": [
      {
        "Key": "Credit",
        "Value": "Credit",
        "Translation": {
          "EL": "Πίστωση",
          "EN": "Credit",
          "RO": "Credit"
        }
      },
      {
        "Key": "Debit",
        "Value": "Debit",
        "Translation": {
          "EL": "Χρέωση",
          "EN": "Debit",
          "RO": "Debit"
        }
      },
      {
        "Key": "Balance",
        "Value": "Balance",
        "Translation": {
          "EL": "Υπόλοιπο",
          "EN": "Balance",
          "RO": "Sold"
        }
      },
      {
        "Key": "FiscalYear",
        "Value": "FiscalYear",
        "Translation": {
          "EL": "Οικονομικό Έτος",
          "EN": "Fiscal Year",
          "RO": "An fiscal"
        }
      },
      {
        "Key": "Turnover",
        "Value": "Turnover",
        "Translation": {
          "EL": "Τζίρος",
          "EN": "Turnover",
          "RO": "Cifra de afaceri"
        }
      },
      {
        "Key": "Period",
        "Value": "Period",
        "Translation": {
          "EL": "Περίοδος",
          "EN": "Period",
          "RO": "Perioadă"
        }
      },
      {
        "Key": "Totals",
        "Value": "Totals",
        "Translation": {
          "EL": "Σύνολα",
          "EN": "Totals",
          "RO": "Totaluri"
        }
      },
      {
        "Key": "TotalBalance",
        "Value": "TotalBalance",
        "Translation": {
          "EL": "Συνολικό Υπόλοιπο",
          "EN": "Total Balance",
          "RO": "Sold total"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Φόρτωση",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "NoResults",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results found",
          "RO": "Nu au fost găsite rezultate"
        }
      }
    ],
    "Js": "const monthlytransactions = {\n    props:\n        {},\n    data() {\n        return {\n            balsheet: null,\n            currentSheetData: null,\n            currentSheetKey: null,\n            isLoading: false,\n\n        }\n    },\n    mounted() {\n        this.get_monthlytransactions();\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price, 2);\n        },\n        changeBalanceSheetYear(ev) {\n            this.currentSheetData = this.balsheet.get(ev.target.value)\n        },\n        get_monthlytransactions() {\n            this.isLoading = true;\n            this._getBalance(e => {\n                if (e != null && e.model != null) {\n                    const groupByYear = e.model.reduce(\n                        (entryMap, b) => entryMap.set(b.fiscalYear, [...entryMap.get(b.fiscalYear) || [], b]),\n                        new Map()\n                    );\n                    this.balsheet = groupByYear;\n                    const [firstValue] = this.balsheet.values();\n                    const [firstKey] = this.balsheet.keys();\n                    this.currentSheetData = firstValue;\n                    this.currentSheetKey = firstKey;\n                }\n                this.isLoading = false;\n            })\n        },\n    },\n    computed: {\n        GetTotalDebit: {\n            get() {\n                let total = 0;\n                var sheets = Array.from(this.balsheet.values());\n                sheets.forEach(s => s.map(b => total += b.debit))\n                return total;\n            }\n        },\n        GetTotalCredit: {\n            get() {\n                let total = 0;\n                var sheets = Array.from(this.balsheet.values());\n                sheets.forEach(s => s.map(b => total += b.credit))\n                return total;\n            }\n        },\n    }\n}\n\napp.component('monthlytransactions', {\n    extends: monthlytransactions,\n    template: '#monthlytransactions'\n});"
  },
  {
    "Name": "Offers",
    "Html": "<div class=\"row\">\n    <div class=\"col-md-4\">\n        <label class=\"form-label\" for=\"offer-status\">##Status##</label>\n        <select class=\"form-select\" id=\"offer-status\" v-model=\"selectedOfferStatus\" @change=\"changeOfferStatus($event)\">\n            <option v-for=\"status in offerStatuses\" :value=\"status\">\n                <span v-if=\"status === 'All'\">##All##</span>\n                <span v-if=\"status === 'Draft'\">##Draft##</span>\n                <span v-if=\"status === 'Open'\">##Open##</span>\n                <span v-if=\"status === 'Accepted'\">##Accepted##</span>\n                <span v-if=\"status === 'Rejected'\">##Rejected##</span>\n            </option>\n        </select>\n    </div>\n    <div class=\"col-md-4\">\n        <label class=\"form-label\" for=\"offer-status\">##Sort##</label>\n        <select class=\"form-select\" id=\"offer-status\" v-model=\"selectedOfferSort\" @change=\"changeOfferSort($event)\">\n            <option v-for=\"sort in offerSorts\" :value=\"sort\">\n                <span v-if=\"sort === 'ExpiresAt'\">##ExpirationDate##</span>\n                <span v-if=\"sort === 'UpdateDate'\">##UpdateDate##</span>\n            </option>\n        </select>\n    </div>\n</div>\n\n<div class=\"table-responsive fs-md mb-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th class=\"text-start\">##Title##</th>\n                <th class=\"text-center\">##Status##</th>\n                <th class=\"text-center\">##ExpirationDate##</th>\n                <th class=\"text-start\">##CustomerName##</th>\n                <th class=\"text-center\">##Actions##</th>\n            </tr>\n        </thead>\n        <tbody v-if=\"offers !=null && offers.length > 0\">\n            <tr v-for=\"offer in offers\">\n                <td class=\"py-3 text-start\">{{offer.title}}</td>\n                <td class=\"py-3 text-center\">\n                    <span v-if=\"offer.status ==='Open' || offer.status === 1\" class=\"badge bg-accent\">\n                        ##Open##\n                    </span>\n                    <span v-else-if=\"offer.status ==='Draft' || offer.status === 0\" class=\"badge bg-warning\">\n                        ##Draft##\n                    </span>\n                    <span v-else-if=\"offer.status ==='Rejected' || offer.status === 3\" class=\"badge bg-danger\">\n                        ##Rejected##\n                    </span>\n                    <span v-else-if=\"offer.status ==='Accepted' || offer.status === 2\" class=\"badge bg-success\">\n                        ##Success##\n                    </span>\n                </td>\n                <td class=\"py-3 text-center\">{{formatDate(offer.expiresAt)}}</td>\n                <td class=\"py-3 text-start\">{{offer.contact?.firstName}} {{offer.contact?.lastName}}</td>\n                <td class=\"py-3 text-center\">\n                    <a :href=\"navigateToOffer(offer)\" class=\"btn btn-primary btn-sm\">##View##</a>\n                </td>\n            </tr>\n        </tbody>\n        <tbody v-if=\"offers === null || offers.length === 0\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && totalCount === 0\">\n                        <i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<nav v-if=\"offers!=null && offers.length>0\" class=\"d-flex justify-content-between pt-2\"\n     aria-label=\"Page navigation\">\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">\n                <i class=\"ci-arrow-left me-2\"></i>##Prev##\n            </a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n\n        <li v-if=\"ShowFirstPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(1)\">1</a>\n        </li>\n        <li v-if=\"ShowPreviousPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowPreviousPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">{{PreviousPage}}</a>\n        </li>\n\n        <li class=\"page-item active d-none d-sm-block\" aria-current=\"page\">\n            <span class=\"page-link\">{{currentPage}} <span class=\"visually-hidden\">(current)</span></span>\n        </li>\n\n        <li v-if=\"ShowNextPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"nextPage()\">{{NextPage}}</a>\n        </li>\n        <li v-if=\"ShowNextPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowLastPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(LastPage)\">{{LastPage}}</a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\"\n               v-on:click.prevent=\"nextPage()\">##Next##<i class=\"ci-arrow-right ms-2\"></i></a>\n        </li>\n    </ul>\n</nav>",
    "Translations": [
      {
        "Key": "Status",
        "Value": "Status",
        "Translation": {
          "EL": "Κατάσταση",
          "EN": "Status",
          "RO": "Status"
        }
      },
      {
        "Key": "Draft",
        "Value": "Draft",
        "Translation": {
          "EL": "Σε προσχέδιο",
          "EN": "Draft",
          "RO": "Draft"
        }
      },
      {
        "Key": "All",
        "Value": "All",
        "Translation": {
          "EL": "Όλα",
          "EN": "All",
          "RO": "Tot"
        }
      },
      {
        "Key": "Rejected",
        "Value": "Rejected",
        "Translation": {
          "EL": "Απορρίφθηκε",
          "EN": "Rejected",
          "RO": "Anulat"
        }
      },
      {
        "Key": "Accepted",
        "Value": "Accepted",
        "Translation": {
          "EL": "Εγκρίθηκε",
          "EN": "Accepted",
          "RO": "Acceptat"
        }
      },
      {
        "Key": "Open",
        "Value": "Open",
        "Translation": {
          "EL": "Ανοικτή",
          "EN": "Open",
          "RO": "Deschide"
        }
      },
      {
        "Key": "Sort",
        "Value": "Sort",
        "Translation": {
          "EL": "Ταξινόμηση",
          "EN": "Sort",
          "RO": "Sortare"
        }
      },
      {
        "Key": "ExpirationDate",
        "Value": "ExpirationDate",
        "Translation": {
          "EL": "Ημερομηνία Λήξης",
          "EN": "Expiration Date",
          "RO": "Dată de expirare"
        }
      },
      {
        "Key": "UpdateDate",
        "Value": "UpdateDate",
        "Translation": {
          "EL": "Ημερομηνία Ενημέρωσης",
          "EN": "Update Date",
          "RO": "Dată actulizare"
        }
      },
      {
        "Key": "Title",
        "Value": "Title",
        "Translation": {
          "EL": "Τίτλος",
          "EN": "Title",
          "RO": "Titlu"
        }
      },
      {
        "Key": "CustomerName",
        "Value": "CustomerName",
        "Translation": {
          "EL": "Όνομα Πελάτη",
          "EN": "Customer Name",
          "RO": "Nume client"
        }
      },
      {
        "Key": "Actions",
        "Value": "Actions",
        "Translation": {
          "EL": "Ενέργειες",
          "EN": "Actions",
          "RO": "Acţiuni"
        }
      },
      {
        "Key": "Success",
        "Value": "Success",
        "Translation": {
          "EL": "Επιτυχία",
          "EN": "Success",
          "RO": "Succes"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Φόρτωση",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "No results",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results",
          "RO": "Niciun rezultat"
        }
      },
      {
        "Key": "Prev",
        "Value": "Prev",
        "Translation": {
          "EL": "",
          "EN": "Prev",
          "RO": "Anterior"
        }
      },
      {
        "Key": "Next",
        "Value": "Next",
        "Translation": {
          "EL": "",
          "EN": "Next",
          "RO": "Următorul"
        }
      },
      {
        "Key": "View",
        "Value": "View",
        "Translation": {
          "EL": "Εμφάνιση",
          "EN": "View",
          "RO": "Vizualizare"
        }
      }
    ],
    "Js": "const offers = {\n    props:\n        {},\n    data() {\n        return {\n            offerStatuses: [\"All\", \"Draft\", \"Open\", \"Accepted\", \"Rejected\"],\n            offers: [],\n            isLoading: false,\n            selectedOfferStatus: \"All\",\n            selectedOfferSort: \"ExpiresAt\",\n            currentPage: 1,\n            offerSorts: [\"ExpiresAt\", \"UpdateDate\",],\n            pageCount: null,\n            totalCount: null,\n\n        }\n    },\n    mounted() {\n        this.get_offers();\n    },\n    methods: {\n        changeOfferStatus(change) {\n            let value = change.target.value;\n            this.selectedOfferStatus = value;\n            this.currentPage = 1;\n            this.get_offers();\n        },\n        changeOfferSort(change) {\n            let value = change.target.value;\n            this.selectedOfferSort = value;\n            this.currentPage = 1;\n            this.get_offers();\n        },\n        get_offers() {\n            this.isLoading = true;\n            let params = {\n                page: this.currentPage,\n                pageSize: 10,\n                status: this.selectedOfferStatus !== 'ALL' ? this.selectedOfferStatus : undefined,\n                sort: `-${this.selectedOfferSort}`\n            }\n\n            this._getOffers(params, e => {\n                this.offers = e.model.item1;\n                this.currentPage = e.model.item2.pageNumber;\n                this.pageCount = e.model.item2.numberOfPages;\n                this.totalCount = e.model.item2.totalCount;\n                this.isLoading = false;\n            });\n        },\n        nextPage() {\n            if (this.currentPage + 1 <= this.pageCount)\n                this.pagination(this.currentPage + 1)\n\n        },\n        prevPage() {\n            if (this.currentPage - 1 > 0)\n                this.pagination(this.currentPage - 1)\n\n        },\n        pagination(page) {\n            this.currentPage = page;\n            this.get_offers();\n        },\n        navigateToOffer(offer) {\n            return `/offer/${offer.id}`;\n        },\n        formatDate(date) {\n            var newDate = new Date(date);\n            newDate = newDate.getDate() + '/' + (newDate.getMonth() + 1) + '/' + newDate.getFullYear()\n            return newDate;\n        },\n    },\n    computed: {\n        FirstPage: {\n            get() {\n                return 1;\n            }\n        },\n        NextPage: {\n\n            get() {\n                return this.currentPage + 1;\n            }\n        },\n        PreviousPage: {\n            get() {\n                return this.currentPage - 1;\n            }\n        },\n        LastPage: {\n            get() {\n                return this.pageCount;\n            }\n        },\n        ShowFirstPage: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n        ShowLastPage: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowNextPage: {\n            get() {\n\n                return this.currentPage < this.LastPage - 1;\n            }\n        },\n        ShowPreviousPage: {\n            get() {\n                return this.currentPage > 2;\n            }\n        },\n        ShowNext: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowPrevious: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n    }\n}\n\napp.component('offers', {\n    extends: offers,\n    template: '#offers'\n});"
  },
  {
    "Name": "Orders",
    "Html": "<div class=\"table-responsive fs-md mb-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th class=\"text-center\">##TransactionDate##</th>\n                <th class=\"text-center\">##Code##</th>\n                <th class=\"text-center\">##Status##</th>\n                <th class=\"text-center\">##Actions##</th>\n            </tr>\n        </thead>\n        <tbody v-if=\"orders !=null && orders.length > 0\">\n            <tr v-for=\"order in orders\">\n                <td class=\"py-3 text-center\">{{formatDate(order.placedAt)}}</td>\n                <td class=\"py-3 text-center\">\n                    <a v-on:click.stop.prevent=\"showOrder(order)\" class=\"nav-link-style fw-medium fs-sm\"\n                       href=\"#\">{{order.code}}</a>\n                </td>\n                <td class=\"py-3 text-center\">\n                    <span v-if=\"order.status ===  'Placed'\" class=\"badge bg-success\">\n                        ##Placed##\n                    </span>\n                    <span v-else-if=\"order.status === 'Draft'\" class=\"badge bg-warning \">\n                        ##Draft##\n                    </span>\n                    <span v-else-if=\"order.status === 'Cancelled'\" class=\"badge bg-danger \">\n                        ##Cancelled##\n                    </span>\n                    <span v-else-if=\"order.status === 'Processing'\" class=\"badge bg-info\">\n                        ##Processing##\n                    </span>\n                    <span v-else-if=\"order.status === 'ToBeShipped'\" class=\"badge bg-info\">\n                        ##ToBeShipped##\n                    </span>\n                    <span v-else-if=\"order.status === 'Shipped'\" class=\"badge bg-success\">\n                        ##Shipped##\n                    </span>\n                    <span v-else-if=\"order.status === 'PartialDelivery'\" class=\"badge bg-info\">\n                        ##PartialDelivery##\n                    </span>\n                    <span v-else-if=\"order.status === 'FailedToDeliver'\" class=\"badge bg-danger\">\n                        ##FailedToDeliver##\n                    </span>\n                    <span v-else-if=\"order.status === 'Delivered'\" class=\"badge bg-success\">\n                        ##Delivered##\n                    </span>\n                    <span v-else-if=\"order.status === 'Rejected'\" class=\"badge bg-danger\">\n                        ##Rejected##\n                    </span>\n                    <span v-else-if=\"order.status === 'Completed'\" class=\"badge bg-success\">\n                        ##Completed##\n                    </span>\n                    <!--<span v-else class=\"badge bg-danger\">\n                        {{order.status}}\n                    </span>-->\n                </td>\n                <td class=\"py-3 text-center\">\n                    <a v-on:click.stop.prevent=\"showOrder(order)\" href=\"#\"\n                       class=\"btn btn-primary btn-sm\">##View##</a>\n                </td>\n            </tr>\n        </tbody>\n        <tbody v-if=\"orders === null || orders.length === 0\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && totalCount === 0\">\n                        <i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<nav v-if=\"orders!=null && orders.length>0\" class=\"d-flex justify-content-between pt-2\"\n     aria-label=\"Page navigation\">\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">\n                <i class=\"ci-arrow-left me-2\"></i>##Prev##\n            </a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n        <li v-if=\"ShowFirstPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(1)\">1</a>\n        </li>\n        <li v-if=\"ShowPreviousPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowPreviousPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">{{PreviousPage}}</a>\n        </li>\n        <li class=\"page-item active d-none d-sm-block\" aria-current=\"page\">\n            <span class=\"page-link\">{{currentPage}} <span class=\"visually-hidden\">(current)</span></span>\n        </li>\n\n        <li v-if=\"ShowNextPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"nextPage()\">{{NextPage}}</a>\n        </li>\n        <li v-if=\"ShowNextPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowLastPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(LastPage)\">{{LastPage}}</a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\"\n               v-on:click.prevent=\"nextPage()\">##Next##<i class=\"ci-arrow-right ms-2\"></i></a>\n        </li>\n    </ul>\n</nav>\n<div class=\"modal fade\" v-bind:class=\"{show: showModal}\" id=\"order-details\">\n    <div class=\"modal-dialog modal-xl modal-dialog-scrollable\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 v-if=\"selectedOrder !== null\" class=\"modal-title\">##OrderNumber## - {{selectedOrder.code}}</h5>\n                <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n                        v-on:click=\"closeModal()\"></button>\n            </div>\n            <div v-if=\"selectedOrder !== null\" class=\"modal-body pb-0\">\n\n                <div v-for=\"line in selectedOrder.lines\"\n                     class=\"d-sm-flex justify-content-between mb-4 pb-3 pb-sm-2 border-bottom\">\n                    <div class=\"d-sm-flex text-center text-sm-start\" style=\"width: 55%;\">\n                        <div class=\"pt-2\">\n                            <p v-if=\"line.sku !== null\" class=\"mb-0 fw-bold\">{{line.sku}}</p>\n                            <h3 class=\"product-title fs-base mb-2\">\n                                <a href=\"shop-single-v1.html\">{{line.productTitle}}</a>\n                            </h3>\n                            <div v-if=\"line.size !== null\" class=\"fs-sm\">\n                                <span class=\"text-muted me-2\">Size:</span>{{line.size}}\n                            </div>\n                            <div v-if=\"line.color !== null\" class=\"fs-sm\">\n                                <span class=\"text-muted me-2\">Color:</span>{{line.color}}\n                            </div>\n                            <div class=\"fs-lg body-secondary-text pt-2\">{{calculateCurrency(line.price)}}</div>\n                        </div>\n                    </div>\n                    <div class=\"pt-2 ps-sm-3 mx-auto mx-sm-0 text-center\" style=\"width: 25%;\">\n                        <div class=\"text-muted mb-2\">##Quantity##:</div>\n\n                        <div class=\"input-group \">\n                            <button class=\"btn btn-secondary  border border-end-0 btn-icon\" type=\"button\"\n                                    v-on=\"line.quantity>=1 ? { click: () => line.quantity-- } : {}\">\n                                <i class=\"h5\">-</i>\n                            </button>\n\n                            <input class=\"form-control  border-start-0 border-end-0 text-center px-1\" type=\"number\"\n                                   v-model.number=\"line.quantity\" min=\"1\">\n\n                            <button class=\"btn btn-secondary  border border-start-0 btn-icon\" type=\"button\"\n                                    v-on:click=\"line.quantity++;\">\n                                <i class=\"ci-add\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"pt-2 ps-sm-3 mx-auto mx-sm-0 text-end\" style=\"width: 20%;\">\n                        <div class=\"text-muted mb-2\">##Net##</div>{{calculateCurrency(line.lineValue)}}\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"selectedOrder !== null\" class=\"modal-footer  bg-secondary fs-md\">\n                <div v-if=\"userName !== null\" class=\"row w-100\">\n\n                    <div class=\"col\">\n                        <span class=\"text-muted\">##User##:&nbsp;</span><span>{{userName}}</span>\n                    </div>\n                </div>\n                <div class=\"row d-flex justify-content-start w-100\">\n                    <div class=\"col\">\n                        <span class=\"text-muted\">##Net##:&nbsp;</span><span>{{calculateCurrency(selectedOrder.netAmount)}}</span>\n                    </div>\n                    <div class=\"col\">\n                        <span class=\"text-muted\">##Vat##:&nbsp;</span><span>{{calculateCurrency(selectedOrder.vatAmount)}}</span>\n                    </div>\n                    <div v-if=\"selectedOrder?.shippingLine?.totalAmount !== null && selectedOrder?.shippingLine?.totalAmount !== undefined &&  selectedOrder?.shippingLine?.totalAmount > 0\" class=\"col\">\n                        <span class=\"text-muted\">##Shipping##:&nbsp;</span><span>{{calculateCurrency(selectedOrder?.shippingLine?.totalAmount)}}</span>\n                    </div>\n                    <div v-if=\"selectedOrder.payment?.provider==='COD' && selectedOrder.payment?.serviceAmount!==null && selectedOrder.payment?.serviceAmount!==undefined && selectedOrder.payment?.serviceAmount>0\" class=\"col\">\n                        <span class=\"text-muted\">##Payment##:&nbsp;</span><span>{{calculateCurrency(selectedOrder.payment?.serviceAmount)}}</span>\n                    </div>\n                    <div class=\"col\">\n                        <span class=\"text-muted\">##Total##:&nbsp;</span><span>{{calculateCurrency(selectedOrder.totalAmount)}}</span>\n                    </div>\n                    <div class=\"col\">\n                        <button v-on:click.stop.prevent=\"addToCart(selectedOrder)\"\n                                class=\"btn btn-primary btn-sm\">\n                            ##AddToCart##\n                        </button>\n                    </div>\n                </div>\n                <div class=\"col-8\"></div>\n            </div>\n            <div class=\"modal-footer flex-wrap justify-content-between bg-secondary fs-md\">\n                <button v-on:click.stop.prevent=\"closeModal()\" class=\"btn btn-outline-danger btn-sm\">##Cancel##</button>\n                <button v-on:click.stop.prevent=\"checkout(selectedOrder)\"\n                        class=\"btn btn-accent btn-sm\">\n                    ##Add_to_cart_and_proceed_to_checkout##\n                </button>\n            </div>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "TransactionDate",
        "Value": "Transaction date",
        "Translation": {
          "EL": "Ημ/νία Συναλλαγής",
          "EN": "Transaction date",
          "RO": "Data tranzacţiei"
        }
      },
      {
        "Key": "Code",
        "Value": "Code",
        "Translation": {
          "EL": "Κωδικός",
          "EN": "Code",
          "RO": "Cod"
        }
      },
      {
        "Key": "Shipping",
        "Value": "Shipping",
        "Translation": {
          "EL": "Μεταφορικά",
          "EN": "Shipping",
          "RO": "Status"
        }
      },
      {
        "Key": "Payment",
        "Value": "Payment",
        "Translation": {
          "EL": "Αντικαταβολή",
          "EN": "Payment",
          "RO": "Status"
        }
      },
      {
        "Key": "Status",
        "Value": "Status",
        "Translation": {
          "EL": "Κατάσταση",
          "EN": "Status",
          "RO": "Status"
        }
      },
      {
        "Key": "Actions",
        "Value": "Actions",
        "Translation": {
          "EL": "Ενέργειες",
          "EN": "Actions",
          "RO": "Acţiuni"
        }
      },
      {
        "Key": "Placed",
        "Value": "Placed",
        "Translation": {
          "EL": "Καταχωρήθηκε",
          "EN": "Placed",
          "RO": "Înregistrat"
        }
      },
      {
        "Key": "Draft",
        "Value": "Draft",
        "Translation": {
          "EL": "Σε προσχέδιο",
          "EN": "Draft",
          "RO": "Draft"
        }
      },
      {
        "Key": "Cancelled",
        "Value": "Cancelled",
        "Translation": {
          "EL": "Ακυρώθηκε",
          "EN": "Cancelled",
          "RO": "Anulat"
        }
      },
      {
        "Key": "Processing",
        "Value": "Processing",
        "Translation": {
          "EL": "Σε επεξεργασία",
          "EN": "Processing",
          "RO": "În curs de procesare"
        }
      },
      {
        "Key": "Processing",
        "Value": "Processing",
        "Translation": {
          "EL": "Σε επεξεργασία",
          "EN": "Processing",
          "RO": "În curs de procesare"
        }
      },
      {
        "Key": "ToBeShipped",
        "Value": "ToBeShipped",
        "Translation": {
          "EL": "Προς αποστολή",
          "EN": "ToBeShipped",
          "RO": ""
        }
      },
      {
        "Key": "Shipped",
        "Value": "Shipped",
        "Translation": {
          "EL": "Έχει αποσταλεί",
          "EN": "Shipped",
          "RO": "De livrat"
        }
      },
      {
        "Key": "PartialDelivery",
        "Value": "PartialDelivery",
        "Translation": {
          "EL": "Παραδόθηκε εν μέρει",
          "EN": "PartialDelivery",
          "RO": "Livrare parţială"
        }
      },
      {
        "Key": "FailedToDeliver",
        "Value": "FailedToDeliver",
        "Translation": {
          "EL": "Αποτυχημένη παράδοση",
          "EN": "FailedToDeliver",
          "RO": "Livrare eşuată"
        }
      },
      {
        "Key": "Delivered",
        "Value": "Delivered",
        "Translation": {
          "EL": "Έχει παραδοθεί",
          "EN": "Delivered",
          "RO": "Livrat"
        }
      },
      {
        "Key": "Rejected",
        "Value": "Rejected",
        "Translation": {
          "EL": "Απορριφθείσα",
          "EN": "Rejected",
          "RO": "Respins"
        }
      },
      {
        "Key": "Completed",
        "Value": "Completed",
        "Translation": {
          "EL": "Ολοκληρώθηκε",
          "EN": "Completed",
          "RO": "Finalizat"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Φόρτωση",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "No results",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results",
          "RO": "Niciun rezultat"
        }
      },
      {
        "Key": "Prev",
        "Value": "Prev",
        "Translation": {
          "EL": "",
          "EN": "Prev",
          "RO": "Anterior"
        }
      },
      {
        "Key": "Next",
        "Value": "Next",
        "Translation": {
          "EL": "",
          "EN": "Next",
          "RO": "Următorul"
        }
      },
      {
        "Key": "OrderNumber",
        "Value": "Order Number",
        "Translation": {
          "EL": "Αριθμός Παραγγελίας",
          "EN": "Order Number",
          "RO": "Număr comandă"
        }
      },
      {
        "Key": "Quantity",
        "Value": "Quantity",
        "Translation": {
          "EL": "Ποσότητα",
          "EN": "Quantity",
          "RO": "Cantitate"
        }
      },
      {
        "Key": "Net",
        "Value": "Net",
        "Translation": {
          "EL": "Καθαρή Αξία",
          "EN": "Net Value",
          "RO": "Valoare netă"
        }
      },
      {
        "Key": "User",
        "Value": "User",
        "Translation": {
          "EL": "Χρήστης",
          "EN": "User",
          "RO": "Utilizator"
        }
      },
      {
        "Key": "Vat",
        "Value": "Vat",
        "Translation": {
          "EL": "Φ.Π.Α.",
          "EN": "Vat",
          "RO": "TVA"
        }
      },
      {
        "Key": "Total",
        "Value": "Total",
        "Translation": {
          "EL": "Σύνολο",
          "EN": "Total",
          "RO": "Total"
        }
      },
      {
        "Key": "AddToCart",
        "Value": "Add to cart",
        "Translation": {
          "EL": "Προσθήκη στο καλάθι",
          "EN": "Add to cart",
          "RO": "Adaugă în coş"
        }
      },
      {
        "Key": "Cancel",
        "Value": "Cancel",
        "Translation": {
          "EL": "Ακύρωση",
          "EN": "Cancel",
          "RO": "Anulează"
        }
      },
      {
        "Key": "Add_to_cart_and_proceed_to_checkout",
        "Value": "Add to cart and proceed to checkout",
        "Translation": {
          "EL": "Προσθήκη στο καλάθι και ολοκλήρωση αγοράς",
          "EN": "Add to cart and proceed to checkout",
          "RO": "Adaugă în coş şi finalizează comanda"
        }
      },
      {
        "Key": "View",
        "Value": "View",
        "Translation": {
          "EL": "Εμφάνιση",
          "EN": "View",
          "RO": "Vizualizare"
        }
      }
    ],
    "Js": "const orders = {\n    props:\n        {},\n    data() {\n        return {\n            orders: [],\n            modal: null,\n            showModal: false,\n            globalModel: this._global,\n            isLoading: false,\n            selectedOrder: null,\n            currentPage: 1,\n            pageCount: null,\n            userLocale: 'el-GR',\n\n        }\n    },\n    mounted() {\n        this.get_orders();\n        this.modal = document.getElementById(\"order-details\");\n\n    },\n    methods: {\n        get_orders() {\n            this.isLoading = true;\n\n            let params = {\n                page: this.currentPage,\n                pageSize: 10\n            }\n\n            this._getOrders(params, e => {\n                this.isLoading = false;\n                this.orders = e.model.item1;\n                this.currentPage = e.model.item2.pageNumber;\n                this.pageCount = e.model.item2.numberOfPages;\n                this.totalCount = e.model.item2.totalCount;\n            });\n        },\n        formatDate(date) {\n            var newDate = new Date(date);\n            newDate = newDate.getDate() + '/' + (newDate.getMonth() + 1) + '/' + newDate.getFullYear()\n            return newDate;\n        },\n        showOrder(order) {\n            var backdrop = document.createElement(\"div\");\n            backdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\");\n            document.body.appendChild(backdrop);\n            this.modal.style.display = \"block\";\n            this.selectedOrder = order;\n            if (order.userId) {\n                this.getUserById(order.userId);\n            } else {\n                this.showModal = !this.showModal;\n\n            }\n        },\n        nextPage() {\n            if (this.currentPage + 1 <= this.pageCount)\n                this.pagination(this.currentPage + 1)\n\n        },\n        prevPage() {\n            if (this.currentPage - 1 > 0)\n                this.pagination(this.currentPage - 1)\n\n        },\n        pagination(page) {\n            this.currentPage = page;\n            this.get_orders();\n        },\n        closeModal() {\n            this.showModal = !this.showModal;\n            this.modal.style.display = \"\";\n            document.querySelector('.modal-backdrop').remove();\n        },\n        getUserById(userId) {\n            if (this.globalModel.operationMode === 'Retail') {\n                this._getRetailUserProfile(e => {\n                    this.user = e.user;\n                    this.showModal = !this.showModal;\n\n                });\n\n            }\n            else {\n                this._getUserById(userId, e => {\n                    this.userName = e.data.firstName + \" \" + e.data.lastName;\n                    this.showModal = !this.showModal;\n                });\n            }\n\n        },\n        // calculateCurrency(price, digits = 2) {\n        //     console.log(this.currency)\n        //     let priceWithCurrency = new Intl.NumberFormat(this.userLocale, { style: 'currency', currency: this.currency, maximumFractionDigits: digits }).formatToParts(price).map(val => val.value).join('');\n        //     return priceWithCurrency;\n        // },\n        calculateCurrency(price) {\n            return this._calculateCurrency(price, 2);\n        },\n\n        async addToCart(order) {\n            try {\n                if (order.lines !== null && order.lines.length > 0) {\n                    var cartItems = [];\n                    order.lines.forEach(line => {\n                        var cartitem = new Object();\n                        cartitem.productVariantId = line.productVariantId;\n                        cartitem.productId = line.productId;\n                        cartitem.quantity = line.quantity;\n                        cartItems.push(cartitem);\n\n                    })\n                    await this._addToCartMulti(cartItems);\n                }\n            }\n            catch (error) {\n                console.log(error)\n            }\n        },\n        async checkout(order) {\n            try {\n                await this.addToCart(order);\n                window.location.href = \"/checkout\";\n            }\n            catch (error) {\n                console.log(error)\n            }\n        },\n    },\n    computed: {\n        FirstPage: {\n            get() {\n                return 1;\n            }\n        },\n        NextPage: {\n\n            get() {\n                return this.currentPage + 1;\n            }\n        },\n        PreviousPage: {\n            get() {\n                return this.currentPage - 1;\n            }\n        },\n        LastPage: {\n            get() {\n                return this.pageCount;\n            }\n        },\n        ShowFirstPage: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n        ShowLastPage: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowNextPage: {\n            get() {\n\n                return this.currentPage < this.LastPage - 1;\n            }\n        },\n        ShowPreviousPage: {\n            get() {\n                return this.currentPage > 2;\n            }\n        },\n        ShowNext: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowPrevious: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n    }\n}\n\napp.component('orders', {\n    extends: orders,\n    template: '#orders'\n});"
  },
  {
    "Name": "Payment",
    "Html": "<h2 class=\"h6 pb-3 mb-2\">##Choose_payment_method##</h2>\n<div v-if=\"checkout && checkout.paymentMethods !== null && checkout.paymentMethods.providers.length > 0\" class=\"\" id=\"payment-method\">\n    <div v-for=\"(provider, index) in checkout.paymentMethods.providers\" class=\"\">\n        <input type=\"radio\" :id=\"provider.provider\" @change=\"setPayment\" :value=\"provider\" v-model=\"selectedPaymentMethod\" class=\"me-2\" />\n        <label :for=\"provider.provider\">{{provider?.name}} </label>\n    </div>\n    <div class=\"mt-4\" v-if=\"selectedPaymentMethod?.serviceAmount\">\n        {{this.calculateCurrency(selectedPaymentMethod?.serviceAmount)}}\n    </div>\n    <div class=\"mt-4\" v-if=\"selectedPaymentMethod?.message\" v-html=\"selectedPaymentMethod.message\"></div>\n</div>",
    "Translations": [
      {
        "Key": "Choose_payment_method",
        "Value": "Choose_payment_method",
        "Translation": {
          "EL": "Διάλεξε μέθοδο πληρωμής",
          "EN": "Choose payment method",
          "RO": "Alege metoda de plată"
        }
      },
      {
        "Key": "PaymentConfiguration",
        "Value": "PaymentConfiguration",
        "Translation": {
          "EL": "Έξοδα αντικαταβολής",
          "EN": "Cash on delivery costs",
          "RO": ""
        }
      }
    ],
    "Js": "const payment = {\n    props:\n        { model: Object },\n    data() {\n        return {\n            checkout: null,\n            selectedPaymentMethod: null,\n        }\n    },\n    mounted() {\n        this.checkout = this.model;\n    },\n    methods: {\n        setPayment() {\n            this.checkout.payment = {};\n            this.checkout.payment.provider = this.selectedPaymentMethod.provider;\n            this.checkout.payment.providerId = this.selectedPaymentMethod.providerId;\n            this.checkout.payment.serviceAmount = this.selectedPaymentMethod.serviceAmount;\n        },\n        checkValid() {\n            return !!this.selectedPaymentMethod.provider;\n        },\n        calculateCurrency(price, digits = 2) {\n            return this._calculateCurrency(price, digits);\n        },\n    },\n    computed: {\n        Checkout: {\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n    }\n}\n\napp.component('payment', {\n    extends: payment,\n    template: '#payment'\n});"
  },
  {
    "Name": "ProductListItem",
    "Html": "<div class=\"card product-card-alt justify-content-between px-1\" style=\"height: 330px\">\n    <div v-if=\"product.additionalFeatures.icoTags !== null\"\n         class=\"d-flex flex-wrap justify-content-start position-absolute top-0 start-0 pt-1 ps-2 me-4\"\n         v-html=\"this._getBadges(product)\"  style=\"z-index: 1\"></div>\n    <div class=\"product-thumb text-center\" style=\"height: 260px;\">\n        <div class=\"product-card-actions\">\n            <a class=\"btn btn-light btn-icon btn-shadow fs-base mx-2\"\n               @click.stop=\"this._showProductModal(product, product.productVariants[0].id)\" href=\"#quick-view\"\n               data-bs-toggle=\"modal\" data-target=\"#modal-product-collection-1\">\n                <i class=\"ci-eye\"></i>\n            </a>\n        </div>\n        <a class=\"product-thumb-overlay\" :href=\"'/product/'+product.alias\"></a>\n        <img v-if=\"this._getMediaItem(product.mediaItems)!==null\"\n             :src=\"this._getMediaItem(product.mediaItems)\" alt=\"Product\"\n             style=\"height: 100%; width: 100%; object-fit: contain\"\n             @error=\"handleImageError\">\n        <img v-else :src=\"this._getNoImageUrl()\" alt=\"Product\" width=\"200\"\n             style=\"height: 100%; width: 100%; object-fit: cover\" @error=\"handleImageError\" />\n    </div>\n    <div class=\"mt-2\">\n        <span v-if=\"product.productVariants.length>0 && product.productVariants[0].sku!=null\"\n              class=\"d-block text-secondary fs-sm fw-bold pb-1\">{{product.productVariants[0].sku}}</span>\n        <h3 class=\"product-title fs-sm truncate mb-1\" style=\"height: 35px\">\n            <a :href=\"'/product/'+product.alias\">{{product.title}}</a>\n        </h3>\n        <span class=\"product-meta d-block fs-xs mb-1 truncate\" style=\"height: 35px\">{{product.subTitle}}</span>\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <addtocart :model=\"product\" :detail=\"false\" :isCalculated=\"isCalculated\"></addtocart>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Per_Unit",
        "Value": "Per_Unit",
        "Translation": {
          "EL": "ανά τεμάχιο",
          "EN": "per unit"
        }
      },
      {
        "Key": "Per",
        "Value": "Per",
        "Translation": {
          "EL": "ανά",
          "EN": "per"
        }
      },
      {
        "Key": "AddtoCart",
        "Value": "Add to Cart",
        "Translation": {
          "EL": "Προσθήκη",
          "EN": "Add to Cart"
        }
      }
    ],
    "Js": "const productlistitem = {\n    props:\n    {\n        model: {\n            type: Object,\n            required: true\n        },\n        isCalculated: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            product: this.model,\n            loadingKey: null,\n            brands: [],\n            categories: []\n        }\n    },\n    mounted() {\n\n        this.product.variant = this.product.productVariants[0]\n        var brandids = [];\n        var categoryids = [];\n        if (this.product.brandId) {\n            if (!brandids.includes(this.product.brandId)) {\n                brandids.push(this.product.brandId)\n            }\n        }\n        if (this.product.categoryId) {\n            if (!categoryids.includes(this.product.categoryId)) {\n                categoryids.push(this.product.categoryId)\n            }\n        }\n        this._findBrandsByIds(brandids, e => {\n            this.brands = e;\n        })\n        this._findCategoriesByIds(categoryids, e => {\n            this.categories = e;\n        })\n    },\n    methods: {\n        handleImageError(event) {\n            event.target.src = this._getNoImageUrl();\n        },\n        async addToCart(product, i) {\n            this.loadingKey = i;\n            await this._addToCartAsync(product.id, product.productVariants[0].id, product.productVariants[0].selectedQuantity);\n            product.productVariants[0].selectedQuantity = this._findSelected(product.productVariants[0].suggestedOrderQuantity, product.productVariants[0].minimumOrderQuantity, product.productVariants[0].orderQuantityStep)\n            this.loadingKey = null;\n        },\n        isLoading(i) {\n            return this.loadingKey === i;\n        },\n        hasDiscount(price, initialPrice) {\n            if (initialPrice == undefined || initialPrice == null || initialPrice <= price)\n                return false;\n            return true;\n        },\n        getImageLink(imageLink) {\n            if (imageLink === null) {\n                return \"/images/no_image.png\";\n            }\n            return imageLink;\n        }\n    }\n}\n\napp.component('productlistitem', {\n    extends: productlistitem,\n    template: '#productlistitem'\n});"
  },
  {
    "Name": "ProductListItemDetail",
    "Html": "<div class=\"card product-card-alt  px-1\" style=\"min-height: 500px; max-height: 500px\">\n    <div v-if=\"product.additionalFeatures.icoTags !== null\"\n         class=\"d-flex flex-wrap justify-content-start position-absolute top-0 start-0 pt-1 ps-2 me-4\"\n         v-html=\"this._getBadges(product)\"></div>\n    <div class=\"product-thumb text-center\" style=\"height: 260px;\">\n        <div class=\"product-card-actions\">\n            <a class=\"btn btn-light btn-icon btn-shadow fs-base mx-2\"\n               @click.stop=\"this._showProductModal(product, product.productVariants[0].id)\" href=\"#quick-view\"\n               data-bs-toggle=\"modal\" data-target=\"#modal-product-collection-1\">\n                <i class=\"ci-eye\"></i>\n            </a>\n        </div>\n        <a class=\"product-thumb-overlay\" :href=\"'/product/'+product.alias\"></a>\n        <img  v-if=\"this._getMediaItem(product.mediaItems)!==null\"\n             :src=\"this._getMediaItem(product.mediaItems)\" alt=\"Product\"\n             style=\"height: 100%; width: 100%; object-fit: contain\"  @error=\"this._handleImageError\">\n        <img v-else :src=\"this._getNoImageUrl()\" alt=\"Product\" width=\"200\"\n             style=\"height: 100%; width: 100%; object-fit: cover\" />\n    </div>\n    <div class=\"mt-2\">\n        <span v-if=\"product.productVariants.length>0 && product.productVariants[0].sku!=null\"\n              class=\"d-block text-secondary fs-sm fw-bold pb-1\">{{product.productVariants[0].sku}}</span>\n        <h3 class=\"product-title fs-sm truncate mb-1\" style=\"height: 35px\">\n            <a :href=\"'/product/'+product.alias\">{{product.title}}</a>\n        </h3>\n        <template v-if=\"this.additionalFields != null && this.additionalFields.length > 0\">\n            <div class=\"additionalFields pb-1\" style=\"height: 65px\">\n                <template v-for=\"field in this.additionalFields\">\n                    <template v-if=\"getFieldValue(product, field.fieldName) && resolveAuthentication(field)\">\n                        <div class=\"btn-tag fs-xs mb-1 py-1 px-2 me-1\" role=\"button\"\n                             @click=\"handleFieldUrl(product, field.fieldName)\">\n                            <template v-if=\"isValidUrl(getFieldValue(product, field.fieldName))\">\n                                <a :href=\"getFieldValue(product, field.fieldName)\" target=\"_blank\">{{field.label}}</a>\n                            </template>\n                            <template v-else>\n                                <span class=\" fw-medium me-1\">{{field.label}}:</span>\n                                <span>{{getFieldValue(product, field.fieldName)}}</span>\n                            </template>\n                        </div>\n                    </template>\n                </template>\n            </div>\n        </template>\n        <span class=\"product-meta d-block fs-xs mb-1 truncate\" style=\"height: 35px\">{{product.subTitle}}</span>\n        <addtocart :model=\"product\" :detail=\"true\" :isCalculated=\"isCalculated\"></addtocart>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Per_Unit",
        "Value": "Per_Unit",
        "Translation": {
          "EL": "ανά τεμάχιο",
          "EN": "per unit"
        }
      },
      {
        "Key": "Per",
        "Value": "Per",
        "Translation": {
          "EL": "ανά",
          "EN": "per"
        }
      },
      {
        "Key": "AddtoCart",
        "Value": "Add to Cart",
        "Translation": {
          "EL": "Προσθήκη",
          "EN": "Add to Cart"
        }
      }
    ],
    "Js": "const productlistitemdetail = {\n    props:\n    {\n        model: Object,\n        additionalFields: Array,\n        brands: Array,\n        categories: Array,\n        isCalculated: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            product: this.model,\n            operationMode: this._global.operationMode,\n            Title: this._filterList.record.title,\n            lists: [],\n            isUserLoggedIn: this._global.isAuthenticated,\n            maxPrice: null,\n            minPrice: null,\n            url: null,\n            ShowClearFilter: false,\n        }\n    },\n    methods: {\n        async addToCart2(product, e) {\n            var clickedElement = e.target;\n            if (clickedElement.tagName.toLowerCase() == 'span') {\n                clickedElement.parentElement.classList.add('clicked');\n                clickedElement.parentElement.classList.add('disabled');\n            } else {\n                clickedElement.classList.add('clicked');\n                clickedElement.classList.add('disabled');\n            }\n            await this._addToCartAsync(product.id, product.productVariants[0].id, product.productVariants[0].selectedQuantity);\n            setTimeout(() => {\n                if (clickedElement.tagName.toLowerCase() == 'span') {\n                    clickedElement.parentElement.classList.remove('clicked');\n                    clickedElement.parentElement.classList.remove('disabled');\n                } else {\n                    clickedElement.classList.remove('clicked');\n                    clickedElement.classList.remove('disabled');\n                }\n                product.productVariants[0].selectedQuantity = this._findSelected(product.productVariants[0].suggestedOrderQuantity, product.productVariants[0].minimumOrderQuantity, product.productVariants[0].orderQuantityStep)\n\n            }, 1500);\n        },\n        getFieldValue(product, name) {\n            if (name && name.split(\".\").length > 1) {\n                const keys = name.split(\".\");\n                let property = this.product;\n                for (const key of keys) {\n                    property = property[Object.keys(property).find(prop => prop.toLowerCase() === key.toLowerCase())];\n                    if (!property || property === null || property === \"\" || property === \" \" || property === \"0\")\n                        return 0;\n                }\n                return property ?? 0;\n            } else {\n                if (name.toLowerCase() == \"brand\") {\n                    // var brand = this.brands.find(b => b.id === product.brandId)\n                    // return brand?.name;\n                    return this.product.brand?.name;\n                }\n                if (name.toLowerCase() == \"category\") {\n                    // var cat = this.categories.find(c => c.id === product.categoryId)\n                    // return cat?.title;\n                    return this.product.category?.title;\n                }\n                else {\n                    var property = product[Object.keys(product).find(key => key.toLowerCase() === name.toLowerCase())];\n                    if (!property || property === null || property == \"\" || property == \" \" || property == \"0\")\n                        return 0;\n                    return property;\n                }\n            }\n        },\n        isValidUrl(string) {\n            try {\n                const url = new URL(string);\n                return url.protocol === 'http:' || url.protocol === 'https:';\n            } catch (err) {\n                return false;\n            }\n        },\n        resolveAuthentication(field) {\n            if (field.authenticated) {\n                if (this.isUserLoggedIn) {\n                    return true;\n                }\n                return false;\n            }\n            return true;\n        },\n        handleFieldUrl(product, field) {\n            if (field == \"brand\") {\n                // var alias = this.brands.find(b => b.id === product.brandId)?.alias;\n                if (this.product.brand?.alias) {\n                    window.location.href = `/brand/${this.product.brand.alias}`;\n                }\n            }\n            if (field == \"category\") {\n                // var alias = this.categories.find(c => c.id === product.categoryId)?.alias\n                if (this.product.brand?.alias) {\n                    window.location.href = `/category/${this.product.brand.alias}`;\n                }\n            }\n        }\n    },\n};\n\napp.component('productlistitemdetail', {\n    extends: productlistitemdetail,\n    template: '#productlistitemdetail'\n});"
  },
  {
    "Name": "ProfileInfo",
    "Html": "<div class=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n    <div v-if=\"user !==null\" class=\"row gx-4 gy-3\">\n        <label v-if=\"(this.globalModel.operationMode != 'Retail')\" class=\"form-label\" for=\"upload-logo\">##ChooseLogo##</label>\n        <div v-if=\"(this.globalModel.operationMode != 'Retail')\" class=\"bg-secondary rounded-3 p-4 mb-4\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n                <div :key=\"this.logoKey\">\n                    <template v-if=\"this.uploadedImage\">\n                        <img :src=\"uploadedImage\" width=\"90\" height=\"90\" />\n                        <button @click=\"triggerInput\" class=\"btn btn-light btn-shadow btn-sm mb-2 ms-2\" type=\"button\"><i class=\"ci-loading me-2\"></i>##ChooseAnother##</button>\n                    </template>\n                    <input :hidden=\"this.uploadedImage ? true : false\" type=\"file\" id=\"upload-logo\" accept=\"image/png, image/gif, image/jpeg\"\n                           @change=\"handleLogoFile\" />\n                </div>\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"ps-3\">\n                        <button @click=\"handleUploadFileButton\" :disabled=\"this.logoFile==null\"\n                                class=\"btn btn-primary btn-sm d-none d-lg-inline-block\">\n                            <span>##Upload##</span><span v-show=\"isLoading\"\n                                                         class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div v-if=\"this.logoError\" class=\"invalid-feedback\" style=\"display: block\">\n                ##invalidFileType##\n            </div>\n        </div>\n\n        <div class=\"col-sm-6\">\n            <label class=\"form-label\" for=\"account-fn\">##FirstName##</label>\n            <input class=\"form-control\" type=\"text\" id=\"account-fn\" v-model=\"user.firstName\" disabled=\"\">\n        </div>\n        <div class=\"col-sm-6\">\n            <label class=\"form-label\" for=\"account-ln\">##LastName##</label>\n            <input class=\"form-control\" type=\"text\" id=\"account-ln\" v-model=\"user.lastName\" disabled=\"\">\n        </div>\n        <div class=\"col-sm-6\">\n            <label class=\"form-label\" for=\"account-email\">##Email##</label>\n            <input class=\"form-control\" type=\"email\" id=\"account-email\" v-model=\"user.email\" disabled=\"\">\n        </div>\n        <div class=\"col-12\">\n            <hr class=\"mt-2 mb-3\">\n            <form v-show=\"changePassword\" class=\"needs-validation\" novalidate @submit.prevent=\"checkForm\">\n                <div class=\"row mb-3\">\n                    <div class=\"col-sm-6\">\n                        <label class=\"form-label\" for=\"old-password\">##OldPassword##</label>\n                        <input class=\"form-control\" v-model=\"password\" type=\"password\" name=\"OldPassword\"\n                               id=\"old-password\" required>\n                        <div class=\"invalid-feedback\">{{this.passwordError}}</div>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <label class=\"form-label\" for=\"new-password\">##NewPassword##</label>\n                        <input class=\"form-control\" v-model=\"newpassword\" type=\"password\" name=\"NewPassword\"\n                               id=\"new-password\" required>\n                        <div class=\"invalid-feedback\">{{this.passwordValidateError}}</div>\n                    </div>\n                </div>\n                <div v-if=\"this.islocked\" class=\"invalid-feedback\" style=\"display: block\">\n                    ##userLocked##\n                </div>\n\n                <button class=\"btn btn-primary\" type=\"submit\">\n                    <span>##ChangePassword##</span><span v-show=\"isLoading\"\n                                                         class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n                </button>\n            </form>\n            <div class=\"d-flex flex-wrap justify-content-between align-items-center\">\n                <button v-show=\"!changePassword\" v-on:click=\"toggleChangePassword\"\n                        class=\"btn btn-primary mt-3 mt-sm-0\" type=\"button\">\n                    ##ChangePassword##\n                </button>\n            </div>\n\n        </div>\n    </div>\n",
    "Translations": [
      {
        "Key": "invalidFileType",
        "Value": "invalidFileType",
        "Translation": {
          "EL": "Μη έγκυρος τύπος αρχείου",
          "EN": "Not valid file type"
        }
      },
      {
        "Key": "Upload",
        "Value": "Upload",
        "Translation": {
          "EL": "Ανέβασμα",
          "EN": "Upload",
          "RO": "Încărcaţi"
        }
      },
      {
        "Key": "FirstName",
        "Value": "First name",
        "Translation": {
          "EL": "Ονομα",
          "EN": "First name",
          "RO": "Prenume"
        }
      },
      {
        "Key": "LastName",
        "Value": "Last name",
        "Translation": {
          "EL": "Επίθετο",
          "EN": "Last name",
          "RO": "Nume"
        }
      },
      {
        "Key": "Email",
        "Value": "Email",
        "Translation": {
          "EL": "Email",
          "EN": "Email",
          "RO": "Email"
        }
      },
      {
        "Key": "OldPassword",
        "Value": "Old password",
        "Translation": {
          "EL": "Παλιός κωδικός",
          "EN": "Old password",
          "RO": "Parola veche"
        }
      },
      {
        "Key": "NewPassword",
        "Value": "New password",
        "Translation": {
          "EL": "Νέος κωδικός",
          "EN": "New password",
          "RO": "Parola nouă"
        }
      },
      {
        "Key": "ChangePassword",
        "Value": "Change password",
        "Translation": {
          "EL": "Αλλαγή κωδικού",
          "EN": "Change password",
          "RO": "Schimbă parola"
        }
      },
      {
        "Key": "ChooseLogo",
        "Value": "ChooseLogo",
        "Translation": {
          "EL": "Επιλέξτε logo",
          "EN": "Choose logo",
          "RO": "Alege logo"
        }
      },
      {
        "Key": "userLocked",
        "Value": "User Locked Error",
        "Translation": {
          "EL": "Ο λογαριασμός κλειδώθηκε προσωρινά. Περιμένετε 15 λεπτά πριν επιχειρήσετε να συνδεθείτε ξανά.",
          "EN": "Account temporarily locked. Please wait for 15 minutes before attempting to login again.",
          "RO": ""
        }
      }
    ],
    "Js": "const profileinfo = {\n    props:\n        {},\n    data() {\n        return {\n            globalModel: this._global,\n            user: null,\n            customer: null,\n            changePassword: false,\n            newpassword: \"\",\n            isLoading: false,\n            uploadedImage: null,\n            logoFile: null,\n            logoKey: 0,\n            islocked: false,\n            logoError: false\n        }\n    },\n    mounted() {\n        if (this.globalModel.operationMode === 'Retail') {\n            this._getRetailUserProfile(e => {\n                this.user = e.user;\n            })\n        }\n        else {\n            this._getUserProfile(e => {\n                this.user = e.user;\n                this.customer = e.customer;\n            })\n        }\n    },\n    methods: {\n        toggleChangePassword() {\n            this.changePassword = !this.changePassword;\n        },\n        async handleUploadFileButton(event) {\n            this.logoError = false;\n            const file = this.logoFile\n            this.isLoading = true;\n            if (this.logoFile) {\n                if (this.globalModel.operationMode === 'Retail') {\n                    const logoUrl = await this._uploadLogoFile(file, this.user)\n                    if (logoUrl === \"415\") {\n                        this.logoError = true;\n                        this.logoKey = this.logoKey + 1;\n                        //this.customer.logo = logoUrl + `?${this.logoKey}`;\n                        this.isLoading = false;\n                        this.logoFile = null;\n\n                        return;\n                    }\n                    this.user.logo = logoUrl + `?${this.logoKey}`;\n\n                }\n                else {\n                    const logoUrl = await this._uploadLogoFile(file, this.customer);\n                    if (logoUrl === \"415\") {\n                        this.logoError = true;\n                        this.logoKey = this.logoKey + 1;\n                        //this.customer.logo = logoUrl + `?${this.logoKey}`;\n                        this.isLoading = false;\n                        this.logoFile = null;\n                        return;\n                    }\n                    this.customer.logo = logoUrl + `?${this.logoKey}`;\n\n                }\n                this.logoKey = this.logoKey + 1;\n                //this.customer.logo = logoUrl + `?${this.logoKey}`;\n                this.isLoading = false;\n                this.logoFile = null;\n            }\n        },\n        handleLogoFile(event) {\n            var types = [\"image/png\", \"image/gif\", \"image/jpeg\"]\n            var file = event.target.files[0];\n            // if(types.indexOf(file.type) === -1){\n            // this.logoError = true;\n            // return;\n            // }\n            this.logoFile = event.target.files[0];\n            this.uploadedImage = window.URL.createObjectURL(this.logoFile)\n        },\n        triggerInput() {\n            document.getElementById('upload-logo').click();\n        },\n        checkForm(e) {\n            this.passwordValidateError = \"\";\n            this.passwordError = \"\";\n            var hasErrors = false;\n\n            if (this.password.length == 0) {\n                // this.passwordError = this.profilemodel.translations.emptyPasswordText;\n                document.getElementById(\"old-password\").setCustomValidity('invalid')\n                hasErrors = true;\n            }\n            if (this.newpassword.length == 0) {\n                // this.passwordValidateError = this.profilemodel.translations.emptyPasswordText;\n                document.getElementById(\"new-password\").setCustomValidity('invalid')\n                hasErrors = true;\n            }\n\n            if (!hasErrors && (this.newpassword.length < 8 || !this.hasLetter(this.newpassword) || !this.hasNumber(this.newpassword) || !this.hasSymbol(this.newpassword))) {\n                // this.passwordValidateError = this.profilemodel.translations.passwordPolicyText;\n                document.getElementById(\"new-password\").setCustomValidity('invalid')\n                hasErrors = true;\n            }\n            if (hasErrors) {\n                return;\n            }\n            this.isLoading = true;\n            document.getElementById(\"new-password\").setCustomValidity('');\n            document.getElementById(\"old-password\").setCustomValidity('');\n\n            let info = {\n                NewPassword: this.newpassword,\n                OldPassword: this.password,\n                ValidatePassword: this.newpassword\n            };\n\n            this._changePasswordProfile(info, e => {\n                if (e.error) {\n\n                    if (e.response && e.response.status === 409) {\n                        this.islocked = true;\n                        this.isloading = false;\n                        return;\n                    }\n                    // this.passwordValidateError = this.profilemodel.translations.RequestError;\n                    document.getElementById(\"new-password\").setCustomValidity('invalid')\n                    document.getElementById(\"old-password\").setCustomValidity('invalid')\n                    this.isLoading = false;\n                } else {\n                    this.isLoading = false;\n\n                    if (e.response.status != 200) {\n                        // this.passwordValidateError = this.profilemodel.translations.RequestError;\n                        document.getElementById(\"new-password\").setCustomValidity('invalid')\n                        return;\n                    }\n                    this.changePassword = false;\n                }\n            })\n        },\n        hasLetter(str) {\n            return str.match(/[a-z]/i);\n        },\n        hasNumber(str) {\n            return /\\d/.test(str);\n        },\n        hasSymbol(str) {\n            var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n            if (format.test(str)) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n    }\n}\n\napp.component('profileinfo', {\n    extends: profileinfo,\n    template: '#profileinfo'\n});"
  },
  {
    "Name": "Quotes",
    "Html": "<div class=\"row\">\n    <div class=\"col-md-4\">\n        <label class=\"form-label\" for=\"quote-status\">##Status##</label>\n        <select class=\"form-select\" id=\"quote-status\" v-model=\"selectedQuoteStatus\" @change=\"changeQuoteStatus($event)\">\n            <option v-for=\"status in quoteStatuses\" :value=\"status\">\n                <span v-if=\"status === 'All'\">##All##</span>\n                <span v-if=\"status === 'Quoted'\">##Quoted##</span>\n                <span v-if=\"status === 'Completed'\">##Completed##</span>\n                <span v-if=\"status === 'Accepted'\">##Accepted##</span>\n                <span v-if=\"status === 'Declined' ||status === 'Cancelled' \">##Declined##</span>\n            </option>\n        </select>\n    </div>\n    <div class=\"col-md-4\">\n        <label class=\"form-label\" for=\"quote-status\">##Sort##</label>\n        <select class=\"form-select\" id=\"quote-status\" v-model=\"selectedQuoteSort\" @change=\"changeQuoteSort($event)\">\n            <option v-for=\"sort in quoteSorts\" :value=\"sort\">\n                <span v-if=\"sort === 'ExpirationDate'\">##ExpirationDate##</span>\n                <span v-if=\"sort === 'UpdateDate'\">##UpdateDate##</span>\n            </option>\n        </select>\n    </div>\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-2 ps-0\">\n        <label class=\"form-label\"></label>\n        <a href=\"/quote/add\" class=\"btn btn-primary btn-sm d-flex justify-content-center mt-2\">##Create##</a>\n    </div>\n</div>\n\n<div class=\"table-responsive fs-md mb-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th class=\"text-start\">##Code##</th>\n                <th class=\"text-center\">##Status##</th>\n                <th class=\"text-center\">##ExpirationDate##</th>\n                <th class=\"text-center\">##Actions##</th>\n            </tr>\n        </thead>\n        <tbody v-if=\"quotes !=null && quotes.length > 0\">\n            <tr v-for=\"quote in quotes\">\n                <td class=\"py-3 text-start\">{{quote.code}}</td>\n                <td class=\"py-3 text-center\">\n                    <span v-if=\"quote.status ==='Quoted' || quote.status === 0\" class=\"badge bg-accent\">\n                        ##Quoted##\n                    </span>\n                    <span v-else-if=\"quote.status ==='Declined' || quote.status === 2 || quote.status ==='Cancelled' || quote.status === 3\" class=\"badge bg-danger\">\n                        ##Declined##\n                    </span>\n                    <span v-else-if=\"quote.status ==='Completed' || quote.status === 5\" class=\"badge bg-success\">\n                        ##Completed##\n                    </span>\n                    <span v-else-if=\"quote.status ==='Accepted' || quote.status === 1\" class=\"badge bg-success\">\n                        ##Accepted##\n                    </span>\n                </td>\n                <td class=\"py-3 text-center\">{{quote.expirationDate ? formatDate(quote.expirationDate) : ''}}</td>\n                <td class=\"py-3 text-center\">\n                    <a :href=\"navigateToQuote(quote)\" class=\"btn btn-primary btn-sm\">##View##</a>\n                </td>\n            </tr>\n        </tbody>\n        <tbody v-if=\"quotes === null || quotes.length === 0\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && totalCount === 0\"><i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##</div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<nav v-if=\"quotes!=null && quotes.length>0\" class=\"d-flex justify-content-between pt-2\" aria-label=\"Page navigation\">\n    <ul class=\"pagination\">\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\"><i class=\"ci-arrow-left me-2\"></i>##Prev##</a></li>\n    </ul>\n    <ul class=\"pagination\">\n\n        <li v-if=\"ShowFirstPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(1)\">1</a>\n        </li>\n        <li v-if=\"ShowPreviousPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowPreviousPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">{{PreviousPage}}</a>\n        </li>\n\n        <li class=\"page-item active d-none d-sm-block\" aria-current=\"page\"><span class=\"page-link\">{{currentPage}} <span class=\"visually-hidden\">(current)</span></span></li>\n\n        <li v-if=\"ShowNextPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"nextPage()\">{{NextPage}}</a>\n        </li>\n        <li v-if=\"ShowNextPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowLastPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(LastPage)\">{{LastPage}}</a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n        <li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Next\" v-on:click.prevent=\"nextPage()\">##Next##<i class=\"ci-arrow-right ms-2\"></i></a></li>\n    </ul>\n</nav>",
    "Translations": [
      {
        "Key": "Status",
        "Value": "Status",
        "Translation": {
          "EL": "Κατάσταση",
          "EN": "Status",
          "RO": "Status"
        }
      },
      {
        "Key": "Draft",
        "Value": "Draft",
        "Translation": {
          "EL": "Σε προσχέδιο",
          "EN": "Draft",
          "RO": "Draft"
        }
      },
      {
        "Key": "Quoted",
        "Value": "Quoted",
        "Translation": {
          "EL": "Quoted",
          "EN": "Quoted",
          "RO": "Observaţie"
        }
      },
      {
        "Key": "All",
        "Value": "All",
        "Translation": {
          "EL": "Όλα",
          "EN": "All",
          "RO": "Tot"
        }
      },
      {
        "Key": "Accepted",
        "Value": "Accepted",
        "Translation": {
          "EL": "Εγκρίθηκε",
          "EN": "Accepted",
          "RO": "Acceptat"
        }
      },
      {
        "Key": "Completed",
        "Value": "Completed",
        "Translation": {
          "EL": "Ολοκληρώθηκε",
          "EN": "Completed",
          "RO": "Finalizat"
        }
      },
      {
        "Key": "Declined",
        "Value": "Declined",
        "Translation": {
          "EL": "Απορρίφθηκε",
          "EN": "Declined",
          "RO": "Anulat"
        }
      },
      {
        "Key": "Open",
        "Value": "Open",
        "Translation": {
          "EL": "Ανοικτή",
          "EN": "Open",
          "RO": "Deschide"
        }
      },
      {
        "Key": "Sort",
        "Value": "Sort",
        "Translation": {
          "EL": "Ταξινόμηση",
          "EN": "Sort",
          "RO": "Sortare"
        }
      },
      {
        "Key": "ExpirationDate",
        "Value": "ExpirationDate",
        "Translation": {
          "EL": "Ημερομηνία Λήξης",
          "EN": "Expiration Date",
          "RO": "Dată de expirare"
        }
      },
      {
        "Key": "UpdateDate",
        "Value": "UpdateDate",
        "Translation": {
          "EL": "Ημερομηνία Ενημέρωσης",
          "EN": "Update Date",
          "RO": "Dată actulizare"
        }
      },
      {
        "Key": "Create",
        "Value": "Create",
        "Translation": {
          "EL": "Δημιουργία",
          "EN": "Create",
          "RO": "Creează"
        }
      },
      {
        "Key": "Code",
        "Value": "Code",
        "Translation": {
          "EL": "Κωδικός",
          "EN": "Code",
          "RO": "Cod"
        }
      },
      {
        "Key": "Title",
        "Value": "Title",
        "Translation": {
          "EL": "Τίτλος",
          "EN": "Title",
          "RO": "Titlu"
        }
      },
      {
        "Key": "CustomerName",
        "Value": "CustomerName",
        "Translation": {
          "EL": "Όνομα Πελάτη",
          "EN": "Customer Name",
          "RO": "Nume client"
        }
      },
      {
        "Key": "Actions",
        "Value": "Actions",
        "Translation": {
          "EL": "Ενέργειες",
          "EN": "Actions",
          "RO": "Acţiuni"
        }
      },
      {
        "Key": "Success",
        "Value": "Success",
        "Translation": {
          "EL": "Επιτυχία",
          "EN": "Success",
          "RO": "Succes"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Φόρτωση",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "No results",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results",
          "RO": "Niciun rezultat"
        }
      },
      {
        "Key": "Prev",
        "Value": "Prev",
        "Translation": {
          "EL": "",
          "EN": "Prev",
          "RO": "Anterior"
        }
      },
      {
        "Key": "Next",
        "Value": "Next",
        "Translation": {
          "EL": "",
          "EN": "Next",
          "RO": "Următorul"
        }
      },
      {
        "Key": "View",
        "Value": "View",
        "Translation": {
          "EL": "Εμφάνιση",
          "EN": "View",
          "RO": "Vizualizare"
        }
      }
    ],
    "Js": "const quotes = {\n    props:\n        {},\n    data() {\n        return {\n            selectedQuoteStatus: \"All\",\n            quoteStatuses: [\"All\", \"Quoted\", \"Completed\", \"Accepted\", \"Declined\"],\n            selectedQuoteSort: \"UpdateDate\",\n            quoteSorts: [\"ExpirationDate\", \"UpdateDate\",],\n            isLoading: false,\n            currentPage: 1,\n            quotes: [],\n            pageCount: null,\n            totalCount: null,\n        }\n    },\n    mounted() {\n        this.get_quotes();\n    },\n    methods: {\n        changeQuoteStatus(change) {\n            let value = change.target.value;\n            this.selectedQuoteStatus = value;\n            this.currentPage = 1;\n            this.get_quotes();\n        },\n        changeQuoteSort(change) {\n            let value = change.target.value;\n            this.selectedQuoteSort = value;\n            this.currentPage = 1;\n            this.get_quotes();\n        },\n        get_quotes() {\n            this.isLoading = true;\n            let params = {\n                page: this.currentPage,\n                pageSize: 10,\n                status: this.selectedQuoteStatus !== 'ALL' ? this.selectedQuoteStatus : undefined,\n                sort: `-${this.selectedQuoteSort}`\n            }\n\n            this._getQuotes(params, e => {\n                this.quotes = e.model.item1;\n                this.currentPage = e.model.item2.pageNumber;\n                this.pageCount = e.model.item2.numberOfPages;\n                this.totalCount = e.model.item2.totalCount;\n                this.isLoading = false;\n            });\n        },\n        nextPage() {\n            if (this.currentPage + 1 <= this.pageCount)\n                this.pagination(this.currentPage + 1)\n\n        },\n        prevPage() {\n            if (this.currentPage - 1 > 0)\n                this.pagination(this.currentPage - 1)\n\n        },\n        pagination(page) {\n            this.currentPage = page;\n            this.get_quotes();\n        },\n        navigateToQuote(quote) {\n            return `/quote/${quote.id}`;\n        },\n        formatDate(date) {\n            var newDate = new Date(date);\n            newDate = newDate.getDate() + '/' + (newDate.getMonth() + 1) + '/' + newDate.getFullYear()\n            return newDate;\n        },\n    },\n    computed: {\n        FirstPage: {\n            get() {\n                return 1;\n            }\n        },\n        NextPage: {\n\n            get() {\n                return this.currentPage + 1;\n            }\n        },\n        PreviousPage: {\n            get() {\n                return this.currentPage - 1;\n            }\n        },\n        LastPage: {\n            get() {\n                return this.pageCount;\n            }\n        },\n        ShowFirstPage: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n        ShowLastPage: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowNextPage: {\n            get() {\n\n                return this.currentPage < this.LastPage - 1;\n            }\n        },\n        ShowPreviousPage: {\n            get() {\n                return this.currentPage > 2;\n            }\n        },\n        ShowNext: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowPrevious: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n    }\n}\n\napp.component('quotes', {\n    extends: quotes,\n    template: '#quotes'\n});"
  },
  {
    "Name": "Review",
    "Html": "<!-- Order details-->\n<div v-if=\"this.activeStep !== 'orderplaced'\">\n    <h2 class=\"h6 pb-3 mb-3 border-bottom\">##Review_your_order##</h2>\n\n    <div v-for=\"(line, index) in checkout.cartItems\" v-bind:key=\"product\" class=\"d-sm-flex justify-content-between align-items-center my-2 pb-3 border-bottom\">\n        <div class=\"d-block d-sm-flex align-items-center text-center text-sm-start\">\n            <a class=\"d-flex justify-content-between mx-auto me-sm-4\" href=\"#\"></a>\n            <img onerror=\"this.src='this._getNoImageUrl()';\" v-if=\"line.imageLink\" class=\"rounded-3  me-3\" :src=\"line.imageLink\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\n            <img v-else class=\"rounded-3 me-3\" :src=\"this._getNoImageUrl()\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\n            <div class=\"pt-2\">\n                <span v-if=\"line.sku!=null\" class=\"d-block text-secondary fs-sm fw-bold pb-1\">{{line.sku}}</span>\n                <h3 class=\"product-title fs-base mb-2\"><a :href=\"'/product/'+ line.link\">{{line.productTitle}}</a></h3>\n                <div class=\"fs-lg body-secondary-text pt-2\">\n\n                    <span class=\"body-secondary-text\">{{calculateCurrency(line.price)}} </span>\n                    <del v-if=\"hasDiscount(line)\" class=\"fs-sm text-muted\">  {{ this._calculateCurrency(line.lineValue+line.discountValue)}}</del>\n                </div>\n\n            </div>\n        </div>\n        <div class=\"pt-2 pt-sm-0 ps-sm-3 mx-auto mx-sm-0 text-center text-sm-start\" style=\"max-width: 9rem;\">\n            <p class=\"mb-0\"><span class=\"text-muted fs-sm\">##Quantity##:</span><span>&nbsp;{{line.quantity}}</span></p>\n            <p>{{calculateUnitName(line.salesUnitId)}} </p>\n            <a class=\"btn btn-link px-0\" @click=\"ActivateStep3()\"></a>\n        </div>\n\n    </div>\n    <!-- Client details-->\n    <div class=\"bg-secondary rounded-3 px-4 pt-4 pb-2\">\n        <div class=\"row\">\n            <div v-if=\"ShippingAddress.address1==null\" class=\"col-sm-12\">\n                <div class=\"col-sm-12\">\n                    <h4 class=\"h6\">##Billing## </h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li>\n                        <li>\n                            <span class=\"text-muted\">##Address##:&nbsp;</span>{{BillingAddress.address1 }}, {{BillingAddress.city }}, {{BillingAddress.postalCode}}, {{BillingAddress.country}}\n                        </li>\n                        <!-- <li><span class=\"text-muted\">Phone:&nbsp;</span>+1 (808) 764 554 330</li>-->\n                    </ul>\n                </div>\n            </div>\n            <div v-else-if=\"ShippingAddress.address1!=null\" class=\"col-sm-12\">\n                <div class=\"col-sm-6\">\n                    <h4 class=\"h6\">##Billing_to##:</h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li>\n                        <li>\n                            <span class=\"text-muted\">##Address##:&nbsp;</span>{{BillingAddress.address1 }}, {{BillingAddress.city }}, {{BillingAddress.postalCode}}, {{BillingAddress.country}}\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"col-sm-6\">\n                    <h4 class=\"h6\">##Shipping_to##:</h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.SelectedBranch.name}}</li>\n                        <li>\n                            <span class=\"text-muted\">##Address##:&nbsp;</span>{{ShippingAddress.address1 }} ,{{ShippingAddress.city}}, {{ShippingAddress.postalCode}}, {{ShippingAddress.country}}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div v-if=\"selectedCarrier !== null\" class=\"col-sm-12\">\n                <div class=\"col-sm-12\">\n                    <h4 class=\"h6\">##Carriers##:</h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <li>\n                            <span class=\"text-muted\">##Name##:&nbsp;</span>{{selectedCarrier.carrier.name}}\n                        </li>\n                        <li>\n                            <span class=\"text-muted\">##TransitTime##:&nbsp;</span>{{selectedCarrier.carrier.transitTime}}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div v-else>\n    <div class=\"container pb-5 mb-sm-4\">\n        <div class=\"pt-5\">\n            <div v-if=\"isLoading\" class=\"py-5 mt-sm-3 text-center\">\n                <div class=\"spinner-grow my-5\" role=\"status\">\n                    <span class=\"visually-hidden\">##Loading##...</span>\n                </div>\n            </div>\n            <div v-else class=\"card py-3 mt-sm-3\">\n                <div class=\"card-body text-center\">\n                    <h2 class=\"h4 pb-3\">##Thank_you_for_your_order##!</h2>\n                    <p class=\"fs-sm mb-2\">##Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible##.</p>\n                    <p class=\"fs-sm mb-2\">##Make_sure_you_make_note_of_your_order_number_which_is## <span class='fw-medium'>{{checkout.orderCode}}</span></p>\n                    <p class=\"fs-sm\">##You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order##. </p><a class=\"btn btn-primary mt-3 me-3\" href=\"/\">##Go_back_shopping##</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n",
    "Translations": [
      {
        "Key": "Review_your_order",
        "Value": "Review_your_order",
        "Translation": {
          "EL": "Ανασκόπηση της παραγγελίας σας",
          "EN": "Review your order",
          "RO": "Verificare comandă"
        }
      },
      {
        "Key": "Quantity",
        "Value": "Quantity",
        "Translation": {
          "EL": "Ποσότητα",
          "EN": "Quantity",
          "RO": "Cantitate"
        }
      },
      {
        "Key": "Client",
        "Value": "Client",
        "Translation": {
          "EL": "Πελάτης",
          "EN": "Client",
          "RO": "Client"
        }
      },
      {
        "Key": "Billing",
        "Value": "Billing",
        "Translation": {
          "EL": "Χρέωση",
          "EN": "Billing",
          "RO": "Furnizor"
        }
      },
      {
        "Key": "Client",
        "Value": "Client",
        "Translation": {
          "EL": "Πελάτης",
          "EN": "Client",
          "RO": "Client"
        }
      },
      {
        "Key": "Address",
        "Value": "Address",
        "Translation": {
          "EL": "Διεύθυνση",
          "EN": "Address",
          "RO": "Adresă"
        }
      },
      {
        "Key": "Billing_to",
        "Value": "Billing_to",
        "Translation": {
          "EL": "Χρέωση σε",
          "EN": "Billing to",
          "RO": "Cumpărător"
        }
      },
      {
        "Key": "Shipping_to",
        "Value": "Shipping_to",
        "Translation": {
          "EL": "Αποστολή προς",
          "EN": "Shipping to",
          "RO": "Livrat către"
        }
      },
      {
        "Key": "Carriers",
        "Value": "Carriers",
        "Translation": {
          "EL": "Μεταφορικά",
          "EN": "Carriers",
          "RO": "Curieri"
        }
      },
      {
        "Key": "Name",
        "Value": "Name",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      },
      {
        "Key": "TransitTime",
        "Value": "TransitTime",
        "Translation": {
          "EL": "Χρόνος παράδοσης",
          "EN": "Transit time",
          "RO": "Timp de livrare"
        }
      },
      {
        "Key": "Thank_you_for_your_order",
        "Value": "Thank_you_for_your_order",
        "Translation": {
          "EL": "Σας ευχαριστούμε για την παραγγελία σας",
          "EN": "Thank you for your order",
          "RO": ""
        }
      },
      {
        "Key": "Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible",
        "Value": "Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible",
        "Translation": {
          "EL": "Η παραγγελία σας έχει γίνει και θα την επεξεργαστούμε το συντομότερο δυνατό",
          "EN": "Your order has been placed and will be processed as soon as possible",
          "RO": ""
        }
      },
      {
        "Key": "Make_sure_you_make_note_of_your_order_number_which_is",
        "Value": "Make_sure_you_make_note_of_your_order_number_which_is",
        "Translation": {
          "EL": "Παρακαλώ σημειώστε τον κωδικό της παραγγελίας, ο οποίος είναι",
          "EN": "Make sure you make note of your order number which is",
          "RO": ""
        }
      },
      {
        "Key": "You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order",
        "Value": "You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order",
        "Translation": {
          "EL": "Θα λάβετε σύντομα ένα επιβεβαιωτικό email με την παραγγελία σας",
          "EN": "You will be receiving an email shortly with confirmation of your order",
          "RO": ""
        }
      },
      {
        "Key": "Go_back_shopping",
        "Value": "Go_back_shopping",
        "Translation": {
          "EL": "Επιστροφή",
          "EN": "Go back shopping",
          "RO": ""
        }
      }
    ],
    "Js": "const review = {\n    props:\n    {\n        model: Object,\n        steps: Array,\n        activeStep: String,\n        buttonLoading: Boolean,\n    },\n    data() {\n        return {\n            checkout: null,\n            selectedcarrier: null,\n            carriers: null,\n            selectedCarrier: null,\n            selectedBranch: null,\n            units: [],\n            billingAddress: null,\n            currentStep: this.activeStep,\n            loader: this.buttonLoading\n        }\n    },\n    mounted() {\n        this.checkout = this.model;\n        this.customerData = this.checkout.customer;\n        this.billingAddress = this.checkout.billingAddress;\n        this.shippingAddress = this.checkout.shippingAddress;\n        this.selectedBranch = this.checkout.customerBranchId == null ? this.checkout.addresses[0] : this.checkout.customer.branches.find((branch) => branch.id === this.checkout.customerBranchId);\n        this.carriers = this.checkout.shippingOptions;\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price);\n        },\n        hasDiscount(item) {\n            if (item.initialPrice == undefined || item.initialPrice == null || item.initialPrice <= item.price)\n                return false;\n\n            return true;\n        },\n        calculateUnitName(id) {\n            let unit = this.units.find(u => u.id === id);\n            if (unit !== undefined && unit !== null) {\n                if (unit.name !== undefined && unit.name !== null && unit.name !== \"\") {\n                    return `(${unit.name})`\n                }\n            }\n        },\n        oncheckoutComplete(e) {\n            this.loader = false;\n            this.checkoutData = e;\n            this.customerData = {};\n            this.checkout.cartItems = {};\n            this.dataLoaded = true;\n            this.currentStep = 'orderplaced';\n            this.$emit('update:activeStep', this.currentStep);\n            this.$emit('update:checkout', this.checkoutData);\n            this.$emit('update:buttonLoading', this.loader);\n\n\n        },\n\n        oncheckoutCompleteError(status, e) {\n            console.log(status, e);\n        },\n        placeOrder() {\n\n            this.checkout.shippingAddress = this.ShippingAddress;\n\n            this.checkout.customerId = this.customerData.id;\n\n            // this.checkout.customerBranchId = this.selectedBranch.id;\n\n            if (!this.steps.includes(\"billing\")) {\n                if (this.selectedBranch.id != this.customerData.id) {\n                    this.checkout.customerBranchId = this.selectedBranch.id;\n                }\n            }\n\n            this.checkOut();\n        },\n        checkOut() {\n            this.dataLoaded = false;\n            this.loader = true;\n            this.$emit('update:buttonLoading', this.loader);\n            this._initiateCompleteCheckout(this.checkout, this.oncheckoutComplete, this.oncheckoutCompleteError)\n        },\n\n        checkValid() {\n            return true;\n        }\n    },\n    computed: {\n        Checkout: {\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n        BillingAddress: {\n            get() {\n                this.customerData.billingAddress = this.billingAddress;\n                return this.billingAddress;\n            },\n            set(newVal) {\n                this.billingAddress = newVal;\n            }\n        },\n        SelectedBranch: {\n            get() {\n                return this.selectedBranch;\n            },\n            set(newVal) {\n                this.selectedBranch = newVal;\n            }\n        },\n        ShippingAddress: {\n            get() {\n                return this.shippingAddress;\n            },\n            set(newVal) {\n                this.shippingAddress = newVal;\n            }\n        },\n    }\n}\n\napp.component('review', {\n    extends: review,\n    template: '#review'\n});"
  },
  {
    "Name": "ReviewRetail",
    "Html": "<!-- Order details-->\n<div v-if=\"this.activeStep !== 'orderplaced'\">\n\n    <h2 class=\"h6  pb-3 mb-3 border-bottom\">##Review_your_order##</h2>\n\n    <div v-if=\"checkout && checkout.cartItems\" v-for=\"(line, index) in checkout.cartItems\" v-bind:key=\"product\" class=\"d-sm-flex justify-content-between align-items-center my-2 pb-3 border-bottom\">\n        <div class=\"d-block d-sm-flex align-items-center text-center text-sm-start\">\n            <a class=\"d-flex justify-content-between mx-auto me-sm-4\" href=\"#\"></a>\n            <img onerror=\"this.src='this._getNoImageUrl()';\" v-if=\"line.imageLink\" class=\"rounded-3  me-3\" :src=\"line.imageLink\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\n            <img v-else class=\"rounded-3 me-3\" :src=\"this._getNoImageUrl()\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\n            <div class=\"pt-2\">\n                <span v-if=\"line.sku!=null\" class=\"d-block text-secondary fs-sm fw-bold pb-1\">{{line.sku}}</span>\n                <h3 class=\"product-title fs-base mb-2\"><a :href=\"'/product/'+ line.link\">{{line.productTitle}}</a></h3>\n                <div class=\"fs-lg body-secondary-text pt-2\">\n                    <span class=\"body-secondary-text\">{{calculateCurrency(line.price)}} </span>\n                    <del v-if=\"hasDiscount(line) && this.globalModel.operationMode !== 'Retail' \" class=\"fs-sm text-muted me-2\"> {{this._calculateCurrency(line.lineValue+line.discountValue)}} </del>\n                    <del v-if=\"hasDiscount(line) \" class=\"fs-sm text-muted me-2\"> {{this._calculateCurrency(line.initialPrice)}} </del>\n                </div>\n\n            </div>\n        </div>\n        <div class=\"pt-2 pt-sm-0 ps-sm-3 mx-auto mx-sm-0 text-center text-sm-start\" style=\"max-width: 9rem;\">\n\n            <p class=\"mb-0\"><span class=\"text-muted fs-sm\">##Quantity##:</span><span>&nbsp;{{line.quantity}}</span></p>\n            <p>{{calculateUnitName(line.salesUnitId)}} </p>\n            <a class=\"btn btn-link px-0\" @click=\"ActivateStep3()\"></a>\n        </div>\n\n    </div>\n    <!-- Client details-->\n    <div class=\"bg-secondary rounded-3 px-4 pt-4 pb-2\">\n        <div class=\"row\">\n            <div v-if=\"this.checkout && this.checkout.shippingAddress && this.checkout.shippingAddress.address1==null\" class=\"col-sm-12\">\n                <div class=\"col-sm-12\">\n                    <h4 class=\"h6\">##Billing## </h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <!-- <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li> -->\n                        <li>\n                            <span class=\"text-muted\">##Address##:&nbsp;</span>{{this.checkout.billingAddress.address1 }}, {{this.checkout.billingAddress.city }}, {{this.checkout.billingAddress.postalCode}}, {{this.checkout.billingAddress.country}}\n                        </li>\n                        <!-- <li><span class=\"text-muted\">Phone:&nbsp;</span>+1 (808) 764 554 330</li>-->\n                    </ul>\n                </div>\n            </div>\n            <div v-else-if=\"this.checkout && this.checkout.shippingAddress && this.checkout.shippingAddress.address1!=null\" class=\"col-sm-12\">\n                <div class=\"col-sm-6\">\n                    <h4 class=\"h6\">##Billing_to##:</h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <!-- <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li> -->\n                        <li>\n                            <span class=\"text-muted\">##Address##:&nbsp;</span>{{this.checkout.billingAddress.address1 }}, {{this.checkout.billingAddress.city }}, {{this.checkout.billingAddress.postalCode}}, {{this.checkout.billingAddress.country}}\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"col-sm-6\">\n                    <h4 class=\"h6\">##Shipping_to##:</h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <!-- <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.SelectedBranch.name}}</li> -->\n                        <li>\n                            <span class=\"text-muted\">##Address##:&nbsp;</span>{{this.checkout.shippingAddress.address1 }}, {{this.checkout.shippingAddress.city }}, {{this.checkout.shippingAddress.postalCode}}, {{this.checkout.shippingAddress.country}}\n                    </ul>\n                </div>\n            </div>\n            <div v-if=\"selectedCarrier !== null\" class=\"col-sm-12\">\n                <div class=\"col-sm-12\">\n                    <h4 class=\"h6\">##Carriers##:</h4>\n                    <ul class=\"list-unstyled fs-sm\">\n                        <li>\n                            <span class=\"text-muted\">##Name##:&nbsp;</span>{{selectedCarrier.carrier.name}}\n                        </li>\n                        <li>\n                            <span class=\"text-muted\">##TransitTime##:&nbsp;</span>{{selectedCarrier.carrier.transitTime}}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div v-else>\n    <div class=\"container pb-5 mb-sm-4\">\n        <div class=\"pt-5\">\n            <div v-if=\"isLoading\" class=\"py-5 mt-sm-3 text-center\">\n                <div class=\"spinner-grow my-5\" role=\"status\">\n                    <span class=\"visually-hidden\">##Loading##...</span>\n                </div>\n            </div>\n            <div v-else class=\"card py-3 mt-sm-3\">\n                <div class=\"card-body text-center\">\n                    <h2 class=\"h4 pb-3\">##Thank_you_for_your_order##!</h2>\n                    <p class=\"fs-sm mb-2\">##Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible##.</p>\n                    <p class=\"fs-sm mb-2\">##Make_sure_you_make_note_of_your_order_number_which_is## <span v-if=\"checkout && checkout.orderCode\" class='fw-medium'>{{checkout.orderCode}}</span></p>\n                    <p class=\"fs-sm\">##You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order##. </p><a class=\"btn btn-primary mt-3 me-3\" href=\"/\">##Go_back_shopping##</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n",
    "Translations": [
      {
        "Key": "Review_your_order",
        "Value": "Review_your_order",
        "Translation": {
          "EL": "Ανασκόπηση της παραγγελίας σας",
          "EN": "Review your order",
          "RO": "Verificare comandă"
        }
      },
      {
        "Key": "Quantity",
        "Value": "Quantity",
        "Translation": {
          "EL": "Ποσότητα",
          "EN": "Quantity",
          "RO": "Cantitate"
        }
      },
      {
        "Key": "Client",
        "Value": "Client",
        "Translation": {
          "EL": "Πελάτης",
          "EN": "Client",
          "RO": "Client"
        }
      },
      {
        "Key": "Billing",
        "Value": "Billing",
        "Translation": {
          "EL": "Χρέωση",
          "EN": "Billing",
          "RO": "Furnizor"
        }
      },
      {
        "Key": "Client",
        "Value": "Client",
        "Translation": {
          "EL": "Πελάτης",
          "EN": "Client",
          "RO": "Client"
        }
      },
      {
        "Key": "Address",
        "Value": "Address",
        "Translation": {
          "EL": "Διεύθυνση",
          "EN": "Address",
          "RO": "Adresă"
        }
      },
      {
        "Key": "Billing_to",
        "Value": "Billing_to",
        "Translation": {
          "EL": "Χρέωση σε",
          "EN": "Billing to",
          "RO": "Cumpărător"
        }
      },
      {
        "Key": "Shipping_to",
        "Value": "Shipping_to",
        "Translation": {
          "EL": "Αποστολή προς",
          "EN": "Shipping to",
          "RO": "Livrat către"
        }
      },
      {
        "Key": "Carriers",
        "Value": "Carriers",
        "Translation": {
          "EL": "Μεταφορικά",
          "EN": "Carriers",
          "RO": "Curieri"
        }
      },
      {
        "Key": "Name",
        "Value": "Name",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      },
      {
        "Key": "TransitTime",
        "Value": "TransitTime",
        "Translation": {
          "EL": "Χρόνος παράδοσης",
          "EN": "Transit time",
          "RO": "Timp de livrare"
        }
      },
      {
        "Key": "Complete_Order",
        "Value": "Complete_Order",
        "Translation": {
          "EL": "Ολοκληρωση παραγγελίας",
          "EN": "Complete Order",
          "RO": ""
        }
      },
      {
        "Key": "Complete",
        "Value": "Complete",
        "Translation": {
          "EL": "Ολοκλήρωση",
          "EN": "Complete",
          "RO": ""
        }
      },
      {
        "Key": "Placing_Order",
        "Value": "Placing_Order",
        "Translation": {
          "EL": "Τοποθέτηση Παραγγελίας",
          "EN": "Placing_Order",
          "RO": ""
        }
      },
      {
        "Key": "Thank_you_for_your_order",
        "Value": "Thank_you_for_your_order",
        "Translation": {
          "EL": "Σας ευχαριστούμε για την παραγγελία σας",
          "EN": "Thank you for your order",
          "RO": ""
        }
      },
      {
        "Key": "Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible",
        "Value": "Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible",
        "Translation": {
          "EL": "Η παραγγελία σας έχει γίνει και θα την επεξεργαστούμε το συντομότερο δυνατό",
          "EN": "Your order has been placed and will be processed as soon as possible",
          "RO": ""
        }
      },
      {
        "Key": "Make_sure_you_make_note_of_your_order_number_which_is",
        "Value": "Make_sure_you_make_note_of_your_order_number_which_is",
        "Translation": {
          "EL": "Παρακαλώ σημειώστε τον κωδικό της παραγγελίας, ο οποίος είναι",
          "EN": "Make sure you make note of your order number which is",
          "RO": ""
        }
      },
      {
        "Key": "You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order",
        "Value": "You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order",
        "Translation": {
          "EL": "Θα λάβετε σύντομα ένα επιβεβαιωτικό email με την παραγγελία σας",
          "EN": "You will be receiving an email shortly with confirmation of your order",
          "RO": ""
        }
      },
      {
        "Key": "Go_back_shopping",
        "Value": "Go_back_shopping",
        "Translation": {
          "EL": "Επιστροφή",
          "EN": "Go back shopping",
          "RO": ""
        }
      }
    ],
    "Js": "const reviewretail = {\n    props:\n    {\n        model: Object,\n        steps: Array,\n        activeStep: String,\n        buttonLoading: Boolean,\n    },\n    data() {\n        return {\n            globalModel: this._global,\n            checkout: null,\n            selectedcarrier: null,\n            carriers: null,\n            selectedCarrier: null,\n            selectedBranch: null,\n            units: [],\n            billingAddress: null,\n            currentStep: this.activeStep,\n            loader: this.buttonLoading\n\n        }\n    },\n    mounted() {\n        this.checkout = this.model;\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price);\n        },\n        hasDiscount(item) {\n            if (item.initialPrice == undefined || item.initialPrice == null || item.initialPrice <= item.price)\n                return false;\n\n            return true;\n        },\n        calculateUnitName(id) {\n            let unit = this.units.find(u => u.id === id);\n            if (unit !== undefined && unit !== null) {\n                if (unit.name !== undefined && unit.name !== null && unit.name !== \"\") {\n                    return `(${unit.name})`\n                }\n            }\n        },\n        oncheckoutComplete(e) {\n            this.loader = false;\n            this.checkoutData = e;\n            this.checkout.cartItems = {};\n            this.dataLoaded = true;\n            this.currentStep = 'orderplaced';\n            this.$emit('update:activeStep', this.currentStep);\n            this.$emit('update:checkout', this.checkoutData);\n            this.$emit('update:buttonLoading', this.loader);\n        },\n\n        oncheckoutCompleteError(status, e) {\n            console.log(status, e);\n        },\n        placeOrder() {\n            this.checkout.shippingAddress = this.ShippingAddress;\n            this.checkOut();\n        },\n        checkOut() {\n            this.dataLoaded = false;\n            this.loader = true;\n            this.$emit('update:buttonLoading', this.loader);\n            this._initiateCompleteCheckout(this.checkout, this.oncheckoutComplete, this.oncheckoutCompleteError)\n        },\n\n        checkValid() {\n            return true;\n        }\n    },\n    computed: {\n        Checkout: {\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n    }\n}\n\napp.component('reviewretail', {\n    extends: reviewretail,\n    template: '#reviewretail'\n});"
  },
  {
    "Name": "Shipping",
    "Html": "<h2 class=\"h6 pb-3 mb-2\">##Choose_shipping_method##</h2>\n<div class=\"table-responsive\">\n    <table class=\"table table-hover fs-sm border-top\">\n        <thead>\n            <tr>\n                <th class=\"align-middle\"></th>\n                <th class=\"align-middle\">##Shipping_method##</th>\n                <th class=\"align-middle\">##Delivery_time##</th>\n                <th class=\"align-middle\">##Handling_fee##</th>\n            </tr>\n        </thead>\n        <tbody v-if=\"isCarriersLoading\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n\n        <tbody v-if=\"carriers!== null && !isCarriersLoading\">\n            <tr v-for=\"carrier in carriers\">\n                <td>\n                    <div class=\"align-middle\">\n                        <input class=\"form-check-input\" type=\"radio\" :id=\"carrier.carrier.id\" v-model=\"selectedCarrierId\" @change=\"setCarrier\" v-bind:value=\"carrier.carrier.id\" name=\"shipping-method\">\n                        <label class=\"form-check-label\" :for=\"carrier.carrier.id\"></label>\n                    </div>\n                </td>\n                <td class=\"align-middle d-flex align-items-center\">\n                    <img width=\"60\" v-if=\"carrier.carrier.logo?.link != null\" :src=\"carrier.carrier.logo?.link\" />\n                    <span class=\"ml-2\" v-if=\"carrier.carrier.logo?.link != null\">- (</span>\n                    <span class=\"text-dark fw-medium\">{{carrier.shippingLine.title}}</span><br><span class=\"text-muted\"></span>\n                    <span v-if=\"carrier.carrier.logo?.link != null\">)</span>\n                </td>\n                <td class=\"align-middle\">{{carrier.carrier.transitTime}}</td>\n                <td class=\"align-middle\">{{calculateCurrency(carrier.shippingLine.totalAmount)}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n",
    "Translations": [
      {
        "Key": "Choose_shipping_method",
        "Value": "Choose_shipping_method",
        "Translation": {
          "EL": "Διάλεξε τρόπο αποστολής",
          "EN": "Choose shipping method",
          "RO": "Alege metoda de livrare"
        }
      },
      {
        "Key": "Shipping_method",
        "Value": "Shipping_method",
        "Translation": {
          "EL": "Μέθοδος αποστολής",
          "EN": "Shipping method",
          "RO": "Metoda de livrare"
        }
      },
      {
        "Key": "Delivery_time",
        "Value": "Delivery_time",
        "Translation": {
          "EL": "Χρόνος αποστολής",
          "EN": "Delivery time",
          "RO": "Timp de livrare"
        }
      },
      {
        "Key": "Handling_fee",
        "Value": "Handling_fee",
        "Translation": {
          "EL": "Έξοδα αποστολής",
          "EN": "Handling fee",
          "RO": "Comision de procesare"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Φόρτωση",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      }
    ],
    "Js": "const shipping = {\n    props:\n    {\n        model: Object,\n\n    },\n    data() {\n        return {\n            checkout: null,\n            selectedCarrierId: null,\n            carriers: null,\n            selectedCarrier: null,\n            shippingValue: null,\n            isCarriersLoading: false,\n        }\n    },\n    mounted() {\n        this.checkout = this.model;\n        this.carriers = this.checkout.shippingOptions;\n        if (this.carriers && this.carriers.length > 0) {\n            this.selectedCarrierId = this.carriers[0].carrier.id;\n            this.setCarrier();\n        }\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price);\n        },\n\n        setCarrier() {\n            this.selectedCarrier = this.carriers.find(c => c.carrier.id === this.selectedCarrierId);\n            this.shippingValue = this.selectedCarrier.shippingLine.totalAmount;\n            this.checkout.shippingLine = this.selectedCarrier.shippingLine;\n            this.$emit('update:checkout', this.checkout);\n        },\n        checkValid() {\n            return !!this.selectedCarrier;\n        }\n    },\n    computed: {\n        Checkout: {\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n    }\n}\n\napp.component('shipping', {\n    extends: shipping,\n    template: '#shipping'\n});"
  },
  {
    "Name": "ShoppingList",
    "Html": "<div v-if=\"!this.displayShoppingList\">\n    <div class=\"row row-cols-1 d-flex row-cols-md-3 g-4\">\n        <div class=\"col d-flex\">\n            <div class=\"card d-flex justify-content-center align-items-center\"\n                 style=\"border:2px dashed var(--border-color);\">\n                <div class=\"card-body mt-4\">\n                    <form @submit.prevent=\"this.createList()\">\n                        <p class=\" pb-2\">##Writeatitletocreateanewshoppinglist##</p>\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"this.title\"\n                                   placeholder=\"##GiveName##\" required>\n                        </div>\n                        <div class=\"d-grid mt-3\">\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\">##Create_List##</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"!this.isLoading\" class=\"col\" v-for=\"(list,index) in this.lists\">\n            <div class=\"card\">\n                <div class=\"card-body d-flex justify-content-between\">\n                    <a href=\"#\" @click.stop.prevent=\"()=> this.shoppingListSelected(list.alias)\">\n                        <div v-if=\"this.inputOn[index] === false\">\n                            <span class=\"h6 blog-entry-title\">{{list.title}}</span><br />\n                            <span v-if=\"list.items != null && list.items.length > 0 \"\n                                  class=\"card-text fs-sm text-muted\">{{list.items.length}} ##Products##</span>\n                            <span v-else class=\"card-text fs-sm text-muted\">0 ##Products##</span>\n                        </div>\n                    </a>\n                    <div v-if=\"this.inputOn[index] === true\" class=\"input-group \">\n                        <input type=\"text\" class=\"form-control\" v-model=\"list.title\"\n                               placeholder=\"Give a title\" aria-label=\"title name\"\n                               aria-describedby=\"button-addon2\">\n                        <button class=\"btn btn-outline-primary\" @click=\"this.updateTitle(list,index)\"\n                                type=\"button\" id=\"button-addon2\">\n                            <i class=\"ci-check\"></i>\n                        </button>\n                    </div>\n                    <div v-if=\"this.inputOn[index] === false\">\n                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm  dropdown-toggle\"\n                                data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"ci-edit\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-end\">\n                            <a href=\"#\" @click.prevent=\"() =>this.showInput(index)\"\n                               class=\"dropdown-item\">##Update_Name##</a>\n                            <a href=\"#\" @click.prevent=\"() =>this.shoppingListSelected(list.alias)\"\n                               class=\"dropdown-item\">##View##</a>\n                            <!-- <div class=\"dropdown-divider\"></div> -->\n                            <a href=\"#\" @click.prevent=\"this.deleteList(list.alias)\"\n                               class=\"dropdown-item\">##Delete##</a>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"#\" @click.stop.prevent=\"()=> this.shoppingListSelected(list.alias)\"\n                   style=\"display:flex;align-items:center;justify-content:center;margin:0 auto 24px;height:210px;\">\n                    <img src=\"{{Assets}}/images/shopping-cart-img.png\">\n                </a>\n\n\n            </div>\n        </div>\n\n    </div>\n</div>\n<div v-if=\"this.displayShoppingList\">\n    <div class=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n        <div class=\"d-flex justify-content-end \">\n            <button class=\"btn bg-faded-info btn-sm d-none d-lg-inline-block ms-3\"\n                    @click=\"() => this.backToShoppingLists()\">\n                <i class=\"ci-sign-out me-2\">\n                </i>##Back##\n            </button>\n        </div>\n        <div v-if=\"this.products !==null && this.products.length > 0\"\n             class=\"d-flex justify-content-end mt-2\">\n            <button @click=\"()=> this.addAllToCart()\"\n                    class=\"btn btn-primary btn-sm d-none d-lg-inline-block ms-3\">\n                <i class=\"ci-add-circle me-2\">\n                </i>##Add_All##\n            </button>\n        </div>\n    </div>\n    <div v-if=\"isLoading\" class=\"d-flex justify-content-center align-items-center mt-5\">\n        <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">##Loading##...</span>\n        </div>\n    </div>\n    <div class=\"table-responsive fs-md mb-4\"\n         v-if=\"!this.isLoading && this.products !==null && this.products.length > 0\">\n        <table class=\"table table-hover  mb-0\">\n            <thead>\n                <tr>\n                    <th>##Name##</th>\n                    <th class=\"text-end\">##SKU##</th>\n                    <th class=\"text-end\">##Price##</th>\n                    <th class=\"text-center\">##AddToCart##</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"product in this.products\">\n                    <td class=\"py-3 fw-medium fs-sm align-middle\">\n                        <a :href=\"'/product/'+product.alias\">{{product.title}}</a>\n                    </td>\n                    <td class=\"py-3 text-end align-middle\">{{product.productVariants[0].sku}}</td>\n                    <td class=\"py-3 text-end align-middle\">\n                        {{calculateCurrency(product.productVariants[0].price)}}\n                    </td>\n                    <td class=\"py-3 text-center align-middle\">\n                        <button type=\"button\" class=\"btn btn-outline-primary rounded-pill ms-2 px-2 py-1\"\n                                v-on:click=\"this._addToCart(product.id,product.productVariants[0].id,1)\"\n                                data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"bottom\"\n                                data-bs-trigger=\"hover\" title=\"##Add_to_cart##\">\n                            <i class=\"ci-cart\"></i>\n                        </button>\n                    </td>\n                    <td class=\"text-end align-middle\">\n                        <button type=\"button\" class=\"btn btn-outline-danger rounded-pill px-2 py-1\"\n                                v-on:click=\"this.deleteFromList(product.id,product.productVariants[0].id)\"\n                                data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"bottom\"\n                                data-bs-trigger=\"hover\" title=\"##Delete_from_list##\">\n                            <i class=\"ci-trash\"></i>\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <div v-else-if=\"!this.isLoading && (this.products === null || this.products.length === 0)\"\n         class=\"card text-center mt-4 mb-4\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">##This_Shopping_List_has_no_products##</h5>\n            <a href=\"/\" class=\"btn btn-sm btn-primary\">##Back_to_Home_Page##</a>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Writeatitletocreateanewshoppinglist",
        "Value": "Writeatitletocreateanewshoppinglist",
        "Translation": {
          "EL": "Γράψε ένα τίτλο για να δημιουργήσεις μια νεα λίστα",
          "EN": "Write a title to create a new shoppinglist",
          "RO": "Denumeşte lista de cumpărături"
        }
      },
      {
        "Key": "Create_List",
        "Value": "Create List",
        "Translation": {
          "EL": "Δημιουργήστε Λίστα",
          "EN": "Create List",
          "RO": "Creeză lista"
        }
      },
      {
        "Key": "Products",
        "Value": "Products",
        "Translation": {
          "EL": "Προιόντα",
          "EN": "Products",
          "RO": "Produse"
        }
      },
      {
        "Key": "GiveName",
        "Value": "Give a name",
        "Translation": {
          "EL": "Δώστε ένα όνομα",
          "EN": "Give a name",
          "RO": "Denumeşte"
        }
      },
      {
        "Key": "AddToCart",
        "Value": "Add to cart",
        "Translation": {
          "EL": "Προσθήκη στο καλάθι",
          "EN": "Add to cart",
          "RO": "Adaugă în coş"
        }
      },
      {
        "Key": "Update_Name",
        "Value": "Rename",
        "Translation": {
          "EL": "Μετανομασία",
          "EN": "Rename",
          "RO": "Redenumeşte"
        }
      },
      {
        "Key": "Delete",
        "Value": "Delete",
        "Translation": {
          "EL": "Διαγραφή",
          "EN": "Delete",
          "RO": "Şterge"
        }
      },
      {
        "Key": "View",
        "Value": "View",
        "Translation": {
          "EL": "Εμφάνιση",
          "EN": "View",
          "RO": "Vizualizare"
        }
      },
      {
        "Key": "Back",
        "Value": "Back",
        "Translation": {
          "EL": "Πίσω",
          "EN": "Back",
          "RO": "Înapoi"
        }
      },
      {
        "Key": "Add_All",
        "Value": "Add All",
        "Translation": {
          "EL": "Προσθήκη Όλων",
          "EN": "Add All",
          "RO": "Adaugă tot"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Loading",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "Name",
        "Value": "Name",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      },
      {
        "Key": "SKU",
        "Value": "SKU",
        "Translation": {
          "EL": "Κωδικός",
          "EN": "SKU",
          "RO": "SKU"
        }
      },
      {
        "Key": "Price",
        "Value": "Price",
        "Translation": {
          "EL": "Τιμή",
          "EN": "Price",
          "RO": "Preţ"
        }
      },
      {
        "Key": "AddtoCart",
        "Value": "Add to Cart",
        "Translation": {
          "EL": "Προσθήκη",
          "EN": "Add to Cart",
          "RO": "Adaugă în coş"
        }
      },
      {
        "Key": "Back_to_Home_Page",
        "Value": "Back to Home Page",
        "Translation": {
          "EL": "Πίσω στην Αρχική Σελίδα",
          "EN": "Back to Home Page",
          "RO": "Înapoi la pagina principală."
        }
      },
      {
        "Key": "This_Shopping_List_has_no_products",
        "Value": "This Shopping List has no products",
        "Translation": {
          "EL": "Αυτή η Λίστα Αγορών δεν έχει προϊόντα",
          "EN": "This Shopping List has no products",
          "RO": "Această listă de cumpărături nu conţine produse."
        }
      }
    ],
    "Js": "const shoppinglist = {\n    props:\n        {},\n    data() {\n        return {\n            shoppingList: null,\n            displayShoppingList: false,\n            lists: [],\n            inputOn: [],\n            isLoading: false,\n            id: \"\",\n            alias: \"\",\n            products: [],\n\n        }\n    },\n    mounted() {\n        this.get_shoppingLists();\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price, 2);\n        },\n        get_shoppingLists() {\n            this.isLoading = true;\n            this._getShoppingLists(e => {\n                this.isLoading = false;\n                this.lists = e;\n                this.arrayOfBooleans();\n            })\n        },\n        backToShoppingLists() {\n            this.displayShoppingList = false;\n            window.history.replaceState({ view: 'shoppingLists' }, 'shoppingLists', `/profile/shoppingLists`);\n            this.get_shoppingLists();\n        },\n        arrayOfBooleans() {\n            this.inputOn = [];\n            for (let list of this.lists) {\n                this.inputOn.push(false);\n            }\n        },\n        createList() {\n            if (this.title !== null && this.title !== \"\") {\n                let data = { title: this.title };\n                this._createShoppingList(data, e => {\n                    this.title = '';\n                    this.get_shoppingLists();\n                });\n            }\n        },\n        updateTitle(list, index) {\n            this._updateShoppingList(list, e => {\n                this.lists[index] = e;\n                this.inputOn[index] = false;\n            })\n        },\n        deleteList(alias) {\n            this._deleteShoppingList(alias, e => {\n                this.get_shoppingLists()();\n            });\n        },\n        showInput(index) {\n            this.arrayOfBooleans();\n            this.inputOn[index] = true;\n        },\n        getShoppingList() {\n            this.isLoading = true;\n            this._getShoppingListByAlias(this.id, e => {\n                this.shoppingList = e;\n\n                if (this.shoppingList.items === null || this.shoppingList.items.length < 1) {\n                    this.shoppingList.items = [];\n                    this.products = [];\n                    this.isLoading = false;\n                    return;\n                }\n                this.getProducts();\n            })\n        },\n        getProducts() {\n            this.buildFilter();\n            if (this.filter == \"\") {\n                this.products = [];\n                return;\n            }\n            this._getProductsByFilter(this.filter, e => {\n                this.products = e;\n                this.products.forEach(p => p.productVariants[0].selectedQuantity = 1);\n                this.isLoading = false;\n            })\n        },\n        buildFilter() {\n            this.filter = \"\";\n            let productIds = this.shoppingList.items.map(function (item) {\n                return item.productId;\n            });\n            for (const id of productIds) {\n                this.filter = this.filter.concat(\"&ids=\", id);\n            }\n            this.filter = this.filter.concat(\"&page=1&pageSize=1000\")\n        },\n        shoppingListSelected(alias) {\n            this.id = alias;\n            window.history.replaceState(null, null, `/profile/shoppingLists/${alias}`);\n            this.getShoppingList();\n            this.displayShoppingList = true;\n        },\n        addAllToCart() {\n            var cartitems = [];\n            for (let product of this.products) {\n                var cartitem = new Object();\n                cartitem.productVariantId = product.productVariants[0].id;\n                cartitem.productId = product.id;\n                cartitem.quantity = 1;\n                cartitems.push(cartitem);\n                product.selectedQuantity = 1;\n            }\n            this._addToCartMulti(cartitems);\n        },\n        newCart() {\n            this._clearCart();\n            localStorage.removeItem(\"cartToken\");\n            this.addAllToCart();\n        },\n        deleteFromList(productid, variantid) {\n            this.isLoading = true;\n            this.products = this.products.filter(i => i.id !== productid && i.productVariants[0].id !== variantid);\n            this.shoppingList.items = this.shoppingList.items.filter(i => i.productId !== productid && i.productVariantId !== variantid);\n            this._updateShoppingList(this.shoppingList, e => {\n                this.isLoading = false;\n                this.shoppingList.items = e.items;\n                if (this.shoppingList.items === null || this.shoppingList.items.length < 1) {\n                    this.products = [];\n                    return;\n                }\n            });\n        },\n    }\n}\n\napp.component('shoppinglist', {\n    extends: shoppinglist,\n    template: '#shoppinglist'\n});"
  },
  {
    "Name": "Transactions",
    "Html": "<div class=\"row mx-n2 pt-2\">\n    <template v-if=\"this.transactions != null && !isLoading\">\n        <div class=\"col-md-4 col-sm-6 px-2 mb-4\">\n            <div class=\"bg-secondary h-100 rounded-3 p-4 text-center\">\n                <h3 class=\"fs-sm text-muted\">##Debit##</h3>\n                <p class=\"h2 mb-2 text-danger\">{{calculateCurrency(transactions.total?.debit)}}</p>\n            </div>\n        </div>\n        <div class=\"col-md-4 col-sm-6 px-2 mb-4\">\n            <div class=\"bg-secondary h-100 rounded-3 p-4 text-center\">\n                <h3 class=\"fs-sm text-muted\">##Credit##</h3>\n                <p class=\"h2 mb-2 text-success\">{{calculateCurrency(transactions.total?.credit)}}</p>\n            </div>\n        </div>\n        <div class=\"col-md-4 col-sm-12 px-2 mb-4\">\n            <div class=\"bg-secondary h-100 rounded-3 p-4 text-center\">\n                <h3 class=\"fs-sm text-muted\">##Balance##</h3>\n                <p class=\"h2 mb-2 text-secondary\">{{calculateCurrency(transactions.total?.balance)}}</p>\n            </div>\n        </div>\n    </template>\n</div>\n<div class=\"mb-4 col-md-8\">\n    <label class=\"form-label\">##Date_Range##</label>\n    <div class=\"input-group\">\n        <span class=\"input-group-text\">\n            <i class=\"ci-calendar\"></i>\n        </span>\n        <input ref=\"datepicker\" @change=\"dateChanged\" class=\"form-control date-picker date-range\"\n               type=\"text\" placeholder=\"##From##\"\n               data-datepicker-options='{\"altInput\": true, \"altFormat\": \"F j, Y\", \"dateFormat\": \"Y-m-d\"}'\n               data-linked-input=\"#end-date\">\n        <input class=\"form-control date-picker\" type=\"text\" placeholder=\"##To##\"\n               data-datepicker-options='{\"altInput\": true, \"altFormat\": \"F j, Y\", \"dateFormat\": \"Y-m-d\"}'\n               id=\"end-date\">\n    </div>\n</div>\n<div class=\"table-responsive fs-md mb-4 mt-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th>##TransactionDate##</th>\n                <th class=\"text-center\">##Code##</th>\n                <th class=\"text-center\">##Notes##</th>\n                <th class=\"text-end\">##Debit##</th>\n                <th class=\"text-end\">##Credit##</th>\n                <th class=\"text-end\">##ProgressiveBalance##</th>\n                <th class=\"text-center\"></th>\n            </tr>\n        </thead>\n        <tbody v-if=\"transactions !=null\">\n            <tr>\n                <td></td>\n                <td></td>\n                <td class=\"text-center\">##AccountBalanceTransfer##</td>\n                <td></td>\n                <td></td>\n                <td class=\"py-3 text-end\">\n                    <span v-if=\"!isLoading && transactions?.forward != null\">{{calculateCurrency(transactions?.forward?.balance)}}</span>\n                </td>\n                <td></td>\n            </tr>\n            <tr v-for=\"(transaction, index) in transactions?.lines\">\n                <template v-if=\"transaction.code!=0\">\n                    <td class=\"py-3\">{{formatDate(transaction.transactionDate)}}</td>\n                    <td class=\"py-3\">{{transaction.code}}</td>\n                    <td class=\"py-3 text-center\">{{transaction.notes}}</td>\n                    <td class=\"py-3 text-end\">\n                        <span class=\"py-3 end\">{{calculateCurrency(transaction.debit)}}</span>\n                    </td>\n                    <td class=\"py-3 text-end\">\n                        <span>{{calculateCurrency(transaction.credit)}}</span>\n                    </td>\n                    <td class=\"py-3 text-end\">\n                        <span>{{calculateCurrency(transaction.progressiveBalance)}}</span>\n                    </td>\n                    <td class=\"py-3 text-center\">\n                        <a class=\"btn btn-primary btn-sm\" v-if=\"transaction?.invoiceUrl != null\"\n                           :href=\"transaction.invoiceUrl\" target=\"_blank\">##Invoice##</a>\n                    </td>\n                </template>\n            </tr>\n        </tbody>\n        <tbody v-if=\"transactions == null\">\n            <tr>\n                <td class=\"text-center\" colspan=\"7\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && transactions != null && transactions.length === 0\">\n                        <i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"mt-4\" v-if=\"this.transactions != null && this.transactions.length > 0\"\n         class=\"d-flex justify-content-center\">\n        <button v-if=\"showLoadMore\" type=\"button\" class=\"btn btn-outline-primary btn-sm\"\n                @click=\"loadmore\">\n            ##LoadMore##\n        </button>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "Balance",
        "Value": "Balance",
        "Translation": {
          "EL": "Υπόλοιπο",
          "EN": "Balance",
          "RO": "Sold"
        }
      },
      {
        "Key": "Credit",
        "Value": "Credit",
        "Translation": {
          "EL": "Πίστωση",
          "EN": "Credit",
          "RO": "Credit"
        }
      },
      {
        "Key": "Debit",
        "Value": "Debit",
        "Translation": {
          "EL": "Χρέωση",
          "EN": "Debit",
          "RO": "Debit"
        }
      },
      {
        "Key": "Date_Range",
        "Value": "Date Range",
        "Translation": {
          "EL": "Επιλέξτε εύρος ημερομηνιών",
          "EN": "Select date range",
          "RO": "Selectează perioada"
        }
      },
      {
        "Key": "TransactionDate",
        "Value": "Transaction date",
        "Translation": {
          "EL": "Ημ/νία Συναλλαγής",
          "EN": "Transaction date",
          "RO": "Data tranzacţiei"
        }
      },
      {
        "Key": "Code",
        "Value": "Code",
        "Translation": {
          "EL": "Κωδικός",
          "EN": "Code",
          "RO": "Cod"
        }
      },
      {
        "Key": "Notes",
        "Value": "Notes",
        "Translation": {
          "EL": "Σημειώσεις",
          "EN": "Notes",
          "RO": "Observaţii"
        }
      },
      {
        "Key": "ProgressiveBalance",
        "Value": "ProgressiveBalance",
        "Translation": {
          "EL": "Προοδευτικό Υπόλοιπο",
          "EN": "Progressive Balance",
          "RO": "Sold progresiv"
        }
      },
      {
        "Key": "AccountBalanceTransfer",
        "Value": "AccountBalanceTransfer",
        "Translation": {
          "EL": "Εκ Μεταφοράς Υπόλοιπο",
          "EN": "Account Balance Transfer",
          "RO": "Balanţa transferată"
        }
      },
      {
        "Key": "Invoice",
        "Value": "Invoice",
        "Translation": {
          "EL": "Παραστατικό",
          "EN": "Invoice",
          "RO": "Factură"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Φόρτωση",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "NoResults",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results found",
          "RO": "Nu au fost găsite rezultate"
        }
      },
      {
        "Key": "From",
        "Value": "From",
        "Translation": {
          "EL": "Από",
          "EN": "From",
          "RO": "De la"
        }
      },
      {
        "Key": "To",
        "Value": "To",
        "Translation": {
          "EL": "Έως",
          "EN": "To",
          "RO": "Către"
        }
      }
    ],
    "Js": "const transactions = {\n    props:\n        {},\n    data() {\n        return {\n            userLocale: 'el-GR',\n            isLoading: false,\n\n        }\n    },\n    mounted() {\n        this.initDatePicker();\n        this.get_transactions();\n    },\n    methods: {\n        initDatePicker() {\n            if (this.$refs.datepicker.length === null) return;\n            let picker = this.$refs.datepicker;\n            var defaults = {\n                disableMobile: 'true'\n            };\n            var userOptions = void 0;\n            if (picker.dataset.datepickerOptions != undefined) userOptions = JSON.parse(picker.dataset.datepickerOptions);\n            var linkedInput = picker.classList.contains('date-range') ? {\n                \"plugins\": [new rangePlugin({\n                    input: picker.dataset.linkedInput\n                })]\n            } : '{}';\n            var options = this._objectSpread(this._objectSpread(this._objectSpread({}, defaults), linkedInput), userOptions);\n            var date = new Date();\n            var firstDay = new Date(date.getFullYear(), date.getMonth(), 01);\n            var dateString = new Date(firstDay.getTime() - (firstDay.getTimezoneOffset() * 60000))\n                .toISOString()\n                .split(\"T\")[0];\n            var todayString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n                .toISOString()\n                .split(\"T\")[0];\n            this.selectedDate = dateString;\n            this.selectedToDate = todayString;\n            options.defaultDate = [this.selectedDate, this.selectedToDate];\n            flatpickr(picker, options);\n\n        },\n\n        _objectSpread(target) {\n            let vm = this;\n            for (var i = 1; i < arguments.length; i++) {\n                var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? this.ownKeys(Object(source), !0).forEach(function (key) {\n                    vm._defineProperty(target, key, source[key]);\n                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : this.ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); });\n            } return target;\n        },\n        ownKeys(object, enumerableOnly) {\n            var keys = Object.keys(object);\n            if (Object.getOwnPropertySymbols) {\n                var symbols = Object.getOwnPropertySymbols(object);\n                enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols);\n            }\n            return keys;\n        },\n        _defineProperty(obj, key, value) {\n            if (key in obj) {\n                Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n            } else {\n                obj[key] = value;\n            }\n            return obj;\n        },\n        calculateCurrency(price) {\n            return price == null ? \"\" : this._calculateCurrency(price, 2);\n        },\n        formatDate(date) {\n            var newDate = new Date(date);\n            newDate = newDate.getDate() + '/' + (newDate.getMonth() + 1) + '/' + newDate.getFullYear()\n            return newDate;\n        },\n        dateChanged(ev) {\n            var dates = ev.target.value.split(\"to\")\n            this.selectedDate = dates[0]?.trim();\n            this.selectedToDate = dates[1]?.trim();\n            this.get_transactions();\n        },\n        get_transactions() {\n            this.isLoading = true;\n            this.transactions = null;\n            var params = {\n                dateFrom: this.selectedDate,\n                dateTo: this.selectedToDate\n            };\n            this._getTransactions(params, e => {\n                this.transactions = e.model;\n                this.isLoading = false;\n                // if (this.transactions != null && this.transactions.length === params.pageSize)\n                //     this.showLoadMore = true;\n            })\n        },\n        loadmore() {\n            this.currentPage += 1;\n            this.get_transactions();\n        },\n    }\n}\n\napp.component('transactions', {\n    extends: transactions,\n    template: '#transactions'\n});"
  },
  {
    "Name": "Users",
    "Html": "<!-- <div class=\"d-flex justify-content-between align-items-center pt-lg-2 pb-4 pb-lg-5 mb-lg-3\">\n    <div class=\"d-flex align-items-center\">\n    </div><a class=\"btn btn-primary btn-sm d-none d-lg-inline-block\" href=\"/account/logout\">\n        <i class=\"ci-sign-out me-2\"></i>##SignOut##\n    </a>\n</div> -->\n<form class=\"needs-validation row gx-4 gy-3 mb-5\" novalidate @submit.prevent=\"inviteUser\">\n    <h3 class=\"fs-lg mb-0\">##InviteUser##</h3>\n    <div class=\"col-md-4\">\n        <label class=\"form-label\" for=\"invite-email\">##Email##</label>\n        <input type=\"email\" id=\"invite-email\" class=\"form-control\" required v-model=\"inviteEmail\">\n        <div v-if=\"this.emailError\" class=\"text-danger fs-sm mb-2 mt-2\">##EmailIsNotValid##</div>\n        <div v-if=\"this.inviteError\" class=\"text-danger fs-sm mb-2 mt-2\">##UserExists##</div>\n    </div>\n    <div class=\"col-md-4\">\n        <label class=\"form-label\" for=\"invite-role\">##SelectRole##</label>\n        <select class=\"form-select\" id=\"invite-role\" v-model=\"selectedInviteRole\">\n            <option v-if=\" this.user!== null && this.user.customerRoleId === 'admin'\" value=\"admin\">\n                ##Admin##\n            </option>\n            <option v-for=\"role in customerRoles\" :value=\"role.id\">{{role.name}}</option>\n        </select>\n    </div>\n    <div v-if=\"this.customer !== null && this.customer.branches !== null && this.customer.branches.length >= 1\"\n         class=\"col-md-4\">\n        <label class=\"form-label\" for=\"invite-branch\">##SelectBranch##</label>\n        <select class=\"form-select\" id=\"invite-branch\" v-model=\"selectedInviteBranch\" multiple size=\"3\">\n            <option v-for=\"branch in this.customer.branches\" :value=\"branch.id\">{{branch.name}}</option>\n        </select>\n        <div v-if=\"this.inviteBranchError\" class=\"text-danger fs-sm mb-2 mt-2\">##ErrorSelectBranch##</div>\n    </div>\n    <div class=\"d-flex flex-wrap justify-content-between align-items-center\">\n        <button class=\"btn btn-primary btn-sm mt-3 mt-sm-0\" type=\"submit\">\n            ##Invite##\n            <span v-show=\"inviteLoading\" class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n        </button>\n    </div>\n</form>\n<div class=\"table-responsive fs-md mb-4\">\n    <table class=\"table table-hover mb-0\">\n        <thead>\n            <tr>\n                <th>##Name##</th>\n                <th>##Email##</th>\n                <th>##Role##</th>\n                <th class=\"text-end\"></th>\n            </tr>\n        </thead>\n        <tbody v-if=\"users.length > 0\">\n            <tr v-for=\"user in users\" class=\"cursor-pointer\">\n                <td class=\"py-3\">{{user.firstName}} {{user.lastName}}</td>\n                <td class=\"py-3\">{{user.email}}</td>\n                <td class=\"py-3\">\n                    {{\nuser.customerRoleId === \"admin\" ? \"##Admin##\" :\n                    this.getRole(user.customerRoleId)\n                    }}\n                </td>\n                <td class=\"py-3 text-end\">\n                    <div class=\"btn-group dropdown\">\n                        <button type=\"button\" class=\"btn btn-sm btn-outline-primary dropdown-toggle\"\n                                data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            ##Actions##\n                        </button>\n                        <div class=\"dropdown-menu\">\n                            <a @click.prevent=\"handleEditRoleModal(user)\" href=\"#\"\n                               class=\"dropdown-item\">##EditRole##</a>\n                            <a @click.prevent=\"handleDeleteModal(user)\" href=\"#\"\n                               class=\"dropdown-item\">##Delete##</a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n        <tbody v-if=\"users == null || users.length === 0\">\n            <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                    <div v-bind:class=\"{'d-none': !isLoading}\" class=\"spinner-border\" role=\"status\">\n                        <span class=\"visually-hidden\">##Loading##...</span>\n                    </div>\n                    <div v-show=\"!isLoading && totalCount === 0\">\n                        <i class=\"ci-eye-off opacity-60 me-2\"></i>##NoResults##\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<nav v-if=\"users!=null && users.length>0 && pageCount> 1\" class=\"d-flex justify-content-between pt-2\"\n     aria-label=\"Page navigation\">\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">\n                <i class=\"ci-arrow-left me-2\"></i>##Prev##\n            </a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n\n        <li v-if=\"ShowFirstPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(1)\">1</a>\n        </li>\n        <li v-if=\"ShowPreviousPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowPreviousPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"prevPage()\">{{PreviousPage}}</a>\n        </li>\n\n        <li class=\"page-item active d-none d-sm-block\" aria-current=\"page\">\n            <span class=\"page-link\">{{currentPage}} <span class=\"visually-hidden\">(current)</span></span>\n        </li>\n\n        <li v-if=\"ShowNextPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"nextPage()\">{{NextPage}}</a>\n        </li>\n        <li v-if=\"ShowNextPage\">\n            <div class=\"p-1\">...</div>\n        </li>\n        <li v-if=\"ShowLastPage\" class=\"page-item d-none d-sm-block\">\n            <a class=\"page-link\" href=\"#\" v-on:click.prevent=\"pagination(LastPage)\">{{LastPage}}</a>\n        </li>\n    </ul>\n    <ul class=\"pagination\">\n        <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\"\n               v-on:click.prevent=\"nextPage()\">##Next##<i class=\"ci-arrow-right ms-2\"></i></a>\n        </li>\n    </ul>\n</nav>\n<div ref=\"deleteModal\" class=\"modal fade\" v-bind:class=\"{show: showDeleteModal}\" id=\"delete-user\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">##ConfirmUserDelete##</h5>\n                <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n                        @click=\"closeDeleteModal\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <p class=\"fs-sm\">##AreYouSureYouWantToDeleteUser##</p>\n                <div v-if=\"this.roleNotPermittedError\" class=\"text-danger fs-sm mb-2 mt-2\">\n                    ##OperationNotPermitted##\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button @click=\"closeDeleteModal\" class=\"btn btn-secondary btn-sm\">##Cancel##</button>\n                <button @click=\"deleteUser\" class=\"btn btn-danger btn-shadow btn-sm\">\n                    ##Delete##\n                    <span v-show=\"deleteLoading\" class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n<div ref=\"selectRole\" class=\"modal fade\" v-bind:class=\"{show: showSelectRoleModal}\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">##EditRole##</h5>\n                <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n                        @click=\"closeSelectRoleModal\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <select class=\"form-select\" id=\"select-role\" v-model=\"selectedRole\">\n                    <option value=\"admin\">##Admin##</option>\n                    <option v-for=\"role in customerRoles\" :value=\"role.id\">{{role.name}}</option>\n                </select>\n                <div v-if=\"this.roleNotPermittedError\" class=\"text-danger fs-sm mb-2 mt-2\">\n                    ##OperationNotPermitted##\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button @click=\"closeSelectRoleModal\" class=\"btn btn-secondary btn-sm\">##Cancel##</button>\n                <button @click=\"updateUser\" class=\"btn btn-primary btn-shadow btn-sm\">\n                    ##Save##\n                    <span v-show=\"updateLoading\" class=\"mx-2 spinner-border spinner-border-sm text-white\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>",
    "Translations": [
      {
        "Key": "InviteUser",
        "Value": "InviteUser",
        "Translation": {
          "EL": "Πρόσκληση χρήστη",
          "EN": "Invite user",
          "RO": "Invitaţi utilizator"
        }
      },
      {
        "Key": "Email",
        "Value": "Email",
        "Translation": {
          "EL": "Email",
          "EN": "Email",
          "RO": "Email"
        }
      },
      {
        "Key": "EmailIsNotValid",
        "Value": "EmailIsNotValid",
        "Translation": {
          "EL": "Το email δεν είναι σωστό",
          "EN": "This is not a valid email",
          "RO": "Această adresă de email nu este validă"
        }
      },
      {
        "Key": "UserExists",
        "Value": "UserExists",
        "Translation": {
          "EL": "Ο χρήστης υπάρχει ήδη",
          "EN": "User already exists",
          "RO": "Utilizatorul există deja"
        }
      },
      {
        "Key": "SelectRole",
        "Value": "SelectRole",
        "Translation": {
          "EL": "Επιλογή ρόλου",
          "EN": "Select role",
          "RO": "Selectează rol"
        }
      },
      {
        "Key": "Admin",
        "Value": "Admin",
        "Translation": {
          "EL": "Διαχειριστής",
          "EN": "Admin",
          "RO": "Admministrator"
        }
      },
      {
        "Key": "SelectBranch",
        "Value": "Select Branch",
        "Translation": {
          "EL": "Επιλέξτε καταστήματα",
          "EN": "Select branches",
          "RO": "Selectează filială"
        }
      },
      {
        "Key": "ErrorSelectBranch",
        "Value": "Error Select Branch",
        "Translation": {
          "EL": "Επιλέξτε ένα ή περισσότερα καταστήματα",
          "EN": "Please select one or more branches",
          "RO": "Selectează una sau mai multe filiale"
        }
      },
      {
        "Key": "Invite",
        "Value": "Invite",
        "Translation": {
          "EL": "Προσκάλεσε",
          "EN": "Invite",
          "RO": "Invită"
        }
      },
      {
        "Key": "Role",
        "Value": "Role",
        "Translation": {
          "EL": "Ρόλος",
          "EN": "Role",
          "RO": "Rol"
        }
      },
      {
        "Key": "EditRole",
        "Value": "EditRole",
        "Translation": {
          "EL": "Αλλαγή ρόλου",
          "EN": "Edit role",
          "RO": "Editează rol"
        }
      },
      {
        "Key": "Actions",
        "Value": "Actions",
        "Translation": {
          "EL": "Ενέργειες",
          "EN": "Actions",
          "RO": "Acţiuni"
        }
      },
      {
        "Key": "Delete",
        "Value": "Delete",
        "Translation": {
          "EL": "Διαγραφή",
          "EN": "Delete",
          "RO": "Şterge"
        }
      },
      {
        "Key": "Loading",
        "Value": "Loading",
        "Translation": {
          "EL": "Loading",
          "EN": "Loading",
          "RO": "Încărcare"
        }
      },
      {
        "Key": "NoResults",
        "Value": "No results",
        "Translation": {
          "EL": "Δεν βρέθηκαν αποτελέσματα",
          "EN": "No results",
          "RO": "Niciun rezultat"
        }
      },
      {
        "Key": "Prev",
        "Value": "Prev",
        "Translation": {
          "EL": "",
          "EN": "Prev",
          "RO": "Anterior"
        }
      },
      {
        "Key": "Next",
        "Value": "Next",
        "Translation": {
          "EL": "",
          "EN": "Next",
          "RO": "Următorul"
        }
      },
      {
        "Key": "ConfirmUserDelete",
        "Value": "ConfirmUserDelete",
        "Translation": {
          "EL": "Επιβεβαιώστε την διαγραφή του χρήστη",
          "EN": "Confirm user deletion",
          "RO": "Confirmă ştergerea utilizatorului"
        }
      },
      {
        "Key": "AreYouSureYouWantToDeleteUser",
        "Value": "AreYouSureYouWantToDeleteUser",
        "Translation": {
          "EL": "Είστε σίγουροι ότι θέλετε να διαγράψετε τον χρήστη;",
          "EN": "Are you sure you want to delete user?",
          "RO": "Eşti sigur că doreşti ştergerea utilizatorului"
        }
      },
      {
        "Key": "OperationNotPermitted",
        "Value": "Operation Not Permitted",
        "Translation": {
          "EL": "Δεν έχετε το δικαίωμα για αυτή την ενέργεια",
          "EN": "You are not permitted to perform this action",
          "RO": "Nu eşti autorizat pentru această acţiune"
        }
      },
      {
        "Key": "Cancel",
        "Value": "Cancel",
        "Translation": {
          "EL": "Ακύρωση",
          "EN": "Cancel",
          "RO": "Anulare"
        }
      },
      {
        "Key": "Save",
        "Value": "Save",
        "Translation": {
          "EL": "Αποθήκευση",
          "EN": "Save",
          "RO": "Salvează"
        }
      },
      {
        "Key": "Name",
        "Value": "Name",
        "Translation": {
          "EL": "Όνομα",
          "EN": "Name",
          "RO": "Nume"
        }
      }
    ],
    "Js": "const users = {\n    props:\n        {},\n    data() {\n        return {\n            globalModel: this._global,\n            emailError: false,\n            inviteError: false,\n            inviteLoading: false,\n            customer: null,\n            inviteEmail: \"\",\n            selectedInviteRole: null,\n            selectedInviteBranch: null,\n            user: null,\n            users: [],\n            selectedRole: null,\n            updateLoading: false,\n            isLoading: false,\n            customerRoles: [],\n            currentPage: 1,\n            pageCount: null,\n            selectedUser: null,\n\n        }\n    },\n    mounted() {\n        if (this.globalModel.operationMode === 'Retail') {\n            this._getRetailUserProfile(e => {\n                this.user = e.user;\n            })\n        }\n        else {\n            this._getUserProfile(e => {\n                this.user = e.user;\n                this.customer = e.customer;\n            })\n        }\n        this.get_users();\n    },\n    methods: {\n        async get_users() {\n            this.isLoading = true;\n            const roles = await this._getCustomerRolesAsync();\n            this.customerRoles = roles;\n\n            let params = {\n                page: this.currentPage,\n                pageSize: 10\n            }\n\n            const { data } = await this._getUsersAsync(params);\n            this.users = data.item1;\n            this.currentPage = data.item2.pageNumber;\n            this.pageCount = data.item2.numberOfPages;\n        },\n        inviteUser() {\n            this.inviteLoading = true;\n            var hasErrors = false;\n            this.inviteError = false;\n            this.emailError = false;\n            if (this.customer.branches.length === 1) {\n                this.selectedInviteBranch = [this.customer.branches[0].id]\n            }\n            var input = document.getElementById(\"invite-email\");\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (!re.test(this.inviteEmail)) {\n                // this.emailError = 0;//this.login.InvalidEmailText;\n                input.setCustomValidity('invalid');\n                this.emailError = true;\n                hasErrors = true;\n            } else {\n                this.emailError = false;\n                input.setCustomValidity('');\n            }\n            if (this.selectedInviteBranch == null && this.customer.branches.length >= 1) {\n                hasErrors = true;\n                this.inviteBranchError = true;\n            } else {\n                this.inviteBranchError = false;\n            }\n            input.reportValidity();\n            if (hasErrors) {\n                this.inviteLoading = false;\n                return;\n            }\n\n            var data = [\n                {\n                    \"Email\": this.inviteEmail,\n                    \"CustomerRoleId\": this.selectedInviteRole,\n                    \"IsActive\": true,\n                    \"BranchIds\": this.selectedInviteBranch\n                }\n            ];\n            this._sendUserInvitations(data, this.onSuccessInvite, this.onErrorInvite);\n\n        },\n        getRole(id) {\n            var role = this.customerRoles.find(r => r.id === id);\n            if (role !== null) {\n                return role.name;\n            } else {\n                return \"\";\n            }\n        },\n        closeSelectRoleModal() {\n            this.showSelectRoleModal = false;\n            this.selectedUser = null;\n            this.selectedRole = null;\n            this.roleNotPermittedError = false;\n            this.$refs.selectRole.style.display = \"\";\n            document.querySelector('.modal-backdrop').remove();\n        },\n        updateUser() {\n            this.updateLoading = true;\n            this.selectedUser.customerRoleId = this.selectedRole;\n            this._updateUser(this.selectedUser, success => {\n                this.get_users();\n                this.closeSelectRoleModal();\n                this.updateLoading = false;\n            }, error => {\n                if (error.response.status === 405 || error.response.status === 401 || error.response.status === 403) {\n                    this.updateLoading = false;\n                    this.roleNotPermittedError = true;\n                    this.get_users();\n                }\n            })\n        },\n        onSuccessInvite(e) {\n            this.selectedInviteRole = null;\n            this.inviteEmail = null;\n            this.inviteLoading = false;\n            this.get_users();\n        },\n        onErrorInvite(status, data) {\n            this.inviteError = true;\n            this.inviteLoading = false;\n        },\n        handleEditRoleModal(user) {\n            this.selectedUser = user;\n            this.selectedRole = user.customerRoleId;\n            this.showSelectRoleModal = true;\n            this.$refs.selectRole.style.display = \"block\";\n            var backdrop = document.createElement(\"div\");\n            backdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\");\n            document.body.appendChild(backdrop);\n        },\n        handleDeleteModal(user) {\n            this.selectedUser = user;\n            this.showDeleteModal = true;\n            var backdrop = document.createElement(\"div\");\n            backdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\");\n            document.body.appendChild(backdrop);\n            this.$refs.deleteModal.style.display = \"block\";\n\n        },\n        nextPage() {\n            if (this.currentPage + 1 <= this.pageCount)\n                this.pagination(this.currentPage + 1)\n\n        },\n        prevPage() {\n            if (this.currentPage - 1 > 0)\n                this.pagination(this.currentPage - 1)\n\n        },\n        pagination(page) {\n            this.currentPage = page;\n            this.get_users();\n        },\n    },\n    computed: {\n        FirstPage: {\n            get() {\n                return 1;\n            }\n        },\n        NextPage: {\n\n            get() {\n                return this.currentPage + 1;\n            }\n        },\n        PreviousPage: {\n            get() {\n                return this.currentPage - 1;\n            }\n        },\n        LastPage: {\n            get() {\n                return this.pageCount;\n            }\n        },\n        ShowFirstPage: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n        ShowLastPage: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowNextPage: {\n            get() {\n\n                return this.currentPage < this.LastPage - 1;\n            }\n        },\n        ShowPreviousPage: {\n            get() {\n                return this.currentPage > 2;\n            }\n        },\n        ShowNext: {\n            get() {\n                return this.currentPage < this.LastPage;\n            }\n        },\n        ShowPrevious: {\n            get() {\n                return this.currentPage > 1;\n            }\n        },\n    }\n}\n\napp.component('users', {\n    extends: users,\n    template: '#users'\n});"
  },
  {
    "Name": "custom_billing",
    "Html": "<div class=\"row mb-4\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"col-sm-12\">\r\n            <h2 class=\"h6 pb-3 border-bottom\">##Billing## </h2>\r\n            <ul class=\"list-unstyled fs-sm\">\r\n                <li><span class=\"fw-medium\">##Client##:&nbsp;</span>{{this.customerData.name}}</li>\r\n                <li>\r\n                    <span class=\"fw-medium\">##Address##:&nbsp;</span>{{BillingAddress.address1 }}, {{BillingAddress.city }}, {{BillingAddress.postalCode}}, {{BillingAddress.country}}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\">##Shipping_address##</h2>\r\n                    <form novalidate _lpchecked=\"1\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label v-if=\"this.checkout.addresses?.length===1\" class=\"form-label\" for=\"checkout-branch\">##Name##</label>\r\n                                    <label v-else class=\"form-label\" for=\"checkout-branch\">##Addresses##</label>\r\n                                    <input v-if=\"this.checkout.addresses?.length===1\" class=\"form-control\" type=\"text\" :value=\"this.checkout.addresses[0]?.name\" readonly />\r\n                                    <select v-else v-model=\"SelectedBranch\" class=\"form-select\" id=\"checkout-branch\">\r\n                                        <option v-for=\"item in checkout.addresses\" v-bind:key=\"item\" v-bind:value=\"item\">{{item.name}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-address1\">##Address1##</label>\r\n                                    <input v-model=\"B_Address1\" :class=\"ValidationClassB_Address1\" id=\"checkout-address1\" required>\r\n                                    <p v-if=\"this.B_Address1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_Address1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\"> ##Address2##</label>\r\n                                    <input placeholder=\"##Second_street_name##\" type=\"text\" :class=\"ValidationClassB_Address2\" v-model=\"B_Address2\" id=\"checkout-address2\">\r\n                                    <!--<p class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">{{this.B_Address2Error}}</p>-->\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-city\">##Town_City##</label>\r\n                                    <input v-model=\"B_City\" :class=\"ValidationClassB_City\" id=\"checkout-city\">\r\n                                    <p v-if=\"this.B_CityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_CityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-state\">##State##</label>\r\n                                    <input v-model=\"B_State\" :class=\"ValidationClassB_State\" type=\"text\" id=\"checkout-state\">\r\n                                    <p v-if=\"this.B_StateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_StateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-county\">##Country##</label>\r\n                                    <!-- <select v-model=\"B_Country\" @click=\"loadCountries()\" class=\"form-select\" id=\"selected-country\">\r\n                                        <option v-if=\"countries === null\" selected v-bind:value=\"B_Country\">{{customerData.address.country}}</option>\r\n                                        <option v-if=\"countries!== null\" v-for=\"item in countries\" v-bind:key=\"item.code\" v-bind:value=\"item.code\">{{item.name}}</option>\r\n                                    </select> -->\r\n                                    <input v-model=\"B_Country\" :class=\"ValidationClassB_Country\" id=\"checkout-county\">\r\n                                    <p v-if=\"this.B_CountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_CountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-zip\">##Postcode_ZIP##</label>\r\n                                    <input v-model=\"B_ZIP\" :class=\"ValidationClassB_ZIP\" type=\"text\" id=\"checkout-zip\">\r\n                                    <p v-if=\"this.B_ZIPError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_ZIPError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>",
    "Translations": [],
    "Js": "const custom_billing  = {\n    props:\n        {\n            model:Object,\n        },\n    data() {\n        return {\n            checkout:null,\n            customerData: null,\n            billingAddress: null,\n            checkoutData: {\n                notes: \"\"\n            },\n            selectedBranch: null,\n            errorCode1: \"ErrorEmptyField\",\n            errorCode2: \"ErrorInputSize\",\n            ValidationClassS_Address1: \"form-control\",\n            ValidationClassS_Address2: \"form-control\",\n            ValidationClassS_State: \"form-control\",\n            ValidationClassS_City: \"form-control\",\n            ValidationClassS_Country: \"form-control\",\n            ValidationClassS_ZIP: \"form-control\",\n            B_Address1Error: \"\",\n            B_Address2Error: \"\",\n            B_StateError: \"\",\n            B_CityError: \"\",\n            B_ZIPError: \"\",\n            B_CountryError: \"\",\n            ValidationClassB_Address1: \"form-control\",\n            ValidationClassB_Address2: \"form-control\",\n            ValidationClassB_State: \"form-control\",\n            ValidationClassB_City: \"form-control\",\n            ValidationClassB_Country: \"form-control\", \n            ValidationClassB_ZIP: \"form-control\",\n            carriers: null,\n            isCarriersLoading: false,\n            checkout : this.model \n\n        }\n        },\n    mounted(){\n        this.customerData = this.checkout.customer;\n        this.billingAddress = this.checkout.billingAddress;\n        this.selectedBranch = this.checkout.addresses[0];\n        this.shippingAddress = this.selectedBranch.address;\n        // this.checkout.customerBranchId = this.selectedBranch.id;\n\n    },\n    methods:{\n        // checkValid() {\n        //     debugger;\n        //     if (this.shippingSameAsBilling) {\n        //         if ((this.B_Address1Error == \"\" && this.B_StateError == \"\" && this.B_CityError == \"\" && this.B_ZIPError == \"\" && this.B_CountryError == \"\")\n        //             && (this.B_Address1 && this.B_State && this.B_City && this.B_ZIP && this.B_Country)) {\n\n        //             return true;\n        //         }\n        //         else {\n\n\n        //             this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n        //             this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n        //             this.B_State = this.B_State ? this.B_State : \"\";\n        //             this.B_City = this.B_City ? this.B_City : \"\";\n        //             this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n        //             this.B_Country = this.B_Country ? this.B_Country : \"\";\n        //             return false;\n        //         }\n        //     }\n        //     else {\n        //         if ((this.S_Address1Error == \"\" && this.S_StateError == \"\" && this.S_CityError == \"\" && this.S_ZIPError == \"\" && this.S_CountryError == \"\")\n        //             && (this.S_Address1 && this.S_State && this.S_City && this.S_ZIP && this.S_Country))\n\n        //             return true;\n        //         else {\n\n\n        //             this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n        //             this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n        //             this.B_State = this.B_State ? this.B_State : \"\";\n        //             this.B_City = this.B_City ? this.B_City : \"\";\n        //             this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n        //             this.B_Country = this.B_Country ? this.B_Country : \"\";\n\n\n        //             this.S_Address1 = this.S_Address1 ? this.S_Address1 : \"\";\n        //             this.S_Address2 = this.S_Address2 ? this.S_Address2 : \"\";\n        //             this.S_State = this.S_State ? this.S_State : \"\";\n        //             this.S_City = this.S_City ? this.S_City : \"\";\n        //             this.S_ZIP = this.S_ZIP ? this.S_ZIP : \"\";\n        //             this.S_Country = this.S_Country ? this.S_Country : \"\";\n        //             return false;\n        //         }\n\n        //     }\n        //     return true;\n            \n        // },\n        checkValid() {\n            this.checkout.customerBranchId = this.selectedBranch.id !== this.customerData.id ? this.selectedBranch.id : null;\n            debugger;\n            if (this.shippingSameAsBilling) {\n                if (\n                    this.B_Address1Error === \"\" &&\n                    this.B_StateError === \"\" &&\n                    this.B_CityError === \"\" &&\n                    this.B_ZIPError === \"\" &&\n                    this.B_CountryError === \"\" &&\n                    this.B_Address1 &&\n                    this.B_State &&\n                    this.B_City &&\n                    this.B_ZIP && \n                    this.B_Country\n                ) {\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2; \n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return true;\n                } else {\n                    this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n                    this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n                    this.B_State = this.B_State ? this.B_State : \"\";\n                    this.B_City = this.B_City ? this.B_City : \"\";\n                    this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n                    this.B_Country = this.B_Country ? this.B_Country : \"\";\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return false;\n                }\n            } else {\n                if (\n                    this.S_Address1Error === \"\" &&\n                    this.S_StateError === \"\" &&\n                    this.S_CityError === \"\" &&\n                    this.S_ZIPError === \"\" &&\n                    this.S_CountryError === \"\" &&\n                    this.S_Address1 &&\n                    this.S_State &&\n                    this.S_City &&\n                    this.S_ZIP &&\n                    this.S_Country\n                    \n                ) {\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return true;\n                } else {\n                    this.B_Address1 = this.B_Address1 ;\n                    this.B_Address2 = this.B_Address2 ;\n                    this.B_State = this.B_State ;\n                    this.B_City = this.B_City ;\n                    this.B_ZIP = this.B_ZIP ;\n                    this.B_Country = this.B_Country;\n        \n                    // this.S_Address1 = this.S_Address1 ? this.S_Address1 : \"\";\n                    // this.S_Address2 = this.S_Address2 ? this.S_Address2 : \"\";\n                    // this.S_State = this.S_State ? this.S_State : \"\";\n                    // this.S_City = this.S_City ? this.S_City : \"\";\n                    // this.S_ZIP = this.S_ZIP ? this.S_ZIP : \"\";\n                    // this.S_Country = this.S_Country ? this.S_Country : \"\";\n                    this.shippingAddress.address1 = this.B_Address1;\n                    this.shippingAddress.address2 = this.B_Address2;\n                    this.shippingAddress.city = this.B_City;\n                    this.shippingAddress.country = this.B_Country;\n                    this.shippingAddress.postalCode = this.B_ZIP;\n                    this.shippingAddress.state = this.B_State;\n                    this.checkout.shippingAddress = this.shippingAddress;\n\n                    this.$emit('update:checkout', this.checkout);\n                    return true;\n                }\n                \n            }\n            \n        },\n        // checkValid() {\n        //     debugger;\n        //     //const isBilling = this.shiTTingSameAsBilling;\n        //     const bFields = [\"B_Address1\", \"B_Address2\", \"B_State\", \"B_City\", \"B_ZIP\", \"B_Country\"];\n        //     const sFields = [\"S_Address1\", \"S_Address2\", \"S_State\", \"S_City\", \"S_ZIP\", \"S_Country\"];\n        //     const addressFields =  [...bFields, ...sFields];\n            \n        //     const isValid = addressFields.every(field => !this[`${field}Error`] && this[field]);\n        \n        //     if (isValid) {\n        //         addressFields.forEach(field => {\n        //             this.shippingAddress[field.replace(isBilling ? \"B_\" : \"S_\", \"\")] = this[field] || \"\";\n        //         });\n        \n        //         this.checkout.shippingAddress = this.shippingAddress;\n        //         this.$emit('update:checkout', this.checkout);\n        //     }\n            \n        //     return isValid;\n        // },\n        \n        \n        \n        customerIsWithoutBranches() {\n            return this.customerData.branches == undefined || this.customerData.branches == null || this.customerData.branches.lenght == 0;\n        },\n    },\n    computed: {\n        Checkout:{\n            get() {\n                return this.checkout; \n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n        BillingAddress: {\n            get() {\n                this.customerData.billingAddress = this.billingAddress;\n                return this.billingAddress;\n            },\n            set(newVal) {\n                this.billingAddress = newVal;\n            }\n        },\n        Branches: {\n            get() {\n                return this.checkoutData.customer.branches;\n            }\n        },\n        SelectedBranch: {\n            get() {\n                return this.selectedBranch;\n            },\n            set(newVal) {\n                this.selectedBranch = newVal;\n            }\n        },\n        B_Address1: {\n            get() { return this.selectedBranch?.address?.address1 }\n            ,\n            set(val) {\n                this.selectedBranch.address.address1 = val;\n                if (val.length == 0) {\n                    this.ValidationClassB_Address1 = \"form-control is-invalid\";\n                    this.B_Address1Error = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassB_Address1 = \"form-control is-valid\";\n                    this.B_Address1Error = \"\";\n                } else {\n                    this.ValidationClassB_Address1 = \"form-control is-invalid\";\n                    this.B_Address1Error = this.errorCode2;\n                }\n            }\n        },\n        B_Address2: {\n            get() { return this.selectedBranch?.address?.address2 }\n            ,\n            set(val) {\n                this.selectedBranch.address.address2 = val;\n                /* if (val.length == 0) {\n                     this.ValidationClassB_Address2 = \"form-control  is-invalid\";\n                     this.B_Address2Error = this.translations[\"Input_no_empty\"];\n                 }\n                 else if (val.length < 50 && val.length >= 5) {\n                     this.ValidationClassB_Address2 = \"form-control is-valid\";\n                     this.B_Address2Error = \"\";\n                 } else {\n                     this.ValidationClassB_Address2 = \"form-control is-invalid\";\n                     this.B_Address2Error = this.translations[\"Input_size\"];\n                 }*/\n            }\n        },\n\n        B_State: {\n            get() { return this.selectedBranch?.address?.state }\n            ,\n            set(val) {\n                this.selectedBranch.address.state = val;\n                if (val.length == 0) {\n                    this.ValidationClassB_State = \"form-control  is-invalid\";\n                    this.B_StateError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassB_State = \"form-control is-valid\";\n                    this.B_StateError = \"\";\n                } else {\n                    this.ValidationClassB_State = \"form-control is-invalid\";\n                    this.B_StateError = this.errorCode2;\n                }\n            }\n        },\n        B_City: {\n            get() { return this.selectedBranch?.address?.city }\n            ,\n            set(val) {\n                this.selectedBranch.address.city = val;\n                if (val.length == 0) {\n                    this.ValidationClassB_City = \"form-control  is-invalid\";\n                    this.B_CityError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassB_City = \"form-control is-valid\";\n                    this.B_CityError = \"\";\n                } else {\n                    this.ValidationClassB_City = \"form-control is-invalid\";\n                    this.B_CityError = this.errorCode2;\n                }\n            }\n        },\n        B_ZIP: {\n        \n            get() { return this.selectedBranch?.address?.postalCode }\n            ,\n            set(val) {\n                debugger; \n                this.selectedBranch.address.postalCode = val;\n                if (val.length == 0) {\n                    this.ValidationClassB_ZIP = \"form-control  is-invalid\";\n                    this.B_ZIPError = this.errorCode1;\n                }\n                else if (val.length == 5) {\n                    this.ValidationClassB_ZIP = \"form-control is-valid\";\n                    this.B_ZIPError = \"\";\n                } else {\n                    this.ValidationClassB_ZIP = \"form-control is-invalid\";\n                    this.B_ZIPError = this.errorCode2;\n                }\n            }\n        },\n\n\n        B_Country: {\n            get() { return this.selectedBranch?.address?.country }\n            ,\n            set(val) {\n                this.selectedBranch.address.country = val;\n                if (val.length == 0) {\n                    this.ValidationClassB_Country = \"form-control  is-invalid\";\n                    this.B_CountryError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 2) {\n                    this.ValidationClassB_Country = \"form-control is-valid\";\n                    this.B_CountryError = \"\";\n                } else {\n                    this.ValidationClassB_Country = \"form-control is-invalid\";\n                    this.B_CountryError = this.errorCode2;\n                }\n            }\n        },\n        S_Address1: {\n            get() { return this.shippingAddress.address1 }\n            ,\n            set(val) {\n                this.shippingAddress.address1 = val;\n                if (val.length == 0) {\n                    this.ValidationClassS_Address1 = \"form-control  is-invalid\";\n                    this.S_Address1Error = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_Address1 = \"form-control is-valid\";\n                    this.S_Address1Error = \"\";\n                } else {\n                    this.ValidationClassS_Address1 = \"form-control is-invalid\";\n                    this.S_Address1Error = this.errorCode2;\n                }\n            }\n        },\n        S_Address2: {\n            get() { return this.shippingAddress.address2 }\n            ,\n            set(val) {\n                this.shippingAddress.address2 = val;\n                /*if (val.length == 0) {\n                    this.ValidationClassS_Address2 = \"form-control  is-invalid\";\n                    this.S_Address2Error = this.translations[\"Input_no_empty\"];\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_Address2 = \"form-control is-valid\";\n                    this.S_Address2Error = \"\";\n                } else {\n                    this.ValidationClassS_Address2 = \"form-control is-invalid\";\n                    this.S_Address2Error = this.translations[\"Input_size\"];\n                }*/\n            }\n        },\n\n        S_State: {\n            get() { return this.shippingAddress.state }\n            ,\n            set(val) {\n                this.shippingAddress.state = val;\n                if (val.length == 0) {\n                    this.ValidationClassS_State = \"form-control  is-invalid\";\n                    this.S_StateError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_State = \"form-control is-valid\";\n                    this.S_StateError = \"\";\n                } else {\n                    this.ValidationClassS_State = \"form-control is-invalid\";\n                    this.S_StateError = this.errorCode2;\n                }\n            }\n        },\n        S_City: {\n            get() { return this.shippingAddress.city }\n            ,\n            set(val) {\n                this.shippingAddress.city = val;\n                if (val.length == 0) {\n                    this.ValidationClassS_City = \"form-control  is-invalid\";\n                    this.S_CityError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 5) {\n                    this.ValidationClassS_City = \"form-control is-valid\";\n                    this.S_CityError = \"\";\n                } else {\n                    this.ValidationClassS_City = \"form-control is-invalid\";\n                    this.S_CityError = this.errorCode2;\n                }\n            }\n        },\n        S_ZIP: {\n            get() { return this.shippingAddress.postalCode }\n            ,\n            set(val) {\n                this.shippingAddress.postalCode = val;\n                if (val.length == 0) {\n                    this.ValidationClassS_ZIP = \"form-control  is-invalid\";\n                    this.S_ZIPError = this.errorCode1;\n                }\n                else if (val.length == 5) {\n                    this.ValidationClassS_ZIP = \"form-control is-valid\";\n                    this.S_ZIPError = \"\";\n                } else {\n                    this.ValidationClassS_ZIP = \"form-control is-invalid\";\n                    this.S_ZIPError = this.errorCode2;\n                }\n            }\n        },\n\n\n        S_Country: {\n            get() { return this.shippingAddress.country }\n            ,\n            set(val) {\n                this.shippingAddress.country = val;\n                if (val.length == 0) {\n                    this.ValidationClassS_Country = \"form-control is-invalid\";\n                    this.S_CountryError = this.errorCode1;\n                }\n                else if (val.length < 50 && val.length >= 2) {\n                    this.ValidationClassS_Country = \"form-control is-valid\";\n                    this.S_CountryError = \"\";\n                } else {\n                    this.ValidationClassS_Country = \"form-control is-invalid\";\n                    this.S_CountryError = this.errorCode2;\n                }\n            }\n        },\n    }\n}\n\napp.component('custom_billing', {\n    extends: custom_billing,\n    template: '#custom_billing'\n});"
  },
  {
    "Name": "custom_billing_retail",
    "Html": "<div class=\"row mb-4\">\r\n<h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\">##Billing_address_Retail##</h2>\r\n                    <form novalidate _lpchecked=\"1\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label  class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-address1\">##Address1##</label>\r\n                                    <input v-model=\"C_Address1\" type=\"text\" :class=\"ValidationClassC_Address1\" id=\"checkout-address1\" required>\r\n                                    <p v-if=\"this.C_Address1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.C_Address1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\"> ##Address2##</label>\r\n                                    <input v-model=\"C_Address2\" type=\"text\" placeholder=\"##Second_street_name##\" type=\"text\" :class=\"ValidationClassC_Address2\" id=\"checkout-address2\">\r\n                                    <p v-if=\"this.C_Address2Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.C_Address2Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-city\">##Town_City##</label>\r\n                                    <input v-model=\"C_City\" :class=\"ValidationClassC_City\" id=\"checkout-city\">\r\n                                    <p v-if=\"this.C_CityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.C_CityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-state\">##State##</label>\r\n                                    <input v-model=\"C_State\" :class=\"ValidationClassC_State\" type=\"text\" id=\"checkout-state\">\r\n                                    <p v-if=\"this.C_StateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.C_StateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-county\">##Country##</label>\r\n                                    <!-- <select v-model=\"B_Country\" @click=\"loadCountries()\" class=\"form-select\" id=\"selected-country\">\r\n                                        <option v-if=\"countries === null\" selected v-bind:value=\"B_Country\">{{customerData.address.country}}</option>\r\n                                        <option v-if=\"countries!== null\" v-for=\"item in countries\" v-bind:key=\"item.code\" v-bind:value=\"item.code\">{{item.name}}</option>\r\n                                    </select> -->\r\n                                    <input v-model=\"C_Country\" :class=\"ValidationClassC_Country\" id=\"checkout-county\">\r\n                                    <p v-if=\"this.C_CountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.C_CountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-zip\">##Postcode_ZIP##</label>\r\n                                    <input v-model=\"C_ZIP\" :class=\"ValidationClassC_ZIP\" type=\"text\" id=\"checkout-zip\">\r\n                                    <p v-if=\"this.C_ZIPError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_ZIPError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-check form-switch mt-4 mb-4\">\r\n                            <input type=\"checkbox\" v-model=\"addressType\" @change=\"clearShippingFields\" class=\"form-check-input \" id=\"customSwitch1\">\r\n                            <label class=\"form-check-label\" for=\"customSwitch1\">Shipping same as Billing</label>\r\n                          </div>\r\n                    </form>\r\n\r\n\r\n<h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\" v-if=\"!addressType\">##Shipping_address_Retail##</h2>\r\n                    <form novalidate _lpchecked=\"1\" v-if=\"!addressType\" >\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label  class=\"form-label\" placeholder=\"##Street_name_and_building_number##\" for=\"checkout-address1\">##Address1##</label>\r\n                                    <input v-model=\"B_Address1\" type=\"text\" :class=\"ValidationClassB_Address1\" id=\"checkout-address1\" required>\r\n                                    <p v-if=\"this.B_Address1Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_Address1Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\"> ##Address2##</label>\r\n                                    <input v-model=\"B_Address2\" type=\"text\" placeholder=\"##Second_street_name##\" type=\"text\" :class=\"ValidationClassB_Address2\" id=\"checkout-address2\">\r\n                                    <p v-if=\"this.B_Address2Error === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_Address2Error === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-city\">##Town_City##</label>\r\n                                    <input v-model=\"B_City\" :class=\"ValidationClassB_City\" id=\"checkout-city\">\r\n                                    <p v-if=\"this.B_CityError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_CityError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-state\">##State##</label>\r\n                                    <input v-model=\"B_State\" :class=\"ValidationClassB_State\" type=\"text\" id=\"checkout-state\">\r\n                                    <p v-if=\"this.B_StateError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_StateError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-county\">##Country##</label>\r\n                                    <!-- <select v-model=\"B_Country\" @click=\"loadCountries()\" class=\"form-select\" id=\"selected-country\">\r\n                                        <option v-if=\"countries === null\" selected v-bind:value=\"B_Country\">{{customerData.address.country}}</option>\r\n                                        <option v-if=\"countries!== null\" v-for=\"item in countries\" v-bind:key=\"item.code\" v-bind:value=\"item.code\">{{item.name}}</option>\r\n                                    </select> -->\r\n                                    <input v-model=\"B_Country\" :class=\"ValidationClassB_Country\" id=\"checkout-county\">\r\n                                    <p v-if=\"this.B_CountryError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_CountryError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"mb-3\">\r\n                                    <label class=\"form-label\" for=\"checkout-zip\">##Postcode_ZIP##</label>\r\n                                    <input v-model=\"B_ZIP\" :class=\"ValidationClassB_ZIP\" type=\"text\" id=\"checkout-zip\">\r\n                                    <p v-if=\"this.B_ZIPError === this.errorCode1\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorEmptyField##</p>\r\n                                    <p v-else-if=\"this.B_ZIPError === this.errorCode2\" class=\"text-danger\" style=\"width: 100%; margin-top: 0.375rem; font-size: 0.75rem;\">##ErrorInputSize##</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>",
    "Translations": [],
    "Js": "const custom_billing_retail  = {\n    props:\n        {\n            model:Object,\n        },\n    data() {\n        return {\n            checkout:null,\n            customerData: null,\n            // billingAddress: null,\n            checkoutData: {\n                notes: \"\"\n            },\n            selectedBranch: null,\n            errorCode1: \"ErrorEmptyField\",\n            errorCode2: \"ErrorInputSize\",\n            ValidationClassS_Address1: \"form-control\",\n            ValidationClassS_Address2: \"form-control\",\n            ValidationClassS_State: \"form-control\",  \n            ValidationClassS_City: \"form-control\",\n            ValidationClassS_Country: \"form-control\",\n            ValidationClassS_ZIP: \"form-control\",\n            B_Address1Error: \"\",\n            B_Address2Error: \"\",\n            B_StateError: \"\",\n            B_CityError: \"\",\n            B_ZIPError: \"\",\n            B_CountryError: \"\",\n            C_Address1Error: \"\",\n            C_Address2Error: \"\",\n            C_StateError: \"\",\n            C_CityError: \"\",\n            C_ZIPError: \"\",\n            C_CountryError: \"\",\n            ValidationClassB_Address1: \"form-control\",\n            ValidationClassB_Address2: \"form-control\",\n            ValidationClassB_State: \"form-control\",\n            ValidationClassB_City: \"form-control\",\n            ValidationClassB_Country: \"form-control\",\n            ValidationClassB_ZIP: \"form-control\",\n            ValidationClassC_Address1: \"form-control\",\n            ValidationClassC_Address2: \"form-control\",\n            ValidationClassC_State: \"form-control\",\n            ValidationClassC_City: \"form-control\",\n            ValidationClassC_Country: \"form-control\",\n            ValidationClassC_ZIP: \"form-control\",\n            B_Address1: \"\",\n            B_Address2: \"\",\n            B_City : \"\",\n            B_State: \"\",\n            B_ZIP : \"\",\n            B_Country : \"\",\n            C_Address1: \"\",\n            C_Address2: \"\",\n            C_City : \"\",\n            C_State: \"\",\n            C_ZIP : \"\",\n            C_Country : \"\",\n            addressType: true,\n        }\n        },\n    mounted(){\n      this.checkout = this.model;\n      this.billingAddress = this.checkout.billingAddress;\n      this.billingAddress = {\n        address1 : \"\",\n        address2 : \"\",\n        city : \"\",\n        country : \"\",\n        postalCode : \"\",\n        state : \"\",\n      }\n      this.shippingAddress = this.checkout.shippingAddress;\n      this.shippingAddress = {\n        address1 : \"\",\n        address2 : \"\",\n        city : \"\",\n        country : \"\",\n        postalCode : \"\",\n        state : \"\",\n      }\n\n    },\n    methods:{\n        clearShippingFields(){\n            this.B_Address1 =\"\",\n            this.B_Address2 = \"\",\n            this.B_City = \"\",\n            this.B_State = \"\",\n            this.B_Zip = \"\",\n            this.B_Country = \"\"\n\n        },\n        copyBillingToShipping() {\n            this.B_Address1 = this.C_Address1;\n            this.B_Address2 = this.C_Address2;\n            this.B_City = this.C_City;\n            this.B_State = this.C_State;\n            this.B_Country = this.C_Country;\n            this.B_ZIP = this.C_ZIP;\n        },\n          \n          \n        checkValid(){\n            debugger;\n            if(\n              this.B_Address1Error === \"\" &&\n                this.B_StateError === \"\" &&\n                this.B_CityError === \"\" &&\n                this.B_ZIPError === \"\" &&\n                this.B_CountryError === \"\" && \n                this.B_Address1 &&\n                this.B_State &&\n                this.B_City &&\n                this.B_ZIP &&\n                this.B_Country &&\n                this.C_Address1Error === \"\" &&\n                this.C_StateError === \"\" &&\n                this.C_CityError === \"\" &&\n                this.C_ZIPError === \"\" &&\n                this.C_CountryError === \"\" &&\n                this.C_Address1 &&\n                this.C_State &&\n                this.C_City &&\n                this.C_ZIP &&\n                this.C_Country\n            ){\n                this.billingAddress.address1 = this.C_Address1;\n                this.billingAddress.address2 = this.C_Address2;\n                this.billingAddress.city = this.C_City;\n                this.billingAddress.country = this.C_Country;\n                this.billingAddress.postalCode = this.C_ZIP;\n                this.billingAddress.state = this.C_State;\n                this.checkout.billingAddress = this.billingAddress;\n                this.shippingAddress.address1 = this.B_Address1;\n                this.shippingAddress.address2 = this.B_Address2;\n                this.shippingAddress.city = this.B_City;\n                this.shippingAddress.country = this.B_Country;\n                this.shippingAddress.postalCode = this.B_ZIP;\n                this.shippingAddress.state = this.B_State;\n                this.checkout.shippingAddress = this.shippingAddress;\n                this.$emit('update:checkout', this.checkout);\n                return true;\n            }\n            else if (\n              this.C_Address1Error === \"\" &&\n              this.C_StateError === \"\" &&\n              this.C_CityError === \"\" &&\n              this.C_ZIPError === \"\" &&\n              this.C_CountryError === \"\" &&\n              this.C_Address1 &&\n              this.C_State &&\n              this.C_City &&\n              this.C_ZIP &&\n              this.C_Country\n            ) {\n              this.copyBillingToShipping();\n              this.billingAddress.address1 = this.C_Address1 ; \n              this.billingAddress.address2 = this.C_Address2;\n              this.billingAddress.city = this.C_City;\n              this.billingAddress.country = this.C_Country;\n              this.billingAddress.postalCode = this.C_ZIP;\n              this.billingAddress.state = this.C_State;\n              this.checkout.billingAddress = this.billingAddress;\n              this.shippingAddress.address1 = this.B_Address1;\n              this.shippingAddress.address2 = this.B_Address2;\n              this.shippingAddress.city = this.B_City;\n              this.shippingAddress.country = this.B_Country;\n              this.shippingAddress.postalCode = this.B_ZIP;\n              this.shippingAddress.state = this.B_State;\n              this.checkout.shippingAddress = this.shippingAddress;\n              this.$emit('update:checkout', this.checkout);\n              return true;\n            }\n            else {\n                this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n                this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n                this.B_State = this.B_State ? this.B_State : \"\";\n                this.B_City = this.B_City ? this.B_City : \"\";\n                this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n                this.B_Country = this.B_Country ? this.B_Country : \"\";\n                this.C_Address1 = this.C_Address1 ? this.C_Address1 : \"\";\n                this.C_Address2 = this.C_Address2 ? this.C_Address2 : \"\";\n                this.C_State = this.C_State ? this.C_State : \"\";\n                this.C_City = this.C_City ? this.C_City : \"\";\n                this.C_ZIP = this.C_ZIP ? this.C_ZIP : \"\";\n                this.C_Country = this.C_Country ? this.C_Country : \"\";\n                this.billingAddress.address1 = this.C_Address1;\n                this.billingAddress.address2 = this.C_Address2;\n                this.billingAddress.city = this.C_City;\n                this.billingAddress.country = this.C_Country;\n                this.billingAddress.postalCode = this.C_ZIP;\n                this.billingAddress.state = this.C_State;\n                this.checkout.billingAddress = this.billingAddress;\n                this.shippingAddress.address1 = this.B_Address1;\n                this.shippingAddress.address2 = this.B_Address2;\n                this.shippingAddress.city = this.B_City;\n                this.shippingAddress.country = this.B_Country;\n                this.shippingAddress.postalCode = this.B_ZIP;\n                this.shippingAddress.state = this.B_State;\n                this.checkout.shippingAddress = this.shippingAddress;\n                this.$emit('update:checkout', this.checkout);\n                return false;\n                \n            }\n        },\n        // checkValid() {\n        //     debugger;\n        //     if (this.shippingSameAsBilling) {\n        //         if (\n        //             this.B_Address1Error === \"\" &&\n        //             this.B_StateError === \"\" &&\n        //             this.B_CityError === \"\" &&\n        //             this.B_ZIPError === \"\" &&\n        //             this.B_CountryError === \"\" &&\n        //             this.B_Address1 &&\n        //             this.B_State &&\n        //             this.B_City &&\n        //             this.B_ZIP &&\n        //             this.B_Country &&\n        //             this.C_Address1Error === \"\" &&\n        //             this.C_StateError === \"\" &&\n        //             this.C_CityError === \"\" &&\n        //             this.C_ZIPError === \"\" &&\n        //             this.C_CountryError === \"\" &&\n        //             this.C_Address1 &&\n        //             this.C_State &&\n        //             this.C_City &&\n        //             this.C_ZIP &&\n        //             this.C_Country\n        //         ) {\n        //             this.billingAddress.address1 = this.C_Address1;\n        //             this.billingAddress.address2 = this.C_Address2;\n        //             this.billingAddress.city = this.C_City;\n        //             this.billingAddress.country = this.C_Country;\n        //             this.billingAddress.postalCode = this.C_ZIP;\n        //             this.billingAddress.state = this.C_State;\n        //             this.checkout.billingAddress = this.billingAddress;\n        //             this.shippingAddress.address1 = this.B_Address1;\n        //             this.shippingAddress.address2 = this.B_Address2;\n        //             this.shippingAddress.city = this.B_City;\n        //             this.shippingAddress.country = this.B_Country;\n        //             this.shippingAddress.postalCode = this.B_ZIP;\n        //             this.shippingAddress.state = this.B_State;\n        //             this.checkout.shippingAddress = this.shippingAddress;\n        //             this.$emit('update:checkout', this.checkout);\n        //             return true;\n        //         } else {\n        //             this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n        //             this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n        //             this.B_State = this.B_State ? this.B_State : \"\";\n        //             this.B_City = this.B_City ? this.B_City : \"\";\n        //             this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n        //             this.B_Country = this.B_Country ? this.B_Country : \"\";\n        //             this.C_Address1 = this.C_Address1 ? this.C_Address1 : \"\";\n        //             this.C_Address2 = this.C_Address2 ? this.C_Address2 : \"\";\n        //             this.C_State = this.C_State ? this.C_State : \"\";\n        //             this.C_City = this.C_City ? this.C_City : \"\";\n        //             this.C_ZIP = this.C_ZIP ? this.C_ZIP : \"\";\n        //             this.C_Country = this.C_Country ? this.C_Country : \"\";\n        //             this.billingAddress.address1 = this.C_Address1;\n        //             this.billingAddress.address2 = this.C_Address2;\n        //             this.billingAddress.city = this.C_City;\n        //             this.billingAddress.country = this.C_Country;\n        //             this.billingAddress.postalCode = this.C_ZIP;\n        //             this.billingAddress.state = this.C_State;\n        //             this.checkout.billingAddress = this.billingAddress;\n        //             this.shippingAddress.address1 = this.B_Address1;\n        //             this.shippingAddress.address2 = this.B_Address2;\n        //             this.shippingAddress.city = this.B_City;\n        //             this.shippingAddress.country = this.B_Country;\n        //             this.shippingAddress.postalCode = this.B_ZIP;\n        //             this.shippingAddress.state = this.B_State;\n        //             this.checkout.shippingAddress = this.shippingAddress;\n        //             this.$emit('update:checkout', this.checkout);\n        //             return false;\n        //         }\n        //     } else {\n        //         if (\n        //             this.S_Address1Error === \"\" &&\n        //             this.S_StateError === \"\" &&\n        //             this.S_CityError === \"\" &&\n        //             this.S_ZIPError === \"\" &&\n        //             this.S_CountryError === \"\" &&\n        //             this.S_Address1 &&\n        //             this.S_State &&\n        //             this.S_City &&\n        //             this.S_ZIP &&\n        //             this.S_Country\n        //         ) {\n        //             this.billingAddress.address1 = this.C_Address1;\n        //             this.billingAddress.address2 = this.C_Address2;\n        //             this.billingAddress.city = this.C_City;\n        //             this.billingAddress.country = this.C_Country;\n        //             this.billingAddress.postalCode = this.C_ZIP;\n        //             this.billingAddress.state = this.C_State;\n        //             this.checkout.billingAddress = this.billingAddress;\n        //             this.shippingAddress.address1 = this.B_Address1;\n        //             this.shippingAddress.address2 = this.B_Address2;\n        //             this.shippingAddress.city = this.B_City;\n        //             this.shippingAddress.country = this.B_Country;\n        //             this.shippingAddress.postalCode = this.B_ZIP;\n        //             this.shippingAddress.state = this.B_State;\n        //             this.checkout.shippingAddress = this.shippingAddress;\n        //             this.$emit('update:checkout', this.checkout);\n        //             return true;\n        //         } else {\n        //             this.B_Address1 = this.B_Address1 ? this.B_Address1 : \"\";\n        //             this.B_Address2 = this.B_Address2 ? this.B_Address2 : \"\";\n        //             this.B_State = this.B_State ? this.B_State : \"\";\n        //             this.B_City = this.B_City ? this.B_City : \"\";\n        //             this.B_ZIP = this.B_ZIP ? this.B_ZIP : \"\";\n        //             this.B_Country = this.B_Country ? this.B_Country : \"\";\n        //             this.C_Address1 = this.C_Address1 ? this.C_Address1 : \"\";\n        //             this.C_Address2 = this.C_Address2 ? this.C_Address2 : \"\";\n        //             this.C_State = this.C_State ? this.C_State : \"\";\n        //             this.C_City = this.C_City ? this.C_City : \"\";\n        //             this.C_ZIP = this.C_ZIP ? this.C_ZIP : \"\";\n        //             this.C_Country = this.C_Country ? this.C_Country : \"\";\n        //             this.billingAddress.address1 = this.C_Address1;\n        //             this.billingAddress.address2 = this.C_Address2;\n        //             this.billingAddress.city = this.C_City;\n        //             this.billingAddress.country = this.C_Country;\n        //             this.billingAddress.postalCode = this.C_ZIP;\n        //             this.billingAddress.state = this.C_State;\n        //             this.checkout.billingAddress = this.billingAddress;\n        //             this.shippingAddress.address1 = this.B_Address1;\n        //             this.shippingAddress.address2 = this.B_Address2;\n        //             this.shippingAddress.city = this.B_City;\n        //             this.shippingAddress.country = this.B_Country;\n        //             this.shippingAddress.postalCode = this.B_ZIP;\n        //             this.shippingAddress.state = this.B_State;\n        //             this.checkout.shippingAddress = this.shippingAddress;\n        //             this.$emit('update:checkout', this.checkout);\n        //             return false;\n        //         }\n        //     }\n        // },\n        \n        customerIsWithoutBranches() {\n            return this.customerData.branches == undefined || this.customerData.branches == null || this.customerData.branches.lenght == 0;\n        },\n        validateAndSet(prop, val) {\n            if (val.length <= 5) {\n              this[`ValidationClass${prop}`] = 'form-control is-invalid';\n              this[`${prop}Error`] = this.errorCode2;\n            } else if (val.length > 5 && val.length < 50) {\n              this[`ValidationClass${prop}`] = 'form-control is-valid';\n              this[`${prop}Error`] = '';\n            } else {\n              this[`ValidationClass${prop}`] = 'form-control';\n              this[`${prop}Error`] = '';\n            }\n        },\n        validateZIP(prop, val) {\n            if (/^\\d{5}$/.test(val)) {\n              this[`ValidationClass${prop}`] = 'form-control is-valid';\n              this[`${prop}Error`] = '';\n            } else {\n              this[`ValidationClass${prop}`] = 'form-control is-invalid';\n              this[`${prop}Error`] = 'ZIP code must be a valid 5-digit number';\n            }\n          }\n          \n    },\n    computed: {\n        Checkout:{\n            get() {\n                return this.checkout; \n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n        \n    },\n    watch: {\n        B_Address1(val) {\n            this.validateAndSet('B_Address1', val);\n          },\n          B_Address2(val) {\n            this.validateAndSet('B_Address2', val);\n          },\n          B_City(val) {\n            this.validateAndSet('B_City', val);\n          },\n          B_State(val) {\n            this.validateAndSet('B_State', val);\n          },\n          B_Country(val) {\n            this.validateAndSet('B_Country', val);\n          },\n          B_ZIP(val) {\n            this.validateZIP('B_ZIP', val);\n          },\n          C_Address1(val) {\n            this.validateAndSet('C_Address1', val);\n          },\n          C_Address2(val) {\n            this.validateAndSet('C_Address2', val);\n          },\n          C_City(val) {\n            this.validateAndSet('C_City', val);\n          },\n          C_State(val) {\n            this.validateAndSet('C_State', val);\n          },\n          C_Country(val) {\n            this.validateAndSet('C_Country', val);\n          },\n          C_ZIP(val) {\n            this.validateZIP('C_ZIP', val);\n          },\n        \n        \n    }\n}\napp.component('custom_billing_retail', {\n    extends: custom_billing_retail,\n    template: '#custom_billing_retail'\n});"
  },
  {
    "Name": "custom_hjgh",
    "Html": "",
    "Translations": [],
    "Js": "const custom_hjgh  = {\n        props:\n            {},\n        data() {\n            return {\n            }\n            },\n        mounted(){\n        }\n}\n\napp.component('custom_hjgh', {\n    extends: custom_hjgh,\n    template: '#custom_hjgh'\n});"
  },
  {
    "Name": "custom_payment",
    "Html": "<h2 class=\"h6 pb-3 mb-2\">##Choose_payment_method##</h2>\r\n    <div v-if=\"checkout.paymentMethods !== null && checkout.paymentMethods.providers.length > 0\" class=\"\" id=\"payment-method\">\r\n        <div v-for=\"(provider, index) in checkout.paymentMethods.providers\" class=\"\">\r\n            <input type=\"radio\" :id=\"provider.provider\" @change=\"setPayment\" :value=\"provider\" v-model=\"selectedPaymentMethod\" class=\"me-2\" />\r\n            <label :for=\"provider.provider\">{{provider.name}}</label>\r\n        </div>\r\n        <div class=\"mt-4\" v-if=\"selectedPaymentMethod?.message\" v-html=\"selectedPaymentMethod.message\"></div>\r\n    </div>",
    "Translations": [],
    "Js": "const custom_payment  = {\n        props:\n            {model : Object},\n        data() {\n            return {\n                checkout:null,\n                selectedPaymentMethod: null,\n            }\n            },\n        mounted(){\n            this.checkout = this.model;\n        },\n        methods: {\n            setPayment() {\n                this.checkout.payment = {};\n                this.checkout.payment.provider = this.selectedPaymentMethod.provider;\n            },\n            checkValid(){\n                return !!this.selectedPaymentMethod.provider;\n            }\n        },\n        computed: {\n            Checkout:{\n                get() {\n                    return this.checkout;\n                },\n                set(value) {\n                    this.checkout = value;\n                    this.$emit('update:checkout', value);\n                }\n            },\n        }\n}\n\napp.component('custom_payment', {\n    extends: custom_payment,\n    template: '#custom_payment'\n});"
  },
  {
    "Name": "custom_review",
    "Html": "<!-- Order details-->\r\n<div v-if=\"this.activeStep !== 'orderplaced'\" >\r\n<h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\">##Review_your_order##</h2>\r\n\r\n<div v-for=\"(line, index) in checkout.cartItems\" v-bind:key=\"product\" class=\"d-sm-flex justify-content-between align-items-center my-2 pb-3 border-bottom\">\r\n    <div class=\"d-block d-sm-flex align-items-center text-center text-sm-start\">\r\n        <a class=\"d-flex justify-content-between mx-auto me-sm-4\" href=\"#\"></a>\r\n        <img onerror=\"this.src='this._getNoImageUrl()';\" v-if=\"line.imageLink\" class=\"rounded-3  me-3\" :src=\"line.imageLink\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\r\n        <img v-else class=\"rounded-3 me-3\" :src=\"this._getNoImageUrl()\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\r\n        <div class=\"pt-2\">\r\n            <span v-if=\"line.sku!=null\" class=\"d-block text-secondary fs-sm fw-bold pb-1\">{{line.sku}}</span>\r\n            <h3 class=\"product-title fs-base mb-2\"><a :href=\"'/product/'+ line.link\">{{line.productTitle}}</a></h3>\r\n            <div class=\"fs-lg body-secondary-text pt-2\">\r\n\r\n                <span class=\"body-secondary-text\">{{calculateCurrency(line.price)}} </span>\r\n                <del v-if=\"hasDiscount(line)\" class=\"fs-sm text-muted\">  {{ this._calculateCurrency(line.lineValue+line.discountValue)}}</del>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"pt-2 pt-sm-0 ps-sm-3 mx-auto mx-sm-0 text-center text-sm-start\" style=\"max-width: 9rem;\">\r\n        <p class=\"mb-0\"><span class=\"text-muted fs-sm\">##Quantity##:</span><span>&nbsp;{{line.quantity}}</span></p>\r\n        <p>{{calculateUnitName(line.salesUnitId)}} </p>\r\n        <a class=\"btn btn-link px-0\" @click=\"ActivateStep3()\"></a>\r\n    </div>\r\n\r\n</div>\r\n<!-- Client details-->\r\n<div  class=\"bg-secondary rounded-3 px-4 pt-4 pb-2\">\r\n    <div class=\"row\">\r\n        <div v-if=\"ShippingAddress.address1==null\" class=\"col-sm-12\">\r\n            <div class=\"col-sm-12\">\r\n                <h4 class=\"h6\">##Billing## </h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li>\r\n                    <li>\r\n                        <span class=\"text-muted\">##Address##:&nbsp;</span>{{BillingAddress.address1 }}, {{BillingAddress.city }}, {{BillingAddress.postalCode}}, {{BillingAddress.country}}\r\n                    </li>\r\n                    <!-- <li><span class=\"text-muted\">Phone:&nbsp;</span>+1 (808) 764 554 330</li>-->\r\n                </ul>\r\n            </div>\r\n        </div> \r\n        <div v-else-if=\"ShippingAddress.address1!=null\" class=\"col-sm-12\">\r\n            <div class=\"col-sm-6\">\r\n                <h4 class=\"h6\">##Billing_to##:</h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li>\r\n                    <li>\r\n                        <span class=\"text-muted\">##Address##:&nbsp;</span>{{BillingAddress.address1 }}, {{BillingAddress.city }}, {{BillingAddress.postalCode}}, {{BillingAddress.country}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <h4 class=\"h6\">##Shipping_to##:</h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.SelectedBranch.name}}</li>\r\n                    <li>\r\n                        <span class=\"text-muted\">##Address##:&nbsp;</span>{{ShippingAddress.address1 }} ,{{ShippingAddress.city}}, {{ShippingAddress.postalCode}}, {{ShippingAddress.country}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"selectedCarrier !== null\" class=\"col-sm-12\">\r\n            <div class=\"col-sm-12\">\r\n                <h4 class=\"h6\">##Carriers##:</h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <li>\r\n                        <span class=\"text-muted\">##Name##:&nbsp;</span>{{selectedCarrier.carrier.name}}\r\n                    </li>\r\n                    <li>\r\n                        <span class=\"text-muted\">##TransitTime##:&nbsp;</span>{{selectedCarrier.carrier.transitTime}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div v-else>\r\n    <div class=\"container pb-5 mb-sm-4\">\r\n        <div class=\"pt-5\">`\r\n            <div v-if=\"isLoading\" class=\"py-5 mt-sm-3 text-center\">\r\n                <div class=\"spinner-grow my-5\" role=\"status\">\r\n                    <span class=\"visually-hidden\">##Loading##...</span>\r\n                </div>\r\n            </div>\r\n            <div v-else class=\"card py-3 mt-sm-3\">\r\n                <div class=\"card-body text-center\">\r\n                    <h2 class=\"h4 pb-3\">##Thank_you_for_your_order##!</h2>\r\n                    <p class=\"fs-sm mb-2\">##Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible##.</p>\r\n                    <p class=\"fs-sm mb-2\">##Make_sure_you_make_note_of_your_order_number_which_is## <span class='fw-medium'>{{checkout.orderCode}}</span></p>\r\n                    <p class=\"fs-sm\">##You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order##. </p><a class=\"btn btn-primary mt-3 me-3\" href=\"/\">##Go_back_shopping##</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
    "Translations": [],
    "Js": "const custom_review  = {\n        props:\n            { \n                model : Object,\n                steps:Array,\n                activeStep : String,\n                buttonLoading : Boolean,\n            },\n        data() {\n            return {\n                checkout:null,\n                selectedcarrier : null,\n                carriers: null,\n                selectedCarrier: null,\n                selectedBranch: null,\n                units: [],\n                billingAddress: null,\n                currentStep : this.activeStep,\n                loader : this.buttonLoading\n            }\n            },\n        mounted(){\n            this.checkout = this.model;\n            this.customerData = this.checkout.customer;\n            this.billingAddress = this.checkout.billingAddress; \n            this.shippingAddress = this.checkout.shippingAddress;\n            this.selectedBranch = this.checkout.customerBranchId == null ? this.checkout.addresses[0] : this.checkout.customer.branches.find((branch) => branch.id === this.checkout.customerBranchId);\n            this.carriers = this.checkout.shippingOptions;\n        },\n        methods: {\n            calculateCurrency(price) {\n                return this._calculateCurrency(price);  \n            },\n            hasDiscount(item) {\n                if (item.initialPrice == undefined || item.initialPrice == null || item.initialPrice <= item.price)\n                    return false;\n    \n                return true;\n            },\n            calculateUnitName(id) {\n                let unit = this.units.find(u => u.id === id);\n                if (unit !== undefined && unit !== null) {\n                    if (unit.name !== undefined && unit.name !== null && unit.name !== \"\") {\n                        return `(${unit.name})`\n                    }\n                }\n            },\n            oncheckoutComplete(e) {\n                this.loader = false;\n                this.checkoutData = e;\n                this.customerData = {};\n                this.checkout.cartItems = {};\n                this.dataLoaded = true;\n                this.currentStep = 'orderplaced';\n                this.$emit('update:activeStep', this.currentStep); \n                this.$emit('update:checkout', this.checkoutData);\n                this.$emit('update:buttonLoading', this.loader);\n\n\n            },\n            \n            oncheckoutCompleteError(status, e) {\n                console.log(status, e);\n            }, \n            placeOrder() {\n                debugger;\n\n                this.checkout.shippingAddress = this.ShippingAddress;\n    \n                this.checkout.customerId = this.customerData.id;\n    \n                // this.checkout.customerBranchId = this.selectedBranch.id;\n    \n                if (!this.steps.includes(\"billing\")) {\n                    if (this.selectedBranch.id != this.customerData.id) {\n                        this.checkout.customerBranchId = this.selectedBranch.id;\n                    }\n                }\n    \n                this.checkOut();\n            },\n            checkOut() {\n                debugger;\n                this.dataLoaded = false;\n                this.loader = true;\n                this.$emit('update:buttonLoading', this.loader);\n                this._initiateCompleteCheckout(this.checkout, this.oncheckoutComplete, this.oncheckoutCompleteError)\n            },\n\n            checkValid(){\n                return true; \n            }\n        },\n        computed: {\n            Checkout:{\n                get() {\n                    return this.checkout;\n                },\n                set(value) {\n                    this.checkout = value;\n                    this.$emit('update:checkout', value);\n                }\n            },\n            BillingAddress: {\n                get() {\n                    this.customerData.billingAddress = this.billingAddress;\n                    return this.billingAddress;\n                },\n                set(newVal) {\n                    this.billingAddress = newVal;\n                }\n            },\n            SelectedBranch: {\n                get() {\n                    return this.selectedBranch;\n                },\n                set(newVal) {\n                    this.selectedBranch = newVal;\n                }\n            },\n            ShippingAddress: {\n                get() {\n                    return this.shippingAddress;\n                },\n                set(newVal) {\n                    this.shippingAddress = newVal;\n                }\n            },\n        }\n}\n\napp.component('custom_review', {\n    extends: custom_review,\n    template: '#custom_review'\n});"
  },
  {
    "Name": "custom_review_retail",
    "Html": "<!-- Order details-->\r\n<div v-if=\"this.activeStep !== 'orderplaced'\" >\r\n\r\n<h2 class=\"h6 pt-1 pb-3 mb-3 border-bottom\">##Review_your_order##</h2>\r\n\r\n<div v-for=\"(line, index) in checkout.cartItems\" v-bind:key=\"product\" class=\"d-sm-flex justify-content-between align-items-center my-2 pb-3 border-bottom\">\r\n    <div class=\"d-block d-sm-flex align-items-center text-center text-sm-start\">\r\n        <a class=\"d-flex justify-content-between mx-auto me-sm-4\" href=\"#\"></a>\r\n        <img onerror=\"this.src='this._getNoImageUrl()';\" v-if=\"line.imageLink\" class=\"rounded-3  me-3\" :src=\"line.imageLink\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\r\n        <img v-else class=\"rounded-3 me-3\" :src=\"this._getNoImageUrl()\" :alt=\"line.productTitle\" style=\"width: 150px; max-height: 200px; object-fit: cover;\">\r\n        <div class=\"pt-2\">\r\n            <span v-if=\"line.sku!=null\" class=\"d-block text-secondary fs-sm fw-bold pb-1\">{{line.sku}}</span>\r\n            <h3 class=\"product-title fs-base mb-2\"><a :href=\"'/product/'+ line.link\">{{line.productTitle}}</a></h3>\r\n            <div class=\"fs-lg body-secondary-text pt-2\">\r\n\r\n                <span class=\"body-secondary-text\">{{calculateCurrency(line.price)}} </span>\r\n                <del v-if=\"hasDiscount(line)\" class=\"fs-sm text-muted\">  {{ this._calculateCurrency(line.lineValue+line.discountValue)}}</del>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"pt-2 pt-sm-0 ps-sm-3 mx-auto mx-sm-0 text-center text-sm-start\" style=\"max-width: 9rem;\">\r\n\r\n        <p class=\"mb-0\"><span class=\"text-muted fs-sm\">##Quantity##:</span><span>&nbsp;{{line.quantity}}</span></p>\r\n        <p>{{calculateUnitName(line.salesUnitId)}} </p>\r\n        <a class=\"btn btn-link px-0\" @click=\"ActivateStep3()\"></a>\r\n    </div>\r\n\r\n</div>\r\n<!-- Client details-->\r\n<div class=\"bg-secondary rounded-3 px-4 pt-4 pb-2\">\r\n    <div class=\"row\">\r\n        <div v-if=\"this.checkout.shippingAddress.address1==null\" class=\"col-sm-12\">\r\n            <div class=\"col-sm-12\">\r\n                <h4 class=\"h6\">##Billing## </h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <!-- <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li> -->\r\n                    <li>\r\n                        <span class=\"text-muted\">##Address##:&nbsp;</span>{{this.checkout.billingAddress.address1 }}, {{this.checkout.billingAddress.city }}, {{this.checkout.billingAddress.postalCode}}, {{this.checkout.billingAddress.country}}\r\n                    </li>\r\n                    <!-- <li><span class=\"text-muted\">Phone:&nbsp;</span>+1 (808) 764 554 330</li>-->\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div v-else-if=\"this.checkout.shippingAddress.address1!=null\" class=\"col-sm-12\">\r\n            <div class=\"col-sm-6\">\r\n                <h4 class=\"h6\">##Billing_to##:</h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <!-- <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.customerData.name}}</li> -->\r\n                    <li>\r\n                        <span class=\"text-muted\">##Address##:&nbsp;</span>{{this.checkout.billingAddress.address1 }}, {{this.checkout.billingAddress.city }}, {{this.checkout.billingAddress.postalCode}}, {{this.checkout.billingAddress.country}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <h4 class=\"h6\">##Shipping_to##:</h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <!-- <li><span class=\"text-muted\">##Client##:&nbsp;</span>{{this.SelectedBranch.name}}</li> -->\r\n                    <li>\r\n                        <span class=\"text-muted\">##Address##:&nbsp;</span>{{this.checkout.shippingAddress.address1 }}, {{this.checkout.shippingAddress.city }}, {{this.checkout.shippingAddress.postalCode}}, {{this.checkout.shippingAddress.country}}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"selectedCarrier !== null\" class=\"col-sm-12\">\r\n            <div class=\"col-sm-12\">\r\n                <h4 class=\"h6\">##Carriers##:</h4>\r\n                <ul class=\"list-unstyled fs-sm\">\r\n                    <li>\r\n                        <span class=\"text-muted\">##Name##:&nbsp;</span>{{selectedCarrier.carrier.name}}\r\n                    </li>\r\n                    <li>\r\n                        <span class=\"text-muted\">##TransitTime##:&nbsp;</span>{{selectedCarrier.carrier.transitTime}}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<div v-else>\r\n    <div class=\"container pb-5 mb-sm-4\">\r\n        <div class=\"pt-5\">`\r\n            <div v-if=\"isLoading\" class=\"py-5 mt-sm-3 text-center\">\r\n                <div class=\"spinner-grow my-5\" role=\"status\">\r\n                    <span class=\"visually-hidden\">##Loading##...</span>\r\n                </div>\r\n            </div>\r\n            <div v-else class=\"card py-3 mt-sm-3\">\r\n                <div class=\"card-body text-center\">\r\n                    <h2 class=\"h4 pb-3\">##Thank_you_for_your_order##!</h2>\r\n                    <p class=\"fs-sm mb-2\">##Your_order_has_been_placed_and_will_be_processed_as_soon_as_possible##.</p>\r\n                    <p class=\"fs-sm mb-2\">##Make_sure_you_make_note_of_your_order_number_which_is## <span class='fw-medium'>{{checkout.orderCode}}</span></p>\r\n                    <p class=\"fs-sm\">##You_will_be_receiving_an_email_shortly_with_confirmation_of_your_order##. </p><a class=\"btn btn-primary mt-3 me-3\" href=\"/\">##Go_back_shopping##</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
    "Translations": [],
    "Js": "const custom_review_retail  = {\n    props:\n        { \n            model : Object,\n            steps:Array,\n            activeStep : String,\n            buttonLoading : Boolean,\n    },\n    data() {\n        return {\n            checkout:null,\n            selectedcarrier : null,\n            carriers: null,\n            selectedCarrier: null,\n            selectedBranch: null,\n            units: [],\n            billingAddress: null,\n            currentStep : this.activeStep,\n            loader : this.buttonLoading\n\n        }\n        },\n    mounted(){\n        this.checkout = this.model;\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price);\n        },\n        hasDiscount(item) {\n            if (item.initialPrice == undefined || item.initialPrice == null || item.initialPrice <= item.price)\n                return false;\n\n            return true;\n        },\n        calculateUnitName(id) {\n            let unit = this.units.find(u => u.id === id);\n            if (unit !== undefined && unit !== null) {\n                if (unit.name !== undefined && unit.name !== null && unit.name !== \"\") {\n                    return `(${unit.name})`\n                }\n            }\n        },\n       oncheckoutComplete(e) {\n                this.loader = false;\n                this.checkoutData = e;\n                this.checkout.cartItems = {};\n                this.dataLoaded = true;\n                this.currentStep = 'orderplaced';\n                this.$emit('update:activeStep', this.currentStep); \n                this.$emit('update:checkout', this.checkoutData);\n                this.$emit('update:buttonLoading', this.loader);\n            },\n            \n            oncheckoutCompleteError(status, e) {\n                console.log(status, e);\n            }, \n            placeOrder() {\n                this.checkout.shippingAddress = this.ShippingAddress;\n                this.checkOut();\n            },\n            checkOut() {\n                debugger;\n                this.dataLoaded = false;\n                this.loader = true;\n                this.$emit('update:buttonLoading', this.loader);\n                this._initiateCompleteCheckout(this.checkout, this.oncheckoutComplete, this.oncheckoutCompleteError)\n            },\n\n            checkValid(){\n                return true; \n            }\n    },\n    computed: {\n        Checkout:{\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n    }\n}\n\napp.component('custom_review_retail', {\nextends: custom_review_retail,\ntemplate: '#custom_review_retail'\n});"
  },
  {
    "Name": "custom_shipping",
    "Html": "<h2 class=\"h6 pb-3 mb-2\">##Choose_shipping_method##</h2>\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-hover fs-sm border-top\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"align-middle\"></th>\r\n                    <th class=\"align-middle\">##Shipping_method##</th>\r\n                    <th class=\"align-middle\">##Delivery_time##</th>\r\n                    <th class=\"align-middle\">##Handling_fee##</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody v-if=\"isCarriersLoading\">\r\n                <tr>\r\n                    <td class=\"text-center\" colspan=\"5\">\r\n                        <div class=\"spinner-border\" role=\"status\">\r\n                            <span class=\"visually-hidden\">##Loading##...</span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            \r\n            <tbody v-if=\"carriers!== null && !isCarriersLoading\">\r\n                <tr v-for=\"carrier in carriers\">\r\n                    <td>\r\n                        <div class=\"form-check mb-4\">\r\n                            <input class=\"form-check-input\" type=\"radio\" :id=\"carrier.carrier.id\" v-model=\"selectedCarrierId\" @change=\"setCarrier\" v-bind:value=\"carrier.carrier.id\" name=\"shipping-method\">\r\n                            <label class=\"form-check-label\" :for=\"carrier.carrier.id\"></label>\r\n                        </div>\r\n                    </td>\r\n                    <td class=\"align-middle\">\r\n                        <img width=\"60\" v-if=\"carrier.carrier.logo?.link != null\" :src=\"carrier.carrier.logo?.link\" />\r\n                        <span v-else class=\"text-dark fw-medium\">{{carrier.shippingLine.title}}</span><br><span class=\"text-muted\"></span>\r\n                    </td>\r\n                    <td class=\"align-middle\">{{carrier.carrier.transitTime}}</td>\r\n                    <td class=\"align-middle\">{{calculateCurrency(carrier.shippingLine.totalAmount)}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    ",
    "Translations": [],
    "Js": "const custom_shipping = {\n    props:\n        {\n            model : Object,\n        \n        },\n    data() {\n        return {\n            checkout:null,\n            selectedCarrierId: null,\n            carriers: null,\n            selectedCarrier: null,\n            shippingValue: null,\n            isCarriersLoading: false,\n        }\n    },\n    mounted() {\n        this.checkout = this.model;\n        this.carriers = this.checkout.shippingOptions;\n    },\n    methods: {\n        calculateCurrency(price) {\n            return this._calculateCurrency(price);\n        },\n        \n        setCarrier() {\n            this.selectedCarrier = this.carriers.find(c => c.carrier.id === this.selectedCarrierId);\n            this.shippingValue = this.selectedCarrier.shippingLine.totalAmount;\n            this.checkout.shippingLine = this.selectedCarrier.shippingLine;\n            this.$emit('update:checkout', this.checkout);\n        },\n        checkValid(){\n            return !!this.selectedCarrier;\n        }\n    },\n    computed: {\n        Checkout:{\n            get() {\n                return this.checkout;\n            },\n            set(value) {\n                this.checkout = value;\n                this.$emit('update:checkout', value);\n            }\n        },\n    }\n}\n\napp.component('custom_shipping', {\n    extends: custom_shipping,\n    template: '#custom_shipping'\n});"
  }
]
